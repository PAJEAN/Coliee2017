<?xml version="1.0" encoding="MS932"?>
<dataset>	
<pair id="H22-1-A" label="Y">
<t1>
(Juristic Act of Minors)Article 5
(1)A minor must obtain the consent of his/her statutory agent to perform any juristic act;provided, however, that, this shall not apply to an act merely intended to acquire a right or to be relieved of a duty.
(ROOT
  (S
    (S
      (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
      (NP (DT A) (JJ minor))
      (VP (MD must)
        (VP (VB obtain)
          (NP
            (NP (DT the) (NN consent))
            (PP (IN of)
              (NP (JJ his\/her) (JJ statutory) (NN agent))))
          (S
            (VP (TO to)
              (VP (VB perform)
                (NP (DT any) (JJ juristic) (NN act))))))))
    (: ;)
    (S
      (S
        (VP (VBD provided) (, ,)
          (ADVP (RB however))
          (, ,)
          (SBAR (IN that) (, ,)
            (S
              (NP (DT this))
              (VP (MD shall) (RB not)
                (VP (VB apply)
                  (PP (TO to)
                    (NP (DT an) (NN act)))))))))
      (ADVP (RB merely))
      (VP (VBN intended)
        (S
          (VP
            (VP (TO to)
              (VP (VB acquire)
                (NP (DT a) (NN right))))
            (CC or)
            (VP (TO to)
              (VP (VB be)
                (VP (VBN relieved)
                  (PP (IN of)
                    (NP (DT a) (NN duty))))))))))
    (. .)))

dep(obtain-7, 1-2)
det(minor-5, A-4)
nsubj(obtain-7, minor-5)
aux(obtain-7, must-6)
root(ROOT-0, obtain-7)
det(consent-9, the-8)
dobj(obtain-7, consent-9)
amod(agent-13, his\/her-11)
amod(agent-13, statutory-12)
prep_of(consent-9, agent-13)
aux(perform-15, to-14)
xcomp(obtain-7, perform-15)
det(act-18, any-16)
amod(act-18, juristic-17)
dobj(perform-15, act-18)
csubj(intended-34, provided-20)
advmod(provided-20, however-22)
complm(apply-29, that-24)
nsubj(apply-29, this-26)
aux(apply-29, shall-27)
neg(apply-29, not-28)
ccomp(provided-20, apply-29)
det(act-32, an-31)
prep_to(apply-29, act-32)
advmod(intended-34, merely-33)
parataxis(obtain-7, intended-34)
aux(acquire-36, to-35)
ccomp(intended-34, acquire-36)
det(right-38, a-37)
dobj(acquire-36, right-38)
aux(relieved-42, to-40)
auxpass(relieved-42, be-41)
ccomp(intended-34, relieved-42)
conj_or(acquire-36, relieved-42)
det(duty-45, a-44)
prep_of(relieved-42, duty-45)

(2)A juristic act in contravention of the provision of the preceding paragraph may be rescinded.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
    (NP
      (NP (DT A) (JJ juristic) (NN act))
      (PP (IN in)
        (NP
          (NP (NN contravention))
          (PP (IN of)
            (NP
              (NP (DT the) (NN provision))
              (PP (IN of)
                (NP (DT the) (VBG preceding) (NN paragraph))))))))
    (VP (MD may)
      (VP (VB be)
        (ADJP (JJ rescinded))))
    (. .)))

dep(rescinded-18, 2-2)
det(act-6, A-4)
amod(act-6, juristic-5)
nsubj(rescinded-18, act-6)
prep_in(act-6, contravention-8)
det(provision-11, the-10)
prep_of(contravention-8, provision-11)
det(paragraph-15, the-13)
amod(paragraph-15, preceding-14)
prep_of(provision-11, paragraph-15)
aux(rescinded-18, may-16)
cop(rescinded-18, be-17)
root(ROOT-0, rescinded-18)

(3)Notwithstanding the provision of paragraph 1, in cases the statutory agent permits the disposition of property by specifying the purpose thereof, a minor may freely dispose of the same to the extent of such purpose.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 3) (-RRB- -RRB-))
    (PP (IN Notwithstanding)
      (NP
        (NP (DT the) (NN provision))
        (PP (IN of)
          (NP (NN paragraph) (CD 1)))
        (, ,)
        (PP (IN in)
          (NP
            (NP (NNS cases))
            (SBAR
              (S
                (NP (DT the) (JJ statutory) (NN agent))
                (VP (VBZ permits)
                  (NP
                    (NP (DT the) (NN disposition))
                    (PP (IN of)
                      (NP (NN property))))
                  (PP (IN by)
                    (S
                      (VP (VBG specifying)
                        (NP (DT the) (NN purpose))
                        (ADVP (RB thereof))))))))))))
    (, ,)
    (NP (DT a) (JJ minor))
    (VP (MD may)
      (ADVP (RB freely))
      (VP (VB dispose)
        (PP (IN of)
          (NP (DT the) (JJ same)))
        (PP (TO to)
          (NP
            (NP (DT the) (NN extent))
            (PP (IN of)
              (NP (JJ such) (NN purpose)))))))
    (. .)))

dep(dispose-31, 3-2)
det(provision-6, the-5)
prep_notwithstanding(dispose-31, provision-6)
prep_of(provision-6, paragraph-8)
num(paragraph-8, 1-9)
prep_in(provision-6, cases-12)
det(agent-15, the-13)
amod(agent-15, statutory-14)
nsubj(permits-16, agent-15)
rcmod(cases-12, permits-16)
det(disposition-18, the-17)
dobj(permits-16, disposition-18)
prep_of(disposition-18, property-20)
prepc_by(permits-16, specifying-22)
det(purpose-24, the-23)
dobj(specifying-22, purpose-24)
advmod(specifying-22, thereof-25)
det(minor-28, a-27)
nsubj(dispose-31, minor-28)
aux(dispose-31, may-29)
advmod(dispose-31, freely-30)
root(ROOT-0, dispose-31)
det(same-34, the-33)
prep_of(dispose-31, same-34)
det(extent-37, the-36)
prep_to(dispose-31, extent-37)
amod(purpose-40, such-39)
prep_of(extent-37, purpose-40)

The same shall apply in cases his/her statutory agent permits the disposition of the property without specifying any purpose.
(ROOT
  (S
    (NP (DT The) (JJ same))
    (VP (MD shall)
      (VP (VB apply)
        (PP (IN in)
          (NP
            (NP (NNS cases))
            (SBAR
              (S
                (NP (JJ his\/her) (JJ statutory) (NN agent))
                (VP (VBZ permits)
                  (NP
                    (NP (DT the) (NN disposition))
                    (PP (IN of)
                      (NP (DT the) (NN property))))
                  (PP (IN without)
                    (S
                      (VP (VBG specifying)
                        (NP (DT any) (NN purpose))))))))))))
    (. .)))

det(same-2, The-1)
nsubj(apply-4, same-2)
aux(apply-4, shall-3)
root(ROOT-0, apply-4)
prep_in(apply-4, cases-6)
amod(agent-9, his\/her-7)
amod(agent-9, statutory-8)
nsubj(permits-10, agent-9)
rcmod(cases-6, permits-10)
det(disposition-12, the-11)
dobj(permits-10, disposition-12)
det(property-15, the-14)
prep_of(disposition-12, property-15)
prepc_without(permits-10, specifying-17)
det(purpose-19, any-18)
dobj(specifying-17, purpose-19)

</t1>
<t2>
A minor can freely dispose of assets the statutory agent permits the disposition without specifying the purpose.
(ROOT
  (S
    (NP (DT A) (JJ minor))
    (VP (MD can)
      (ADVP (RB freely))
      (VP (VB dispose)
        (PP (IN of)
          (NP
            (NP (NNS assets))
            (SBAR
              (S
                (NP (DT the) (JJ statutory) (NN agent))
                (VP (VBZ permits)
                  (NP (DT the) (NN disposition))
                  (PP (IN without)
                    (S
                      (VP (VBG specifying)
                        (NP (DT the) (NN purpose))))))))))))
    (. .)))

det(minor-2, A-1)
nsubj(dispose-5, minor-2)
aux(dispose-5, can-3)
advmod(dispose-5, freely-4)
root(ROOT-0, dispose-5)
prep_of(dispose-5, assets-7)
det(agent-10, the-8)
amod(agent-10, statutory-9)
nsubj(permits-11, agent-10)
rcmod(assets-7, permits-11)
det(disposition-13, the-12)
dobj(permits-11, disposition-13)
prepc_without(permits-11, specifying-15)
det(purpose-17, the-16)
dobj(specifying-15, purpose-17)

</t2>
</pair>
<pair id="H22-1-I" label="N">
<t1>
(Capacity to Receive the Manifestation of Intention)Article 98-2
In cases the other party to the manifestation of intention is a minor or an adult ward at the time when the other party receives such manifestation of intention, the person who made the manifestation of intention may not assert his/her manifestation of intention against such other party;provided, however, that, this shall not apply after the statutory agent of such other party has acquired the knowledge of such manifestation of intention.
(ROOT
  (S
    (PP (IN In)
      (NP (NNS cases)))
    (NP
      (NP (DT the) (JJ other) (NN party))
      (PP (TO to)
        (NP
          (NP (DT the) (NN manifestation))
          (PP (IN of)
            (NP (NN intention))))))
    (VP (VBZ is)
      (NP
        (NP (DT a) (JJ minor))
        (CC or)
        (NP
          (NP (DT an) (JJ adult) (NN ward))
          (PP (IN at)
            (NP (DT the) (NN time)))))
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (DT the) (JJ other) (NN party))
          (VP (VBZ receives)
            (NP
              (NP (JJ such) (NN manifestation))
              (PP (IN of)
                (NP (NN intention)))))))
      (, ,)
      (NP
        (NP (DT the) (NN person))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD made)
              (SBAR
                (S
                  (NP
                    (NP (DT the) (NN manifestation))
                    (PP (IN of)
                      (NP (NN intention))))
                  (VP (MD may) (RB not)
                    (VP (VB assert)
                      (S
                        (NP
                          (NP (NN his\/her) (NN manifestation))
                          (PP (IN of)
                            (NP
                              (NP (NN intention))
                              (PP (IN against)
                                (NP (JJ such) (JJ other) (NN party))))))
                        (: ;)
                        (VP (VBD provided) (, ,)
                          (ADVP (RB however))
                          (, ,)
                          (SBAR (IN that) (, ,)
                            (S
                              (NP (DT this))
                              (VP (MD shall) (RB not)
                                (VP (VB apply)
                                  (SBAR (IN after)
                                    (S
                                      (NP
                                        (NP (DT the) (JJ statutory) (NN agent))
                                        (PP (IN of)
                                          (NP (JJ such) (JJ other) (NN party))))
                                      (VP (VBZ has)
                                        (VP (VBN acquired)
                                          (NP
                                            (NP (DT the) (NN knowledge))
                                            (PP (IN of)
                                              (NP
                                                (NP (JJ such) (NN manifestation))
                                                (PP (IN of)
                                                  (NP (NN intention)))))))))))))))))))))))))
    (. .)))

prep_in(minor-13, cases-2)
det(party-5, the-3)
amod(party-5, other-4)
nsubj(minor-13, party-5)
det(manifestation-8, the-7)
prep_to(party-5, manifestation-8)
prep_of(manifestation-8, intention-10)
cop(minor-13, is-11)
det(minor-13, a-12)
root(ROOT-0, minor-13)
det(ward-17, an-15)
amod(ward-17, adult-16)
conj_or(minor-13, ward-17)
det(time-20, the-19)
prep_at(ward-17, time-20)
advmod(receives-25, when-21)
det(party-24, the-22)
amod(party-24, other-23)
nsubj(receives-25, party-24)
advcl(minor-13, receives-25)
amod(manifestation-27, such-26)
dobj(receives-25, manifestation-27)
prep_of(manifestation-27, intention-29)
det(person-32, the-31)
attr(minor-13, person-32)
nsubj(made-34, person-32)
rcmod(person-32, made-34)
det(manifestation-36, the-35)
nsubj(assert-41, manifestation-36)
prep_of(manifestation-36, intention-38)
aux(assert-41, may-39)
neg(assert-41, not-40)
ccomp(made-34, assert-41)
nn(manifestation-43, his\/her-42)
nsubj(provided-51, manifestation-43)
prep_of(manifestation-43, intention-45)
amod(party-49, such-47)
amod(party-49, other-48)
prep_against(intention-45, party-49)
ccomp(assert-41, provided-51)
advmod(provided-51, however-53)
complm(apply-60, that-55)
nsubj(apply-60, this-57)
aux(apply-60, shall-58)
neg(apply-60, not-59)
ccomp(provided-51, apply-60)
mark(acquired-70, after-61)
det(agent-64, the-62)
amod(agent-64, statutory-63)
nsubj(acquired-70, agent-64)
amod(party-68, such-66)
amod(party-68, other-67)
prep_of(agent-64, party-68)
aux(acquired-70, has-69)
advcl(apply-60, acquired-70)
det(knowledge-72, the-71)
dobj(acquired-70, knowledge-72)
amod(manifestation-75, such-74)
prep_of(knowledge-72, manifestation-75)
prep_of(manifestation-75, intention-77)

</t1>
<t2>
If the other party of a manifestation of intention was a minor when the manifestation of intention was received, that manifestation of intention does not take effect.
(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (DT the) (JJ other) (NN party))
          (PP (IN of)
            (NP
              (NP (DT a) (NN manifestation))
              (PP (IN of)
                (NP (NN intention))))))
        (VP (VBD was)
          (NP
            (NP (DT a) (JJ minor))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP
                  (NP (DT the) (NN manifestation))
                  (PP (IN of)
                    (NP (NN intention))))
                (VP (VBD was)
                  (VP (VBN received)))))))))
    (, ,)
    (NP
      (NP (DT that) (NN manifestation))
      (PP (IN of)
        (NP (NN intention))))
    (VP (VBZ does) (RB not)
      (VP (VB take)
        (NP (NN effect))))
    (. .)))

mark(minor-12, If-1)
det(party-4, the-2)
amod(party-4, other-3)
nsubj(minor-12, party-4)
det(manifestation-7, a-6)
prep_of(party-4, manifestation-7)
prep_of(manifestation-7, intention-9)
cop(minor-12, was-10)
det(minor-12, a-11)
tmod(received-19, minor-12)
advcl(take-27, minor-12)
advmod(received-19, when-13)
det(manifestation-15, the-14)
nsubjpass(received-19, manifestation-15)
prep_of(manifestation-15, intention-17)
auxpass(received-19, was-18)
dep(minor-12, received-19)
det(manifestation-22, that-21)
nsubj(take-27, manifestation-22)
prep_of(manifestation-22, intention-24)
aux(take-27, does-25)
neg(take-27, not-26)
root(ROOT-0, take-27)
dobj(take-27, effect-28)

</t2>
</pair>
<pair id="H22-3-A" label="N">
<t1>
(Fraud or Duress)Article 96
(1)Manifestation of intention which is induced by any fraud or duress may be rescinded.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
    (NP
      (NP (NNP Manifestation))
      (PP (IN of)
        (NP (NN intention)))
      (SBAR
        (WHNP (WDT which))
        (S
          (VP (VBZ is)
            (VP (VBN induced)
              (PP (IN by)
                (NP
                  (NP (DT any) (NN fraud))
                  (CC or)
                  (NP (NNS duress)))))))))
    (VP (MD may)
      (VP (VB be)
        (ADJP (JJ rescinded))))
    (. .)))

dep(rescinded-17, 1-2)
nsubjpass(induced-9, Manifestation-4)
nsubj(rescinded-17, Manifestation-4)
prep_of(Manifestation-4, intention-6)
auxpass(induced-9, is-8)
rcmod(Manifestation-4, induced-9)
det(fraud-12, any-11)
agent(induced-9, fraud-12)
agent(induced-9, duress-14)
conj_or(fraud-12, duress-14)
aux(rescinded-17, may-15)
cop(rescinded-17, be-16)
root(ROOT-0, rescinded-17)

(2)In cases any third party commits any fraud inducing any person to make a manifestation of intention to the other party, such manifestation of intention may be rescinded only if the other party knew such fact.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
    (PP (IN In)
      (NP
        (NP (NNS cases))
        (SBAR
          (S
            (NP (DT any) (JJ third) (NN party))
            (VP (VBZ commits)
              (NP
                (NP (DT any) (NN fraud))
                (VP (VBG inducing)
                  (NP (DT any) (NN person)
                    (S
                      (VP (TO to)
                        (VP (VB make)
                          (NP
                            (NP (DT a) (NN manifestation))
                            (PP (IN of)
                              (NP (NN intention))))
                          (PP (TO to)
                            (NP (DT the) (JJ other) (NN party))))))))))))))
    (, ,)
    (NP
      (NP (JJ such) (NN manifestation))
      (PP (IN of)
        (NP (NN intention))))
    (VP (MD may)
      (VP (VB be)
        (ADJP (JJ rescinded))
        (SBAR (RB only) (IN if)
          (S
            (NP (DT the) (JJ other) (NN party))
            (VP (VBD knew)
              (NP (JJ such) (NN fact)))))))
    (. .)))

dep(rescinded-32, 2-2)
prep_in(rescinded-32, cases-5)
det(party-8, any-6)
amod(party-8, third-7)
nsubj(commits-9, party-8)
rcmod(cases-5, commits-9)
det(fraud-11, any-10)
dobj(commits-9, fraud-11)
partmod(fraud-11, inducing-12)
det(person-14, any-13)
dobj(inducing-12, person-14)
aux(make-16, to-15)
infmod(person-14, make-16)
det(manifestation-18, a-17)
dobj(make-16, manifestation-18)
prep_of(manifestation-18, intention-20)
det(party-24, the-22)
amod(party-24, other-23)
prep_to(make-16, party-24)
amod(manifestation-27, such-26)
nsubj(rescinded-32, manifestation-27)
prep_of(manifestation-27, intention-29)
aux(rescinded-32, may-30)
cop(rescinded-32, be-31)
root(ROOT-0, rescinded-32)
advmod(knew-38, only-33)
dep(knew-38, if-34)
det(party-37, the-35)
amod(party-37, other-36)
nsubj(knew-38, party-37)
ccomp(rescinded-32, knew-38)
amod(fact-40, such-39)
dobj(knew-38, fact-40)

(3)The rescission of the manifestation of intention induced by the fraud pursuant to the provision of the preceding two paragraphs may not be asserted against a third party without knowledge.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 3) (-RRB- -RRB-))
    (NP
      (NP (DT The) (NN rescission))
      (PP (IN of)
        (NP
          (NP (DT the) (NN manifestation))
          (PP (IN of)
            (NP
              (NP (NN intention))
              (VP (VBN induced)
                (PP (IN by)
                  (NP (DT the) (NN fraud)))
                (ADVP (JJ pursuant)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (NN provision))
                      (PP (IN of)
                        (NP (DT the) (VBG preceding) (CD two) (NNS paragraphs))))))))))))
    (VP (MD may) (RB not)
      (VP (VB be)
        (VP (VBN asserted)
          (PP (IN against)
            (NP (DT a) (JJ third) (NN party)))
          (PP (IN without)
            (NP (NN knowledge))))))
    (. .)))

dep(asserted-27, 3-2)
det(rescission-5, The-4)
nsubjpass(asserted-27, rescission-5)
det(manifestation-8, the-7)
prep_of(rescission-5, manifestation-8)
prep_of(manifestation-8, intention-10)
partmod(intention-10, induced-11)
det(fraud-14, the-13)
agent(induced-11, fraud-14)
det(provision-18, the-17)
prep_pursuant_to(induced-11, provision-18)
det(paragraphs-23, the-20)
amod(paragraphs-23, preceding-21)
num(paragraphs-23, two-22)
prep_of(provision-18, paragraphs-23)
aux(asserted-27, may-24)
neg(asserted-27, not-25)
auxpass(asserted-27, be-26)
root(ROOT-0, asserted-27)
det(party-31, a-29)
amod(party-31, third-30)
prep_against(asserted-27, party-31)
prep_without(asserted-27, knowledge-33)

</t1>
<t2>
In cases where a person who has consented to the sale of real property due to duress of a third party, and the other party does not know of the duress, the person cannot rescind the consent.
(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNS cases))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP
              (NP
                (NP (DT a) (NN person))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP (VBZ has)
                      (VP (VBN consented)
                        (PP (TO to)
                          (NP
                            (NP (DT the) (NN sale))
                            (PP (IN of)
                              (NP (JJ real) (NN property)))))
                        (PP (JJ due) (TO to)
                          (NP
                            (NP (NNS duress))
                            (PP (IN of)
                              (NP (DT a) (JJ third) (NN party))))))))))
              (, ,)
              (CC and)
              (NP (DT the) (JJ other) (NN party)))
            (VP (VBZ does) (RB not)
              (VP (VB know)
                (PP (IN of)
                  (NP (DT the) (NNS duress)))))))))
    (, ,)
    (NP (DT the) (NN person))
    (VP (MD can) (RB not)
      (VP (VB rescind)
        (NP (DT the) (NN consent))))
    (. .)))

prep_in(rescind-38, cases-2)
advmod(know-29, where-3)
det(person-5, a-4)
nsubj(consented-8, person-5)
nsubj(know-29, person-5)
aux(consented-8, has-7)
rcmod(person-5, consented-8)
det(sale-11, the-10)
prep_to(consented-8, sale-11)
amod(property-14, real-13)
prep_of(sale-11, property-14)
prep_due_to(consented-8, duress-17)
det(party-21, a-19)
amod(party-21, third-20)
prep_of(duress-17, party-21)
det(party-26, the-24)
amod(party-26, other-25)
conj_and(person-5, party-26)
nsubj(consented-8, party-26)
nsubj(know-29, party-26)
aux(know-29, does-27)
neg(know-29, not-28)
rcmod(cases-2, know-29)
det(duress-32, the-31)
prep_of(know-29, duress-32)
det(person-35, the-34)
nsubj(rescind-38, person-35)
aux(rescind-38, can-36)
neg(rescind-38, not-37)
root(ROOT-0, rescind-38)
det(consent-40, the-39)
dobj(rescind-38, consent-40)

</t2>
</pair>
<pair id="H22-3-E" label="N">
<t1>
(Requirements for Ratification)Article 124
(1)A ratification shall not be effective unless it is made after the circumstance(s) that made the act rescindable ceases to exist.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
    (NP (DT A) (NN ratification))
    (VP (MD shall) (RB not)
      (VP (VB be)
        (ADJP (JJ effective))
        (SBAR (IN unless)
          (S
            (NP (PRP it))
            (VP (VBZ is)
              (VP (VBN made)
                (PP (IN after)
                  (NP
                    (NP (DT the) (NN circumstance))
                    (PRN (-LRB- -LRB-) (PRP s) (-RRB- -RRB-))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBD made)
                          (SBAR
                            (S
                              (NP (DT the) (NN act) (NN rescindable))
                              (VP (VBZ ceases)
                                (S
                                  (VP (TO to)
                                    (VP (VB exist))))))))))))))))))
    (. .)))

dep(effective-9, 1-2)
det(ratification-5, A-4)
nsubj(effective-9, ratification-5)
aux(effective-9, shall-6)
neg(effective-9, not-7)
cop(effective-9, be-8)
root(ROOT-0, effective-9)
mark(made-13, unless-10)
nsubjpass(made-13, it-11)
auxpass(made-13, is-12)
advcl(effective-9, made-13)
det(circumstance-16, the-15)
prep_after(made-13, circumstance-16)
nsubj(made-21, circumstance-16)
dep(circumstance-16, s-18)
rcmod(circumstance-16, made-21)
det(rescindable-24, the-22)
nn(rescindable-24, act-23)
nsubj(ceases-25, rescindable-24)
ccomp(made-21, ceases-25)
aux(exist-27, to-26)
xcomp(ceases-25, exist-27)

(2)If an adult ward recognizes his/her act after he/she has become a person with capacity to act, he/she may ratify such act only after such recognition.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
    (SBAR (IN If)
      (S
        (NP (DT an) (NN adult) (NN ward))
        (VP (VBZ recognizes)
          (NP (NN his\/her) (NN act))
          (SBAR (IN after)
            (S
              (NP (NN he\/she))
              (VP (VBZ has)
                (VP (VBN become)
                  (NP (DT a) (NN person))
                  (PP (IN with)
                    (NP (NN capacity)))
                  (S
                    (VP (TO to)
                      (VP (VB act)))))))))))
    (, ,)
    (NP (NN he\/she))
    (VP (MD may)
      (VP (VB ratify)
        (NP (JJ such) (NN act))
        (ADVP (RB only))
        (PP (IN after)
          (NP (JJ such) (NN recognition)))))
    (. .)))

dep(ratify-24, 2-2)
mark(recognizes-8, If-4)
det(ward-7, an-5)
nn(ward-7, adult-6)
nsubj(recognizes-8, ward-7)
advcl(ratify-24, recognizes-8)
nn(act-10, his\/her-9)
dobj(recognizes-8, act-10)
mark(person-16, after-11)
nsubj(person-16, he\/she-12)
xsubj(act-20, he\/she-12)
aux(person-16, has-13)
cop(person-16, become-14)
det(person-16, a-15)
advcl(recognizes-8, person-16)
prep_with(person-16, capacity-18)
aux(act-20, to-19)
xcomp(person-16, act-20)
nsubj(ratify-24, he\/she-22)
aux(ratify-24, may-23)
root(ROOT-0, ratify-24)
amod(act-26, such-25)
dobj(ratify-24, act-26)
advmod(ratify-24, only-27)
amod(recognition-30, such-29)
prep_after(ratify-24, recognition-30)

(3)The provisions of the preceding two paragraphs shall not apply in cases the ratification is made by the statutory agent, or the curator or assistant of the person with limited capacity to act.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 3) (-RRB- -RRB-))
    (NP
      (NP (DT The) (NNS provisions))
      (PP (IN of)
        (NP (DT the) (VBG preceding) (CD two) (NNS paragraphs))))
    (VP (MD shall) (RB not)
      (VP (VB apply)
        (PP (IN in)
          (NP
            (NP (NNS cases))
            (SBAR
              (S
                (NP (DT the) (NN ratification))
                (VP (VBZ is)
                  (VP (VBN made)
                    (PP (IN by)
                      (NP
                        (NP (DT the) (JJ statutory) (NN agent))
                        (, ,)
                        (CC or)
                        (NP
                          (NP (DT the) (NN curator)
                            (CC or)
                            (NN assistant))
                          (PP (IN of)
                            (NP
                              (NP (DT the) (NN person))
                              (PP (IN with)
                                (NP (JJ limited) (NN capacity))))))))
                    (S
                      (VP (TO to)
                        (VP (VB act))))))))))))
    (. .)))

dep(apply-13, 3-2)
det(provisions-5, The-4)
nsubj(apply-13, provisions-5)
det(paragraphs-10, the-7)
amod(paragraphs-10, preceding-8)
num(paragraphs-10, two-9)
prep_of(provisions-5, paragraphs-10)
aux(apply-13, shall-11)
neg(apply-13, not-12)
root(ROOT-0, apply-13)
prep_in(apply-13, cases-15)
det(ratification-17, the-16)
nsubjpass(made-19, ratification-17)
xsubj(act-37, ratification-17)
auxpass(made-19, is-18)
rcmod(cases-15, made-19)
det(agent-23, the-21)
amod(agent-23, statutory-22)
agent(made-19, agent-23)
det(curator-27, the-26)
agent(made-19, curator-27)
conj_or(agent-23, curator-27)
conj_or(agent-23, assistant-29)
conj_or(curator-27, assistant-29)
det(person-32, the-31)
prep_of(curator-27, person-32)
amod(capacity-35, limited-34)
prep_with(person-32, capacity-35)
aux(act-37, to-36)
xcomp(made-19, act-37)

(Statutory Ratification)Article 125
If, after the time when it has become possible to ratify an act pursuant to the provisions of the preceding Article, any of the following events occurs with respect to an act which is otherwise rescindable, it is deemed that ratification has been made,unless any objection is reserved:(i)performance of such act, in whole or in part;(ii)demand for the performance of such act;(iii)novation of such act;(iv)provision of security;(v)assignment, in whole or in part, of any right acquired as a result of such rescindable act; or(vi)compulsory execution of such act.
(ROOT
  (S
    (SBAR (IN If) (, ,)
      (S
        (PP (IN after)
          (NP
            (NP (DT the) (NN time))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP (PRP it))
                (VP (VBZ has)
                  (VP (VBN become)
                    (ADJP (JJ possible)
                      (S
                        (VP (TO to)
                          (VP (VB ratify)
                            (NP (DT an) (NN act))
                            (ADVP (JJ pursuant)
                              (PP (TO to)
                                (NP
                                  (NP (DT the) (NNS provisions))
                                  (PP (IN of)
                                    (NP (DT the) (VBG preceding) (NN Article))))))))))))))))
        (, ,)
        (NP
          (NP (DT any))
          (PP (IN of)
            (NP (DT the) (JJ following) (NNS events))))
        (VP (VBZ occurs)
          (PP (IN with)
            (NP (NN respect)))
          (PP (TO to)
            (NP
              (NP (DT an) (NN act))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBZ is)
                    (ADJP (RB otherwise) (JJ rescindable))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (VP (VBN deemed)
        (SBAR (IN that)
          (S
            (NP (NN ratification))
            (VP (VBZ has)
              (VP (VBN been)
                (VP (VBN made) (, ,)
                  (SBAR (IN unless)
                    (S
                      (NP (DT any) (NN objection))
                      (VP (VBZ is)
                        (VP (VBN reserved)))))
                  (: :)
                  (S (-LRB- -LRB-)
                    (NP (FW i))
                    (-RRB- -RRB-)
                    (NP
                      (NP
                        (NP
                          (NP
                            (NP (NN performance))
                            (PP
                              (PP (IN of)
                                (NP (JJ such) (NN act)))
                              (, ,)
                              (PP (IN in)
                                (NP (NN whole)))
                              (CC or)
                              (PP (IN in)
                                (NP (NN part)))))
                          (: ;)
                          (NP
                            (NP (-LRB- -LRB-) (JJ ii) (-RRB- -RRB-) (NN demand))
                            (PP (IN for)
                              (NP
                                (NP (DT the) (NN performance))
                                (PP (IN of)
                                  (NP (JJ such) (NN act))))))
                          (: ;)
                          (NP
                            (NP
                              (PRN (-LRB- -LRB-)
                                (NP (NN iii))
                                (-RRB- -RRB-))
                              (NNS novation))
                            (PP (IN of)
                              (NP (JJ such) (NN act))))
                          (: ;)
                          (NP
                            (NP (-LRB- -LRB-) (JJ iv) (-RRB- -RRB-) (NN provision))
                            (PP (IN of)
                              (NP (NN security))))
                          (: ;)
                          (NP
                            (NP (-LRB- -LRB-) (NN v) (-RRB- -RRB-))
                            (NP (NN assignment))))
                        (, ,)
                        (PP
                          (PP (IN in)
                            (NP (NN whole)))
                          (CC or)
                          (PP (IN in)
                            (NP (NN part))))
                        (, ,))
                      (PP (IN of)
                        (NP
                          (NP (DT any) (NN right))
                          (VP (VBN acquired)
                            (PP (IN as)
                              (NP
                                (NP (DT a) (NN result))
                                (PP (IN of)
                                  (NP (JJ such) (NN rescindable) (NN act)))
                                (: ;)
                                (CC or)
                                (PRN (-LRB- -LRB-)
                                  (NP (NN vi))
                                  (-RRB- -RRB-))
                                (NP
                                  (NP (JJ compulsory) (NN execution))
                                  (PP (IN of)
                                    (NP (JJ such) (NN act))))))))))))))))))
    (. .)))

mark(occurs-29, If-1)
det(time-5, the-4)
tmod(possible-10, time-5)
prep_after(occurs-29, time-5)
advmod(possible-10, when-6)
nsubj(possible-10, it-7)
aux(possible-10, has-8)
cop(possible-10, become-9)
dep(time-5, possible-10)
aux(ratify-12, to-11)
xcomp(possible-10, ratify-12)
det(act-14, an-13)
dobj(ratify-12, act-14)
det(provisions-18, the-17)
prep_pursuant_to(ratify-12, provisions-18)
det(Article-22, the-20)
amod(Article-22, preceding-21)
prep_of(provisions-18, Article-22)
nsubj(occurs-29, any-24)
det(events-28, the-26)
amod(events-28, following-27)
prep_of(any-24, events-28)
advcl(deemed-42, occurs-29)
prep_with(occurs-29, respect-31)
det(act-34, an-33)
prep_to(occurs-29, act-34)
nsubj(rescindable-38, act-34)
cop(rescindable-38, is-36)
advmod(rescindable-38, otherwise-37)
rcmod(act-34, rescindable-38)
nsubjpass(deemed-42, it-40)
auxpass(deemed-42, is-41)
root(ROOT-0, deemed-42)
complm(made-47, that-43)
nsubjpass(made-47, ratification-44)
aux(made-47, has-45)
auxpass(made-47, been-46)
ccomp(deemed-42, made-47)
mark(reserved-53, unless-49)
det(objection-51, any-50)
nsubjpass(reserved-53, objection-51)
auxpass(reserved-53, is-52)
advcl(made-47, reserved-53)
dep(performance-58, i-56)
parataxis(made-47, performance-58)
parataxis(made-47, performance-58')
parataxis(made-47, performance-58'')
conj_or(performance-58, performance-58')
conj_or(performance-58, performance-58'')
amod(act-61, such-60)
prep_of(performance-58, act-61)
prep_in(performance-58', whole-64)
prep_in(performance-58'', part-67)
amod(demand-72, ii-70)
dep(performance-58, demand-72)
det(performance-75, the-74)
prep_for(demand-72, performance-75)
amod(act-78, such-77)
prep_of(performance-75, act-78)
appos(novation-83, iii-81)
dep(performance-58, novation-83)
amod(act-86, such-85)
prep_of(novation-83, act-86)
amod(provision-91, iv-89)
dep(performance-58, provision-91)
prep_of(provision-91, security-93)
dep(performance-58, v-96)
dep(v-96, assignment-98)
prep_in(performance-58, whole-101)
prep_in(performance-58, part-104)
conj_or(whole-101, part-104)
det(right-108, any-107)
prep_of(performance-58, right-108)
partmod(right-108, acquired-109)
det(result-112, a-111)
prep_as(acquired-109, result-112)
amod(act-116, such-114)
nn(act-116, rescindable-115)
prep_of(result-112, act-116)
appos(result-112, vi-120)
amod(execution-123, compulsory-122)
prep_as(acquired-109, execution-123)
conj_or(result-112, execution-123)
amod(act-126, such-125)
prep_of(execution-123, act-126)

</t1>
<t2>
Even when a person, who carries a purchase-money obligation due to the sale of real property, while a minor pays the purchase money after becoming an adult, the person can rescind the sale with the reason of being a minor at the time of the sale.
(ROOT
  (S
    (SBAR (RB Even)
      (WHADVP (WRB when))
      (S
        (NP
          (NP (DT a) (NN person))
          (, ,)
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBZ carries)
                (S
                  (NP (DT a) (JJ purchase-money) (NN obligation))
                  (ADJP (JJ due)
                    (PP (TO to)
                      (NP
                        (NP (DT the) (NN sale))
                        (PP (IN of)
                          (NP (JJ real) (NN property))))))))))
          (, ,))
        (ADVP (IN while)
          (NP (DT a) (JJ minor)))
        (VP (VBZ pays)
          (NP (DT the) (NN purchase) (NN money))
          (PP (IN after)
            (S
              (VP (VBG becoming)
                (NP (DT an) (NN adult))))))))
    (, ,)
    (NP (DT the) (NN person))
    (VP (MD can)
      (VP (VB rescind)
        (NP (DT the) (NN sale))
        (PP (IN with)
          (NP
            (NP (DT the) (NN reason))
            (PP (IN of)
              (S
                (VP (VBG being)
                  (ADJP (DT a) (JJ minor)
                    (PP (IN at)
                      (NP
                        (NP (DT the) (NN time))
                        (PP (IN of)
                          (NP (DT the) (NN sale)))))))))))))
    (. .)))

advmod(pays-22, Even-1)
advmod(pays-22, when-2)
det(person-4, a-3)
nsubj(carries-7, person-4)
nsubj(pays-22, person-4)
rcmod(person-4, carries-7)
det(obligation-10, a-8)
amod(obligation-10, purchase-money-9)
nsubj(due-11, obligation-10)
xcomp(carries-7, due-11)
det(sale-14, the-13)
prep_to(due-11, sale-14)
amod(property-17, real-16)
prep_of(sale-14, property-17)
advmod(pays-22, while-19)
det(minor-21, a-20)
pobj(while-19, minor-21)
dep(rescind-34, pays-22)
det(money-25, the-23)
nn(money-25, purchase-24)
dobj(pays-22, money-25)
prepc_after(pays-22, becoming-27)
det(adult-29, an-28)
attr(becoming-27, adult-29)
det(person-32, the-31)
nsubj(rescind-34, person-32)
aux(rescind-34, can-33)
root(ROOT-0, rescind-34)
det(sale-36, the-35)
dobj(rescind-34, sale-36)
det(reason-39, the-38)
prep_with(rescind-34, reason-39)
cop(minor-43, being-41)
dep(minor-43, a-42)
prepc_of(reason-39, minor-43)
det(time-46, the-45)
prep_at(minor-43, time-46)
det(sale-49, the-48)
prep_of(time-46, sale-49)

</t2>
</pair>
<pair id="H22-4-A" label="N">
<t1>
(Right of Demand by Person who is Counterparty to Person with Limited Capacity)Article 20
(1)The person who is the counterparty to a person with limited capacity (hereinafter referring to any minor, an adult ward, a person under curatorship, and a person under assistance who has become subject to the ruling under paragraph 1 of Article 17) may, after such person with limited capacity has become a person with capacity (hereinafter referring to a person free of any limitation on capacity to act), issue to such person a notice which demands, by establishing a certain period which is one month or more, that he/she should give a definite answer on whether or not such person will ratify such act which may be rescinded within such period.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
    (NP
      (NP
        (NP (DT The) (NN person))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ is)
              (NP
                (NP (DT the) (NN counterparty))
                (PP (TO to)
                  (NP
                    (NP (DT a) (NN person))
                    (PP (IN with)
                      (NP (VBN limited) (NN capacity))))))))))
      (PRN (-LRB- -LRB-)
        (NP (JJ hereinafter)
          (S
            (VP (VBG referring)
              (PP (TO to)
                (NP
                  (NP (DT any) (JJ minor))
                  (, ,)
                  (NP (DT an) (JJ adult) (NN ward))
                  (, ,)
                  (NP
                    (NP (DT a) (NN person))
                    (PP (IN under)
                      (NP (NN curatorship))))
                  (, ,)
                  (CC and)
                  (NP
                    (NP (DT a) (NN person))
                    (PP (IN under)
                      (NP (NN assistance)))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBZ has)
                          (VP (VBN become)
                            (ADJP (JJ subject)
                              (PP (TO to)
                                (NP (DT the) (NN ruling))))
                            (PP (IN under)
                              (NP
                                (NP (NN paragraph) (CD 1))
                                (PP (IN of)
                                  (NP (NNP Article) (CD 17)))))))))))))))
        (-RRB- -RRB-)))
    (VP (MD may) (, ,)
      (SBAR (IN after)
        (S
          (NP
            (NP (JJ such) (NN person))
            (PP (IN with)
              (NP (JJ limited) (NN capacity))))
          (VP (VBZ has)
            (VP (VBN become)
              (NP
                (NP (DT a) (NN person))
                (PP (IN with)
                  (NP (NN capacity))))
              (PRN (-LRB- -LRB-)
                (S
                  (VP (VB hereinafter)
                    (VP (VBG referring)
                      (PP (TO to)
                        (NP
                          (NP (DT a) (NN person))
                          (PP
                            (ADVP (JJ free))
                            (IN of)
                            (NP
                              (NP (DT any) (NN limitation))
                              (PP (IN on)
                                (NP (NN capacity)))))))
                      (S
                        (VP (TO to)
                          (VP (VB act)))))))
                (-RRB- -RRB-))))))
      (, ,)
      (VP (VB issue)
        (PP (TO to)
          (NP (JJ such) (NN person)))
        (NP
          (NP (DT a) (NN notice))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ demands) (, ,)
                (PP (IN by)
                  (S
                    (VP (VBG establishing)
                      (NP
                        (NP (DT a) (JJ certain) (NN period))
                        (SBAR
                          (WHNP (WDT which))
                          (S
                            (VP (VBZ is)
                              (ADVP
                                (NP (CD one) (NN month))
                                (CC or)
                                (ADVP (RBR more)))
                              (, ,)
                              (SBAR (IN that)
                                (S
                                  (NP (NN he\/she))
                                  (VP (MD should)
                                    (VP (VB give)
                                      (NP (DT a) (JJ definite) (NN answer))
                                      (PP (IN on))
                                      (SBAR (IN whether)
                                        (CC or)
                                        (RB not)
                                        (S
                                          (NP (JJ such) (NN person))
                                          (VP (MD will)
                                            (VP (VB ratify)
                                              (NP
                                                (NP (JJ such) (NN act))
                                                (SBAR
                                                  (WHNP (WDT which))
                                                  (S
                                                    (VP (MD may)
                                                      (VP (VB be)
                                                        (VP (VBN rescinded)
                                                          (PP (IN within)
                                                            (NP (JJ such) (NN period))))))))))))))))))))))))))))))
    (. .)))

dep(issue-81, 1-2)
det(person-5, The-4)
nsubj(counterparty-9, person-5)
nsubj(issue-81, person-5)
cop(counterparty-9, is-7)
det(counterparty-9, the-8)
rcmod(person-5, counterparty-9)
det(person-12, a-11)
prep_to(counterparty-9, person-12)
amod(capacity-15, limited-14)
prep_with(person-12, capacity-15)
dep(person-5, hereinafter-17)
dep(hereinafter-17, referring-18)
det(minor-21, any-20)
prep_to(referring-18, minor-21)
det(ward-25, an-23)
amod(ward-25, adult-24)
prep_to(referring-18, ward-25)
conj_and(minor-21, ward-25)
det(person-28, a-27)
prep_to(referring-18, person-28)
conj_and(minor-21, person-28)
prep_under(person-28, curatorship-30)
det(person-34, a-33)
prep_to(referring-18, person-34)
conj_and(minor-21, person-34)
nsubj(subject-40, person-34)
prep_under(person-34, assistance-36)
aux(subject-40, has-38)
cop(subject-40, become-39)
rcmod(person-34, subject-40)
det(ruling-43, the-42)
prep_to(subject-40, ruling-43)
prep_under(subject-40, paragraph-45)
num(paragraph-45, 1-46)
prep_of(paragraph-45, Article-48)
num(Article-48, 17-49)
aux(issue-81, may-51)
mark(person-62, after-53)
amod(person-55, such-54)
nsubj(person-62, person-55)
amod(capacity-58, limited-57)
prep_with(person-55, capacity-58)
aux(person-62, has-59)
cop(person-62, become-60)
det(person-62, a-61)
advcl(issue-81, person-62)
prep_with(person-62, capacity-64)
parataxis(person-62, hereinafter-66)
dep(hereinafter-66, referring-67)
det(person-70, a-69)
prep_to(referring-67, person-70)
advmod(person-70, free-71)
det(limitation-74, any-73)
prep_of(person-70, limitation-74)
prep_on(limitation-74, capacity-76)
aux(act-78, to-77)
xcomp(referring-67, act-78)
root(ROOT-0, issue-81)
amod(person-84, such-83)
prep_to(issue-81, person-84)
det(notice-86, a-85)
dobj(issue-81, notice-86)
nsubj(demands-88, notice-86)
rcmod(notice-86, demands-88)
prepc_by(demands-88, establishing-91)
det(period-94, a-92)
amod(period-94, certain-93)
dobj(establishing-91, period-94)
nsubj(is-96, period-94)
rcmod(period-94, is-96)
num(month-98, one-97)
advmod(is-96, month-98)
advmod(is-96, more-100)
conj_or(month-98, more-100)
complm(give-105, that-102)
nsubj(give-105, he\/she-103)
aux(give-105, should-104)
ccomp(is-96, give-105)
det(answer-108, a-106)
amod(answer-108, definite-107)
dobj(give-105, answer-108)
prep(give-105, on-109)
complm(ratify-116, whether-110)
ccomp(give-105, not-112)
conj_or(ratify-116, not-112)
amod(person-114, such-113)
nsubj(ratify-116, person-114)
aux(ratify-116, will-115)
ccomp(give-105, ratify-116)
amod(act-118, such-117)
dobj(ratify-116, act-118)
nsubjpass(rescinded-122, act-118)
aux(rescinded-122, may-120)
auxpass(rescinded-122, be-121)
rcmod(act-118, rescinded-122)
amod(period-125, such-124)
prep_within(rescinded-122, period-125)

In such case, if such person fails to send any definite answer within such period, he/she is deemed to have ratified such act.
(ROOT
  (S
    (PP (IN In)
      (NP (JJ such) (NN case)))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (JJ such) (NN person))
        (VP (VBZ fails)
          (S
            (VP (TO to)
              (VP (VB send)
                (NP (DT any) (JJ definite) (NN answer))
                (PP (IN within)
                  (NP (JJ such) (NN period)))))))))
    (, ,)
    (NP (NN he\/she))
    (VP (VBZ is)
      (VP (VBN deemed)
        (S
          (VP (TO to)
            (VP (VB have)
              (VP (VBN ratified)
                (NP (JJ such) (NN act))))))))
    (. .)))

amod(case-3, such-2)
prep_in(deemed-20, case-3)
mark(fails-8, if-5)
amod(person-7, such-6)
nsubj(fails-8, person-7)
xsubj(send-10, person-7)
advcl(deemed-20, fails-8)
aux(send-10, to-9)
xcomp(fails-8, send-10)
det(answer-13, any-11)
amod(answer-13, definite-12)
dobj(send-10, answer-13)
amod(period-16, such-15)
prep_within(send-10, period-16)
nsubjpass(deemed-20, he\/she-18)
xsubj(ratified-23, he\/she-18)
auxpass(deemed-20, is-19)
root(ROOT-0, deemed-20)
aux(ratified-23, to-21)
aux(ratified-23, have-22)
xcomp(deemed-20, ratified-23)
amod(act-25, such-24)
dobj(ratified-23, act-25)

(2)The second sentence of the preceding paragraph shall likewise apply in cases where, while such person with limited capacity has not yet become a person with capacity, the person who is the counterparty to the person with limited capacity issues to the statutory agent, curator, or assistant of such person a notice prescribed in the preceding paragraph with respect to any act which is under the authority of any such officer, and the statutory agent, curator or assistant fails to issue any definite answer within the period referred to in such paragraph.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
    (NP
      (NP (DT The) (JJ second) (NN sentence))
      (PP (IN of)
        (NP (DT the) (VBG preceding) (NN paragraph))))
    (VP (MD shall)
      (ADVP (RB likewise))
      (VP (VB apply)
        (PP (IN in)
          (NP (NNS cases)))
        (SBAR
          (WHADVP (WRB where))
          (, ,)
          (S
            (SBAR (IN while)
              (S
                (NP
                  (NP (JJ such) (NN person))
                  (PP (IN with)
                    (NP (JJ limited) (NN capacity))))
                (VP (VBZ has) (RB not)
                  (ADVP (RB yet))
                  (VP (VBN become)
                    (NP
                      (NP
                        (NP (DT a) (NN person))
                        (PP (IN with)
                          (NP (NN capacity))))
                      (, ,)
                      (NP
                        (NP (DT the) (NN person))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBZ is)
                              (NP
                                (NP (DT the) (NN counterparty))
                                (PP
                                  (PP (TO to)
                                    (NP
                                      (NP (DT the) (NN person))
                                      (PP (IN with)
                                        (NP (JJ limited) (NN capacity) (NNS issues)))))
                                  (PP (TO to)
                                    (NP
                                      (NP (DT the) (JJ statutory) (NN agent))
                                      (, ,)
                                      (NP (NN curator))
                                      (, ,)
                                      (CC or)
                                      (NP
                                        (NP (NN assistant))
                                        (PP (IN of)
                                          (NP (JJ such) (NN person))))))))))))
                      (NP
                        (NP (DT a) (NN notice))
                        (VP (VBN prescribed)
                          (PP (IN in)
                            (NP
                              (NP (DT the) (VBG preceding) (NN paragraph))
                              (PP (IN with)
                                (NP (NN respect)))))
                          (PP (TO to)
                            (NP
                              (NP (DT any) (NN act))
                              (SBAR
                                (WHNP (WDT which))
                                (S
                                  (VP (VBZ is)
                                    (PP (IN under)
                                      (NP
                                        (NP (DT the) (NN authority))
                                        (PP (IN of)
                                          (NP (DT any) (JJ such) (NN officer))))))))))))
                      (, ,)
                      (CC and)
                      (NP (DT the) (JJ statutory) (NN agent)))))))
            (, ,)
            (NP (NN curator)
              (CC or)
              (NN assistant))
            (VP (VBZ fails)
              (S
                (VP (TO to)
                  (VP (VB issue)
                    (NP (DT any) (JJ definite) (NN answer))
                    (PP (IN within)
                      (NP
                        (NP (DT the) (NN period))
                        (VP (VBN referred)
                          (S
                            (VP (TO to)))
                          (PP (IN in)
                            (NP (JJ such) (NN paragraph))))))))))))))
    (. .)))

dep(apply-13, 2-2)
det(sentence-6, The-4)
amod(sentence-6, second-5)
nsubj(apply-13, sentence-6)
det(paragraph-10, the-8)
amod(paragraph-10, preceding-9)
prep_of(sentence-6, paragraph-10)
aux(apply-13, shall-11)
advmod(apply-13, likewise-12)
root(ROOT-0, apply-13)
prep_in(apply-13, cases-15)
advmod(fails-88, where-16)
mark(person-29, while-18)
amod(person-20, such-19)
nsubj(person-29, person-20)
amod(capacity-23, limited-22)
prep_with(person-20, capacity-23)
aux(person-29, has-24)
neg(person-29, not-25)
advmod(person-29, yet-26)
cop(person-29, become-27)
det(person-29, a-28)
advcl(fails-88, person-29)
prep_with(person-29, capacity-31)
det(person-34, the-33)
conj_and(person-29, person-34)
nsubj(counterparty-38, person-34)
advcl(fails-88, person-34)
cop(counterparty-38, is-36)
det(counterparty-38, the-37)
rcmod(person-34, counterparty-38)
det(person-41, the-40)
prep_to(counterparty-38, person-41)
amod(issues-45, limited-43)
nn(issues-45, capacity-44)
prep_with(person-41, issues-45)
det(agent-49, the-47)
amod(agent-49, statutory-48)
prep_to(counterparty-38, agent-49)
prep_to(counterparty-38, curator-51)
conj_or(agent-49, curator-51)
prep_to(counterparty-38, assistant-54)
conj_or(agent-49, assistant-54)
amod(person-57, such-56)
prep_of(assistant-54, person-57)
det(notice-59, a-58)
dep(person-29, notice-59)
partmod(notice-59, prescribed-60)
det(paragraph-64, the-62)
amod(paragraph-64, preceding-63)
prep_in(prescribed-60, paragraph-64)
prep_with(paragraph-64, respect-66)
det(act-69, any-68)
prep_to(prescribed-60, act-69)
nsubj(is-71, act-69)
rcmod(act-69, is-71)
det(authority-74, the-73)
prep_under(is-71, authority-74)
det(officer-78, any-76)
amod(officer-78, such-77)
prep_of(authority-74, officer-78)
det(agent-83, the-81)
amod(agent-83, statutory-82)
conj_and(person-29, agent-83)
advcl(fails-88, agent-83)
nsubj(fails-88, curator-85)
xsubj(issue-90, curator-85)
conj_or(curator-85, assistant-87)
nsubj(fails-88, assistant-87)
xsubj(issue-90, assistant-87)
advcl(apply-13, fails-88)
aux(issue-90, to-89)
xcomp(fails-88, issue-90)
det(answer-93, any-91)
amod(answer-93, definite-92)
dobj(issue-90, answer-93)
det(period-96, the-95)
prep_within(issue-90, period-96)
xsubj(to-98, period-96)
partmod(period-96, referred-97)
xcomp(referred-97, to-98)
amod(paragraph-101, such-100)
prep_in(referred-97, paragraph-101)

(3)With respect to any act which requires any special formalities, if no notice to the effect that the perfection of such formalities has been completed is issued within the period set forth in the preceding two paragraphs, it is deemed that such act has been rescinded.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 3) (-RRB- -RRB-))
    (PP (IN With)
      (NP
        (NP (NN respect))
        (PP (TO to)
          (NP
            (NP (DT any) (NN act))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ requires)
                  (NP (DT any) (JJ special) (NNS formalities))
                  (, ,)
                  (SBAR (IN if)
                    (S
                      (NP
                        (NP (DT no) (NN notice))
                        (PP (TO to)
                          (NP
                            (NP (DT the) (NN effect))
                            (SBAR (IN that)
                              (S
                                (NP
                                  (NP (DT the) (NN perfection))
                                  (PP (IN of)
                                    (NP (JJ such) (NNS formalities))))
                                (VP (VBZ has)
                                  (VP (VBN been)
                                    (VP (VBN completed)))))))))
                      (VP (VBZ is)
                        (VP (VBN issued)
                          (PP (IN within)
                            (NP
                              (NP (DT the) (NN period))
                              (VP (VBN set)
                                (PRT (RP forth))
                                (PP (IN in)
                                  (NP (DT the) (VBG preceding) (CD two) (NNS paragraphs)))))))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (VP (VBN deemed)
        (SBAR (IN that)
          (S
            (NP (JJ such) (NN act))
            (VP (VBZ has)
              (VP (VBN been)
                (ADJP (JJ rescinded))))))))
    (. .)))

dep(deemed-45, 3-2)
det(act-8, any-7)
nsubj(requires-10, act-8)
prep_with_respect_to(deemed-45, act-8)
rcmod(act-8, requires-10)
det(formalities-13, any-11)
amod(formalities-13, special-12)
dobj(requires-10, formalities-13)
mark(issued-31, if-15)
det(notice-17, no-16)
nsubjpass(issued-31, notice-17)
det(effect-20, the-19)
prep_to(notice-17, effect-20)
complm(completed-29, that-21)
det(perfection-23, the-22)
nsubjpass(completed-29, perfection-23)
amod(formalities-26, such-25)
prep_of(perfection-23, formalities-26)
aux(completed-29, has-27)
auxpass(completed-29, been-28)
dep(effect-20, completed-29)
auxpass(issued-31, is-30)
advcl(requires-10, issued-31)
det(period-34, the-33)
prep_within(issued-31, period-34)
partmod(period-34, set-35)
prt(set-35, forth-36)
det(paragraphs-41, the-38)
amod(paragraphs-41, preceding-39)
num(paragraphs-41, two-40)
prep_in(set-35, paragraphs-41)
nsubjpass(deemed-45, it-43)
auxpass(deemed-45, is-44)
root(ROOT-0, deemed-45)
complm(rescinded-51, that-46)
amod(act-48, such-47)
nsubj(rescinded-51, act-48)
aux(rescinded-51, has-49)
cop(rescinded-51, been-50)
ccomp(deemed-45, rescinded-51)

(4)The person who is the counterparty to a person with limited capacity may issue a notice to any person under curatorship, or to any person under assistance who has been made subject to the ruling under paragraph 1 of Article 17 which demands that he/she should obtain the ratification of his/her curator or assistant, as the case may be, within the period set forth in paragraph 1 above.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 4) (-RRB- -RRB-))
    (NP
      (NP (DT The) (NN person))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ is)
            (NP
              (NP (DT the) (NN counterparty))
              (PP (TO to)
                (NP
                  (NP (DT a) (NN person))
                  (PP (IN with)
                    (NP (VBN limited) (NN capacity))))))))))
    (VP (MD may)
      (VP (VB issue)
        (NP (DT a) (NN notice))
        (PP
          (PP (TO to)
            (NP
              (NP (DT any) (NN person))
              (PP (IN under)
                (NP (NN curatorship)))))
          (, ,)
          (CC or)
          (PP (TO to)
            (NP (DT any) (NN person))))
        (PP (IN under)
          (NP
            (NP (NN assistance))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBZ has)
                  (VP (VBN been)
                    (VP (VBN made)
                      (ADJP (JJ subject)
                        (PP (TO to)
                          (NP (DT the) (NN ruling))))
                      (PP (IN under)
                        (NP
                          (NP (NN paragraph) (CD 1))
                          (PP (IN of)
                            (NP (NNP Article) (CD 17)))
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (VP (VBZ demands)
                                (SBAR (IN that)
                                  (S
                                    (NP (NN he\/she))
                                    (VP (MD should)
                                      (VP (VB obtain)
                                        (NP
                                          (NP (DT the) (NN ratification))
                                          (PP (IN of)
                                            (NP (NN his\/her) (NN curator)
                                              (CC or)
                                              (NN assistant))))
                                        (, ,)
                                        (SBAR (IN as)
                                          (S
                                            (NP (DT the) (NN case))
                                            (VP (MD may)
                                              (VP (VB be)))))))))))))))))))))
        (, ,)
        (PP (IN within)
          (NP
            (NP (DT the) (NN period))
            (VP (VBN set)
              (ADVP (RB forth)
                (PP (IN in)
                  (NP (NN paragraph))
                  (ADVP
                    (NP (CD 1))
                    (IN above)))))))))
    (. .)))

dep(issue-17, 4-2)
det(person-5, The-4)
nsubj(counterparty-9, person-5)
nsubj(issue-17, person-5)
cop(counterparty-9, is-7)
det(counterparty-9, the-8)
rcmod(person-5, counterparty-9)
det(person-12, a-11)
prep_to(counterparty-9, person-12)
amod(capacity-15, limited-14)
prep_with(person-12, capacity-15)
aux(issue-17, may-16)
root(ROOT-0, issue-17)
det(notice-19, a-18)
dobj(issue-17, notice-19)
det(person-22, any-21)
prep_to(issue-17, person-22)
prep_under(person-22, curatorship-24)
det(person-29, any-28)
prep_to(issue-17, person-29)
conj_or(person-22, person-29)
prep_under(issue-17, assistance-31)
nsubjpass(made-35, assistance-31)
aux(made-35, has-33)
auxpass(made-35, been-34)
rcmod(assistance-31, made-35)
acomp(made-35, subject-36)
det(ruling-39, the-38)
prep_to(subject-36, ruling-39)
prep_under(made-35, paragraph-41)
nsubj(demands-47, paragraph-41)
num(paragraph-41, 1-42)
prep_of(paragraph-41, Article-44)
num(Article-44, 17-45)
rcmod(paragraph-41, demands-47)
complm(obtain-51, that-48)
nsubj(obtain-51, he\/she-49)
aux(obtain-51, should-50)
ccomp(demands-47, obtain-51)
det(ratification-53, the-52)
dobj(obtain-51, ratification-53)
nn(curator-56, his\/her-55)
prep_of(ratification-53, curator-56)
prep_of(ratification-53, assistant-58)
conj_or(curator-56, assistant-58)
mark(be-64, as-60)
det(case-62, the-61)
nsubj(be-64, case-62)
aux(be-64, may-63)
advcl(obtain-51, be-64)
det(period-68, the-67)
prep_within(issue-17, period-68)
partmod(period-68, set-69)
advmod(set-69, forth-70)
prep_in(forth-70, paragraph-72)
npadvmod(above-74, 1-73)
advmod(forth-70, above-74)

In such case, if the person under curatorship or person under assistance fails to issue, within the applicable period, a notice to the effect that such ratification has been obtained, it is deemed that such act has been rescinded.
(ROOT
  (S
    (PP (IN In)
      (NP (JJ such) (NN case)))
    (, ,)
    (SBAR (IN if)
      (S
        (NP
          (NP (DT the) (NN person))
          (PP (IN under)
            (NP
              (NP (NN curatorship)
                (CC or)
                (NN person))
              (PP (IN under)
                (NP (NN assistance))))))
        (VP (VBZ fails)
          (S
            (VP (TO to)
              (VP (VB issue) (, ,)
                (PP (IN within)
                  (NP
                    (NP (DT the) (JJ applicable) (NN period))
                    (, ,)
                    (NP
                      (NP (DT a) (NN notice))
                      (PP (TO to)
                        (NP (DT the) (NN effect))))))
                (SBAR (IN that)
                  (S
                    (NP (JJ such) (NN ratification))
                    (VP (VBZ has)
                      (VP (VBN been)
                        (VP (VBN obtained))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (VP (VBN deemed)
        (SBAR (IN that)
          (S
            (NP (JJ such) (NN act))
            (VP (VBZ has)
              (VP (VBN been)
                (ADJP (JJ rescinded))))))))
    (. .)))

amod(case-3, such-2)
prep_in(deemed-37, case-3)
mark(fails-14, if-5)
det(person-7, the-6)
nsubj(fails-14, person-7)
xsubj(issue-16, person-7)
prep_under(person-7, curatorship-9)
prep_under(person-7, person-11)
conj_or(curatorship-9, person-11)
prep_under(curatorship-9, assistance-13)
advcl(deemed-37, fails-14)
aux(issue-16, to-15)
xcomp(fails-14, issue-16)
det(period-21, the-19)
amod(period-21, applicable-20)
prep_within(issue-16, period-21)
det(notice-24, a-23)
appos(period-21, notice-24)
det(effect-27, the-26)
prep_to(notice-24, effect-27)
complm(obtained-33, that-28)
amod(ratification-30, such-29)
nsubjpass(obtained-33, ratification-30)
aux(obtained-33, has-31)
auxpass(obtained-33, been-32)
ccomp(issue-16, obtained-33)
nsubjpass(deemed-37, it-35)
auxpass(deemed-37, is-36)
root(ROOT-0, deemed-37)
complm(rescinded-43, that-38)
amod(act-40, such-39)
nsubj(rescinded-43, act-40)
aux(rescinded-43, has-41)
cop(rescinded-43, been-42)
ccomp(deemed-37, rescinded-43)

(Right of Demand by Person who is Counterparty to Person with Limited Capacity)Article 20
(1)The person who is the counterparty to a person with limited capacity (hereinafter referring to any minor, an adult ward, a person under curatorship, and a person under assistance who has become subject to the ruling under paragraph 1 of Article 17) may, after such person with limited capacity has become a person with capacity (hereinafter referring to a person free of any limitation on capacity to act), issue to such person a notice which demands, by establishing a certain period which is one month or more, that he/she should give a definite answer on whether or not such person will ratify such act which may be rescinded within such period.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
    (NP
      (NP
        (NP (DT The) (NN person))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBZ is)
              (NP
                (NP (DT the) (NN counterparty))
                (PP (TO to)
                  (NP
                    (NP (DT a) (NN person))
                    (PP (IN with)
                      (NP (VBN limited) (NN capacity))))))))))
      (PRN (-LRB- -LRB-)
        (NP (JJ hereinafter)
          (S
            (VP (VBG referring)
              (PP (TO to)
                (NP
                  (NP (DT any) (JJ minor))
                  (, ,)
                  (NP (DT an) (JJ adult) (NN ward))
                  (, ,)
                  (NP
                    (NP (DT a) (NN person))
                    (PP (IN under)
                      (NP (NN curatorship))))
                  (, ,)
                  (CC and)
                  (NP
                    (NP (DT a) (NN person))
                    (PP (IN under)
                      (NP (NN assistance)))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBZ has)
                          (VP (VBN become)
                            (ADJP (JJ subject)
                              (PP (TO to)
                                (NP (DT the) (NN ruling))))
                            (PP (IN under)
                              (NP
                                (NP (NN paragraph) (CD 1))
                                (PP (IN of)
                                  (NP (NNP Article) (CD 17)))))))))))))))
        (-RRB- -RRB-)))
    (VP (MD may) (, ,)
      (SBAR (IN after)
        (S
          (NP
            (NP (JJ such) (NN person))
            (PP (IN with)
              (NP (JJ limited) (NN capacity))))
          (VP (VBZ has)
            (VP (VBN become)
              (NP
                (NP (DT a) (NN person))
                (PP (IN with)
                  (NP (NN capacity))))
              (PRN (-LRB- -LRB-)
                (S
                  (VP (VB hereinafter)
                    (VP (VBG referring)
                      (PP (TO to)
                        (NP
                          (NP (DT a) (NN person))
                          (PP
                            (ADVP (JJ free))
                            (IN of)
                            (NP
                              (NP (DT any) (NN limitation))
                              (PP (IN on)
                                (NP (NN capacity)))))))
                      (S
                        (VP (TO to)
                          (VP (VB act)))))))
                (-RRB- -RRB-))))))
      (, ,)
      (VP (VB issue)
        (PP (TO to)
          (NP (JJ such) (NN person)))
        (NP
          (NP (DT a) (NN notice))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ demands) (, ,)
                (PP (IN by)
                  (S
                    (VP (VBG establishing)
                      (NP
                        (NP (DT a) (JJ certain) (NN period))
                        (SBAR
                          (WHNP (WDT which))
                          (S
                            (VP (VBZ is)
                              (ADVP
                                (NP (CD one) (NN month))
                                (CC or)
                                (ADVP (RBR more)))
                              (, ,)
                              (SBAR (IN that)
                                (S
                                  (NP (NN he\/she))
                                  (VP (MD should)
                                    (VP (VB give)
                                      (NP (DT a) (JJ definite) (NN answer))
                                      (PP (IN on))
                                      (SBAR (IN whether)
                                        (CC or)
                                        (RB not)
                                        (S
                                          (NP (JJ such) (NN person))
                                          (VP (MD will)
                                            (VP (VB ratify)
                                              (NP
                                                (NP (JJ such) (NN act))
                                                (SBAR
                                                  (WHNP (WDT which))
                                                  (S
                                                    (VP (MD may)
                                                      (VP (VB be)
                                                        (VP (VBN rescinded)
                                                          (PP (IN within)
                                                            (NP (JJ such) (NN period))))))))))))))))))))))))))))))
    (. .)))

dep(issue-81, 1-2)
det(person-5, The-4)
nsubj(counterparty-9, person-5)
nsubj(issue-81, person-5)
cop(counterparty-9, is-7)
det(counterparty-9, the-8)
rcmod(person-5, counterparty-9)
det(person-12, a-11)
prep_to(counterparty-9, person-12)
amod(capacity-15, limited-14)
prep_with(person-12, capacity-15)
dep(person-5, hereinafter-17)
dep(hereinafter-17, referring-18)
det(minor-21, any-20)
prep_to(referring-18, minor-21)
det(ward-25, an-23)
amod(ward-25, adult-24)
prep_to(referring-18, ward-25)
conj_and(minor-21, ward-25)
det(person-28, a-27)
prep_to(referring-18, person-28)
conj_and(minor-21, person-28)
prep_under(person-28, curatorship-30)
det(person-34, a-33)
prep_to(referring-18, person-34)
conj_and(minor-21, person-34)
nsubj(subject-40, person-34)
prep_under(person-34, assistance-36)
aux(subject-40, has-38)
cop(subject-40, become-39)
rcmod(person-34, subject-40)
det(ruling-43, the-42)
prep_to(subject-40, ruling-43)
prep_under(subject-40, paragraph-45)
num(paragraph-45, 1-46)
prep_of(paragraph-45, Article-48)
num(Article-48, 17-49)
aux(issue-81, may-51)
mark(person-62, after-53)
amod(person-55, such-54)
nsubj(person-62, person-55)
amod(capacity-58, limited-57)
prep_with(person-55, capacity-58)
aux(person-62, has-59)
cop(person-62, become-60)
det(person-62, a-61)
advcl(issue-81, person-62)
prep_with(person-62, capacity-64)
parataxis(person-62, hereinafter-66)
dep(hereinafter-66, referring-67)
det(person-70, a-69)
prep_to(referring-67, person-70)
advmod(person-70, free-71)
det(limitation-74, any-73)
prep_of(person-70, limitation-74)
prep_on(limitation-74, capacity-76)
aux(act-78, to-77)
xcomp(referring-67, act-78)
root(ROOT-0, issue-81)
amod(person-84, such-83)
prep_to(issue-81, person-84)
det(notice-86, a-85)
dobj(issue-81, notice-86)
nsubj(demands-88, notice-86)
rcmod(notice-86, demands-88)
prepc_by(demands-88, establishing-91)
det(period-94, a-92)
amod(period-94, certain-93)
dobj(establishing-91, period-94)
nsubj(is-96, period-94)
rcmod(period-94, is-96)
num(month-98, one-97)
advmod(is-96, month-98)
advmod(is-96, more-100)
conj_or(month-98, more-100)
complm(give-105, that-102)
nsubj(give-105, he\/she-103)
aux(give-105, should-104)
ccomp(is-96, give-105)
det(answer-108, a-106)
amod(answer-108, definite-107)
dobj(give-105, answer-108)
prep(give-105, on-109)
complm(ratify-116, whether-110)
ccomp(give-105, not-112)
conj_or(ratify-116, not-112)
amod(person-114, such-113)
nsubj(ratify-116, person-114)
aux(ratify-116, will-115)
ccomp(give-105, ratify-116)
amod(act-118, such-117)
dobj(ratify-116, act-118)
nsubjpass(rescinded-122, act-118)
aux(rescinded-122, may-120)
auxpass(rescinded-122, be-121)
rcmod(act-118, rescinded-122)
amod(period-125, such-124)
prep_within(rescinded-122, period-125)

In such case, if such person fails to send any definite answer within such period, he/she is deemed to have ratified such act.
(ROOT
  (S
    (PP (IN In)
      (NP (JJ such) (NN case)))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (JJ such) (NN person))
        (VP (VBZ fails)
          (S
            (VP (TO to)
              (VP (VB send)
                (NP (DT any) (JJ definite) (NN answer))
                (PP (IN within)
                  (NP (JJ such) (NN period)))))))))
    (, ,)
    (NP (NN he\/she))
    (VP (VBZ is)
      (VP (VBN deemed)
        (S
          (VP (TO to)
            (VP (VB have)
              (VP (VBN ratified)
                (NP (JJ such) (NN act))))))))
    (. .)))

amod(case-3, such-2)
prep_in(deemed-20, case-3)
mark(fails-8, if-5)
amod(person-7, such-6)
nsubj(fails-8, person-7)
xsubj(send-10, person-7)
advcl(deemed-20, fails-8)
aux(send-10, to-9)
xcomp(fails-8, send-10)
det(answer-13, any-11)
amod(answer-13, definite-12)
dobj(send-10, answer-13)
amod(period-16, such-15)
prep_within(send-10, period-16)
nsubjpass(deemed-20, he\/she-18)
xsubj(ratified-23, he\/she-18)
auxpass(deemed-20, is-19)
root(ROOT-0, deemed-20)
aux(ratified-23, to-21)
aux(ratified-23, have-22)
xcomp(deemed-20, ratified-23)
amod(act-25, such-24)
dobj(ratified-23, act-25)

(2)The second sentence of the preceding paragraph shall likewise apply in cases where, while such person with limited capacity has not yet become a person with capacity, the person who is the counterparty to the person with limited capacity issues to the statutory agent, curator, or assistant of such person a notice prescribed in the preceding paragraph with respect to any act which is under the authority of any such officer, and the statutory agent, curator or assistant fails to issue any definite answer within the period referred to in such paragraph.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
    (NP
      (NP (DT The) (JJ second) (NN sentence))
      (PP (IN of)
        (NP (DT the) (VBG preceding) (NN paragraph))))
    (VP (MD shall)
      (ADVP (RB likewise))
      (VP (VB apply)
        (PP (IN in)
          (NP (NNS cases)))
        (SBAR
          (WHADVP (WRB where))
          (, ,)
          (S
            (SBAR (IN while)
              (S
                (NP
                  (NP (JJ such) (NN person))
                  (PP (IN with)
                    (NP (JJ limited) (NN capacity))))
                (VP (VBZ has) (RB not)
                  (ADVP (RB yet))
                  (VP (VBN become)
                    (NP
                      (NP
                        (NP (DT a) (NN person))
                        (PP (IN with)
                          (NP (NN capacity))))
                      (, ,)
                      (NP
                        (NP (DT the) (NN person))
                        (SBAR
                          (WHNP (WP who))
                          (S
                            (VP (VBZ is)
                              (NP
                                (NP (DT the) (NN counterparty))
                                (PP
                                  (PP (TO to)
                                    (NP
                                      (NP (DT the) (NN person))
                                      (PP (IN with)
                                        (NP (JJ limited) (NN capacity) (NNS issues)))))
                                  (PP (TO to)
                                    (NP
                                      (NP (DT the) (JJ statutory) (NN agent))
                                      (, ,)
                                      (NP (NN curator))
                                      (, ,)
                                      (CC or)
                                      (NP
                                        (NP (NN assistant))
                                        (PP (IN of)
                                          (NP (JJ such) (NN person))))))))))))
                      (NP
                        (NP (DT a) (NN notice))
                        (VP (VBN prescribed)
                          (PP (IN in)
                            (NP
                              (NP (DT the) (VBG preceding) (NN paragraph))
                              (PP (IN with)
                                (NP (NN respect)))))
                          (PP (TO to)
                            (NP
                              (NP (DT any) (NN act))
                              (SBAR
                                (WHNP (WDT which))
                                (S
                                  (VP (VBZ is)
                                    (PP (IN under)
                                      (NP
                                        (NP (DT the) (NN authority))
                                        (PP (IN of)
                                          (NP (DT any) (JJ such) (NN officer))))))))))))
                      (, ,)
                      (CC and)
                      (NP (DT the) (JJ statutory) (NN agent)))))))
            (, ,)
            (NP (NN curator)
              (CC or)
              (NN assistant))
            (VP (VBZ fails)
              (S
                (VP (TO to)
                  (VP (VB issue)
                    (NP (DT any) (JJ definite) (NN answer))
                    (PP (IN within)
                      (NP
                        (NP (DT the) (NN period))
                        (VP (VBN referred)
                          (S
                            (VP (TO to)))
                          (PP (IN in)
                            (NP (JJ such) (NN paragraph))))))))))))))
    (. .)))

dep(apply-13, 2-2)
det(sentence-6, The-4)
amod(sentence-6, second-5)
nsubj(apply-13, sentence-6)
det(paragraph-10, the-8)
amod(paragraph-10, preceding-9)
prep_of(sentence-6, paragraph-10)
aux(apply-13, shall-11)
advmod(apply-13, likewise-12)
root(ROOT-0, apply-13)
prep_in(apply-13, cases-15)
advmod(fails-88, where-16)
mark(person-29, while-18)
amod(person-20, such-19)
nsubj(person-29, person-20)
amod(capacity-23, limited-22)
prep_with(person-20, capacity-23)
aux(person-29, has-24)
neg(person-29, not-25)
advmod(person-29, yet-26)
cop(person-29, become-27)
det(person-29, a-28)
advcl(fails-88, person-29)
prep_with(person-29, capacity-31)
det(person-34, the-33)
conj_and(person-29, person-34)
nsubj(counterparty-38, person-34)
advcl(fails-88, person-34)
cop(counterparty-38, is-36)
det(counterparty-38, the-37)
rcmod(person-34, counterparty-38)
det(person-41, the-40)
prep_to(counterparty-38, person-41)
amod(issues-45, limited-43)
nn(issues-45, capacity-44)
prep_with(person-41, issues-45)
det(agent-49, the-47)
amod(agent-49, statutory-48)
prep_to(counterparty-38, agent-49)
prep_to(counterparty-38, curator-51)
conj_or(agent-49, curator-51)
prep_to(counterparty-38, assistant-54)
conj_or(agent-49, assistant-54)
amod(person-57, such-56)
prep_of(assistant-54, person-57)
det(notice-59, a-58)
dep(person-29, notice-59)
partmod(notice-59, prescribed-60)
det(paragraph-64, the-62)
amod(paragraph-64, preceding-63)
prep_in(prescribed-60, paragraph-64)
prep_with(paragraph-64, respect-66)
det(act-69, any-68)
prep_to(prescribed-60, act-69)
nsubj(is-71, act-69)
rcmod(act-69, is-71)
det(authority-74, the-73)
prep_under(is-71, authority-74)
det(officer-78, any-76)
amod(officer-78, such-77)
prep_of(authority-74, officer-78)
det(agent-83, the-81)
amod(agent-83, statutory-82)
conj_and(person-29, agent-83)
advcl(fails-88, agent-83)
nsubj(fails-88, curator-85)
xsubj(issue-90, curator-85)
conj_or(curator-85, assistant-87)
nsubj(fails-88, assistant-87)
xsubj(issue-90, assistant-87)
advcl(apply-13, fails-88)
aux(issue-90, to-89)
xcomp(fails-88, issue-90)
det(answer-93, any-91)
amod(answer-93, definite-92)
dobj(issue-90, answer-93)
det(period-96, the-95)
prep_within(issue-90, period-96)
xsubj(to-98, period-96)
partmod(period-96, referred-97)
xcomp(referred-97, to-98)
amod(paragraph-101, such-100)
prep_in(referred-97, paragraph-101)

(3)With respect to any act which requires any special formalities, if no notice to the effect that the perfection of such formalities has been completed is issued within the period set forth in the preceding two paragraphs, it is deemed that such act has been rescinded.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 3) (-RRB- -RRB-))
    (PP (IN With)
      (NP
        (NP (NN respect))
        (PP (TO to)
          (NP
            (NP (DT any) (NN act))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ requires)
                  (NP (DT any) (JJ special) (NNS formalities))
                  (, ,)
                  (SBAR (IN if)
                    (S
                      (NP
                        (NP (DT no) (NN notice))
                        (PP (TO to)
                          (NP
                            (NP (DT the) (NN effect))
                            (SBAR (IN that)
                              (S
                                (NP
                                  (NP (DT the) (NN perfection))
                                  (PP (IN of)
                                    (NP (JJ such) (NNS formalities))))
                                (VP (VBZ has)
                                  (VP (VBN been)
                                    (VP (VBN completed)))))))))
                      (VP (VBZ is)
                        (VP (VBN issued)
                          (PP (IN within)
                            (NP
                              (NP (DT the) (NN period))
                              (VP (VBN set)
                                (PRT (RP forth))
                                (PP (IN in)
                                  (NP (DT the) (VBG preceding) (CD two) (NNS paragraphs)))))))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (VP (VBN deemed)
        (SBAR (IN that)
          (S
            (NP (JJ such) (NN act))
            (VP (VBZ has)
              (VP (VBN been)
                (ADJP (JJ rescinded))))))))
    (. .)))

dep(deemed-45, 3-2)
det(act-8, any-7)
nsubj(requires-10, act-8)
prep_with_respect_to(deemed-45, act-8)
rcmod(act-8, requires-10)
det(formalities-13, any-11)
amod(formalities-13, special-12)
dobj(requires-10, formalities-13)
mark(issued-31, if-15)
det(notice-17, no-16)
nsubjpass(issued-31, notice-17)
det(effect-20, the-19)
prep_to(notice-17, effect-20)
complm(completed-29, that-21)
det(perfection-23, the-22)
nsubjpass(completed-29, perfection-23)
amod(formalities-26, such-25)
prep_of(perfection-23, formalities-26)
aux(completed-29, has-27)
auxpass(completed-29, been-28)
dep(effect-20, completed-29)
auxpass(issued-31, is-30)
advcl(requires-10, issued-31)
det(period-34, the-33)
prep_within(issued-31, period-34)
partmod(period-34, set-35)
prt(set-35, forth-36)
det(paragraphs-41, the-38)
amod(paragraphs-41, preceding-39)
num(paragraphs-41, two-40)
prep_in(set-35, paragraphs-41)
nsubjpass(deemed-45, it-43)
auxpass(deemed-45, is-44)
root(ROOT-0, deemed-45)
complm(rescinded-51, that-46)
amod(act-48, such-47)
nsubj(rescinded-51, act-48)
aux(rescinded-51, has-49)
cop(rescinded-51, been-50)
ccomp(deemed-45, rescinded-51)

(4)The person who is the counterparty to a person with limited capacity may issue a notice to any person under curatorship, or to any person under assistance who has been made subject to the ruling under paragraph 1 of Article 17 which demands that he/she should obtain the ratification of his/her curator or assistant, as the case may be, within the period set forth in paragraph 1 above.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 4) (-RRB- -RRB-))
    (NP
      (NP (DT The) (NN person))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ is)
            (NP
              (NP (DT the) (NN counterparty))
              (PP (TO to)
                (NP
                  (NP (DT a) (NN person))
                  (PP (IN with)
                    (NP (VBN limited) (NN capacity))))))))))
    (VP (MD may)
      (VP (VB issue)
        (NP (DT a) (NN notice))
        (PP
          (PP (TO to)
            (NP
              (NP (DT any) (NN person))
              (PP (IN under)
                (NP (NN curatorship)))))
          (, ,)
          (CC or)
          (PP (TO to)
            (NP (DT any) (NN person))))
        (PP (IN under)
          (NP
            (NP (NN assistance))
            (SBAR
              (WHNP (WP who))
              (S
                (VP (VBZ has)
                  (VP (VBN been)
                    (VP (VBN made)
                      (ADJP (JJ subject)
                        (PP (TO to)
                          (NP (DT the) (NN ruling))))
                      (PP (IN under)
                        (NP
                          (NP (NN paragraph) (CD 1))
                          (PP (IN of)
                            (NP (NNP Article) (CD 17)))
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (VP (VBZ demands)
                                (SBAR (IN that)
                                  (S
                                    (NP (NN he\/she))
                                    (VP (MD should)
                                      (VP (VB obtain)
                                        (NP
                                          (NP (DT the) (NN ratification))
                                          (PP (IN of)
                                            (NP (NN his\/her) (NN curator)
                                              (CC or)
                                              (NN assistant))))
                                        (, ,)
                                        (SBAR (IN as)
                                          (S
                                            (NP (DT the) (NN case))
                                            (VP (MD may)
                                              (VP (VB be)))))))))))))))))))))
        (, ,)
        (PP (IN within)
          (NP
            (NP (DT the) (NN period))
            (VP (VBN set)
              (ADVP (RB forth)
                (PP (IN in)
                  (NP (NN paragraph))
                  (ADVP
                    (NP (CD 1))
                    (IN above)))))))))
    (. .)))

dep(issue-17, 4-2)
det(person-5, The-4)
nsubj(counterparty-9, person-5)
nsubj(issue-17, person-5)
cop(counterparty-9, is-7)
det(counterparty-9, the-8)
rcmod(person-5, counterparty-9)
det(person-12, a-11)
prep_to(counterparty-9, person-12)
amod(capacity-15, limited-14)
prep_with(person-12, capacity-15)
aux(issue-17, may-16)
root(ROOT-0, issue-17)
det(notice-19, a-18)
dobj(issue-17, notice-19)
det(person-22, any-21)
prep_to(issue-17, person-22)
prep_under(person-22, curatorship-24)
det(person-29, any-28)
prep_to(issue-17, person-29)
conj_or(person-22, person-29)
prep_under(issue-17, assistance-31)
nsubjpass(made-35, assistance-31)
aux(made-35, has-33)
auxpass(made-35, been-34)
rcmod(assistance-31, made-35)
acomp(made-35, subject-36)
det(ruling-39, the-38)
prep_to(subject-36, ruling-39)
prep_under(made-35, paragraph-41)
nsubj(demands-47, paragraph-41)
num(paragraph-41, 1-42)
prep_of(paragraph-41, Article-44)
num(Article-44, 17-45)
rcmod(paragraph-41, demands-47)
complm(obtain-51, that-48)
nsubj(obtain-51, he\/she-49)
aux(obtain-51, should-50)
ccomp(demands-47, obtain-51)
det(ratification-53, the-52)
dobj(obtain-51, ratification-53)
nn(curator-56, his\/her-55)
prep_of(ratification-53, curator-56)
prep_of(ratification-53, assistant-58)
conj_or(curator-56, assistant-58)
mark(be-64, as-60)
det(case-62, the-61)
nsubj(be-64, case-62)
aux(be-64, may-63)
advcl(obtain-51, be-64)
det(period-68, the-67)
prep_within(issue-17, period-68)
partmod(period-68, set-69)
advmod(set-69, forth-70)
prep_in(forth-70, paragraph-72)
npadvmod(above-74, 1-73)
advmod(forth-70, above-74)

In such case, if the person under curatorship or person under assistance fails to issue, within the applicable period, a notice to the effect that such ratification has been obtained, it is deemed that such act has been rescinded.
(ROOT
  (S
    (PP (IN In)
      (NP (JJ such) (NN case)))
    (, ,)
    (SBAR (IN if)
      (S
        (NP
          (NP (DT the) (NN person))
          (PP (IN under)
            (NP
              (NP (NN curatorship)
                (CC or)
                (NN person))
              (PP (IN under)
                (NP (NN assistance))))))
        (VP (VBZ fails)
          (S
            (VP (TO to)
              (VP (VB issue) (, ,)
                (PP (IN within)
                  (NP
                    (NP (DT the) (JJ applicable) (NN period))
                    (, ,)
                    (NP
                      (NP (DT a) (NN notice))
                      (PP (TO to)
                        (NP (DT the) (NN effect))))))
                (SBAR (IN that)
                  (S
                    (NP (JJ such) (NN ratification))
                    (VP (VBZ has)
                      (VP (VBN been)
                        (VP (VBN obtained))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (VP (VBN deemed)
        (SBAR (IN that)
          (S
            (NP (JJ such) (NN act))
            (VP (VBZ has)
              (VP (VBN been)
                (ADJP (JJ rescinded))))))))
    (. .)))

amod(case-3, such-2)
prep_in(deemed-37, case-3)
mark(fails-14, if-5)
det(person-7, the-6)
nsubj(fails-14, person-7)
xsubj(issue-16, person-7)
prep_under(person-7, curatorship-9)
prep_under(person-7, person-11)
conj_or(curatorship-9, person-11)
prep_under(curatorship-9, assistance-13)
advcl(deemed-37, fails-14)
aux(issue-16, to-15)
xcomp(fails-14, issue-16)
det(period-21, the-19)
amod(period-21, applicable-20)
prep_within(issue-16, period-21)
det(notice-24, a-23)
appos(period-21, notice-24)
det(effect-27, the-26)
prep_to(notice-24, effect-27)
complm(obtained-33, that-28)
amod(ratification-30, such-29)
nsubjpass(obtained-33, ratification-30)
aux(obtained-33, has-31)
auxpass(obtained-33, been-32)
ccomp(issue-16, obtained-33)
nsubjpass(deemed-37, it-35)
auxpass(deemed-37, is-36)
root(ROOT-0, deemed-37)
complm(rescinded-43, that-38)
amod(act-40, such-39)
nsubj(rescinded-43, act-40)
aux(rescinded-43, has-41)
cop(rescinded-43, been-42)
ccomp(deemed-37, rescinded-43)

</t1>
<t2>
For a contract executed by a person under curatorship, although the other party issue a notice to the person under curatorship which demands, by establishing a certain period which is one month or more, that he/she should obtain the ratification of his/her curator , the person under curatorship fails to issue, within the applicable period, from that point on, that other party cannot rescind the contract for the reason that the contract was executed by the person under curatorship.
(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (DT a) (NN contract))
        (VP (VBN executed)
          (PP (IN by)
            (NP (DT a) (NN person)))
          (PP (IN under)
            (NP (NN curatorship)))
          (, ,)
          (SBAR (IN although)
            (S
              (NP (DT the) (JJ other) (NN party))
              (VP (VBP issue)
                (NP (DT a) (NN notice))
                (PP (TO to)
                  (NP
                    (NP (DT the) (NN person))
                    (PP (IN under)
                      (NP (NN curatorship)))
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP (VBZ demands))))))
                (, ,)
                (PP (IN by)
                  (S
                    (VP (VBG establishing)
                      (NP
                        (NP (DT a) (JJ certain) (NN period))
                        (SBAR
                          (WHNP (WDT which))
                          (S
                            (VP (VBZ is)
                              (ADVP
                                (NP (CD one) (NN month))
                                (CC or)
                                (ADVP (RBR more)))
                              (, ,)
                              (SBAR (IN that)
                                (S
                                  (NP (NN he\/she))
                                  (VP (MD should)
                                    (VP (VB obtain)
                                      (NP
                                        (NP (DT the) (NN ratification))
                                        (PP (IN of)
                                          (NP (NN his\/her) (NN curator)))))))))))))))))))))
    (, ,)
    (NP
      (NP (DT the) (NN person))
      (PP (IN under)
        (NP (NN curatorship))))
    (VP (VBZ fails)
      (S
        (VP (TO to)
          (VP (VB issue) (, ,)
            (PP (IN within)
              (NP (DT the) (JJ applicable) (NN period)))
            (, ,)
            (PP (IN from)
              (NP
                (NP (DT that) (NN point))
                (PP (IN on))))
            (, ,)
            (SBAR (IN that)
              (S
                (NP (JJ other) (NN party))
                (VP (MD can) (RB not)
                  (VP (VB rescind)
                    (NP (DT the) (NN contract))
                    (PP (IN for)
                      (NP (DT the) (NN reason)))
                    (SBAR (IN that)
                      (S
                        (NP (DT the) (NN contract))
                        (VP (VBD was)
                          (VP (VBN executed)
                            (PP (IN by)
                              (NP (DT the) (NN person)))
                            (PP (IN under)
                              (NP (NN curatorship)))))))))))))))
    (. .)))

det(contract-3, a-2)
prep_for(fails-52, contract-3)
partmod(contract-3, executed-4)
det(person-7, a-6)
agent(executed-4, person-7)
prep_under(executed-4, curatorship-9)
mark(issue-15, although-11)
det(party-14, the-12)
amod(party-14, other-13)
nsubj(issue-15, party-14)
advcl(executed-4, issue-15)
det(notice-17, a-16)
dobj(issue-15, notice-17)
det(person-20, the-19)
prep_to(issue-15, person-20)
nsubj(demands-24, person-20)
prep_under(person-20, curatorship-22)
rcmod(person-20, demands-24)
prepc_by(issue-15, establishing-27)
det(period-30, a-28)
amod(period-30, certain-29)
dobj(establishing-27, period-30)
nsubj(is-32, period-30)
rcmod(period-30, is-32)
num(month-34, one-33)
advmod(is-32, month-34)
advmod(is-32, more-36)
conj_or(month-34, more-36)
complm(obtain-41, that-38)
nsubj(obtain-41, he\/she-39)
aux(obtain-41, should-40)
ccomp(is-32, obtain-41)
det(ratification-43, the-42)
dobj(obtain-41, ratification-43)
nn(curator-46, his\/her-45)
prep_of(ratification-43, curator-46)
det(person-49, the-48)
nsubj(fails-52, person-49)
xsubj(issue-54, person-49)
prep_under(person-49, curatorship-51)
root(ROOT-0, fails-52)
aux(issue-54, to-53)
xcomp(fails-52, issue-54)
det(period-59, the-57)
amod(period-59, applicable-58)
prep_within(issue-54, period-59)
det(point-63, that-62)
prep_from(issue-54, point-63)
prep(point-63, on-64)
complm(rescind-71, that-66)
amod(party-68, other-67)
nsubj(rescind-71, party-68)
aux(rescind-71, can-69)
neg(rescind-71, not-70)
ccomp(issue-54, rescind-71)
det(contract-73, the-72)
dobj(rescind-71, contract-73)
det(reason-76, the-75)
prep_for(rescind-71, reason-76)
complm(executed-81, that-77)
det(contract-79, the-78)
nsubjpass(executed-81, contract-79)
auxpass(executed-81, was-80)
ccomp(rescind-71, executed-81)
det(person-84, the-83)
agent(executed-81, person-84)
prep_under(executed-81, curatorship-86)

</t2>
</pair>
<pair id="H22-4-I" label="Y">
<t1>
(Pre-contract of Sales Exercisable by One Party)Article 556
(1)A pre-contract to sell or purchase made by one party shall take the effect of a sale when the other party has manifested his/her intention to complete such sale.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
    (NP (DT A)
      (ADJP (JJ pre-contract)
        (S
          (VP (TO to)
            (VP
              (VP (VB sell))
              (CC or)
              (VP (VB purchase)
                (VP (VBN made)
                  (PP (IN by)
                    (NP (CD one)))))))))
      (NN party))
    (VP (MD shall)
      (VP (VB take)
        (NP
          (NP (DT the) (NN effect))
          (PP (IN of)
            (NP (DT a) (NN sale))))
        (SBAR
          (WHADVP (WRB when))
          (S
            (NP (DT the) (JJ other) (NN party))
            (VP (VBZ has)
              (VP (VBN manifested)
                (NP (NN his\/her) (NN intention))
                (S
                  (VP (TO to)
                    (VP (VB complete)
                      (NP (JJ such) (NN sale)))))))))))
    (. .)))

dep(take-15, 1-2)
det(party-13, A-4)
amod(party-13, pre-contract-5)
aux(sell-7, to-6)
xcomp(pre-contract-5, sell-7)
xcomp(pre-contract-5, purchase-9)
conj_or(sell-7, purchase-9)
dep(purchase-9, made-10)
prep_by(made-10, one-12)
nsubj(take-15, party-13)
aux(take-15, shall-14)
root(ROOT-0, take-15)
det(effect-17, the-16)
dobj(take-15, effect-17)
det(sale-20, a-19)
prep_of(effect-17, sale-20)
advmod(manifested-26, when-21)
det(party-24, the-22)
amod(party-24, other-23)
nsubj(manifested-26, party-24)
aux(manifested-26, has-25)
advcl(take-15, manifested-26)
nn(intention-28, his\/her-27)
dobj(manifested-26, intention-28)
aux(complete-30, to-29)
xcomp(manifested-26, complete-30)
amod(sale-32, such-31)
dobj(complete-30, sale-32)

(2)If no period is provided in relation to the manifestation of intention set forth in the preceding paragraph, the other party to the pre-contact may issue a notice of demand to the other party, specifying a reasonable period, to the effect that the other party is to give a definite answer as to whether or not he/she will complete the sale within that period.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
    (SBAR (IN If)
      (S
        (NP (DT no) (NN period))
        (VP (VBZ is)
          (VP (VBN provided)
            (PP (IN in)
              (NP (NN relation)))
            (PP (TO to)
              (NP
                (NP (DT the) (NN manifestation))
                (PP (IN of)
                  (NP
                    (NP (NN intention))
                    (VP (VBN set)
                      (PRT (RP forth))
                      (PP (IN in)
                        (NP (DT the) (VBG preceding) (NN paragraph))))))))))))
    (, ,)
    (NP
      (NP (DT the) (JJ other) (NN party))
      (PP (TO to)
        (NP (DT the) (NN pre-contact))))
    (VP (MD may)
      (VP (VB issue)
        (NP
          (NP (DT a) (NN notice))
          (PP (IN of)
            (NP (NN demand))))
        (PP (TO to)
          (NP (DT the) (JJ other) (NN party)))
        (, ,)
        (S
          (VP (VBG specifying)
            (NP (DT a) (JJ reasonable) (NN period))))
        (, ,)
        (PP (TO to)
          (NP
            (NP (DT the) (NN effect))
            (SBAR (IN that)
              (S
                (NP (DT the) (JJ other) (NN party))
                (VP (VBZ is)
                  (S
                    (VP (TO to)
                      (VP (VB give)
                        (NP (DT a) (JJ definite) (NN answer))
                        (ADVP (RB as)
                          (PP (TO to)))
                        (SBAR (IN whether)
                          (CC or)
                          (RB not)
                          (S
                            (NP (NN he\/she))
                            (VP (MD will)
                              (VP (VB complete)
                                (NP (DT the) (NN sale))
                                (PP (IN within)
                                  (NP (DT that) (NN period)))))))))))))))))
    (. .)))

dep(issue-30, 2-2)
mark(provided-8, If-4)
det(period-6, no-5)
nsubjpass(provided-8, period-6)
auxpass(provided-8, is-7)
advcl(issue-30, provided-8)
prep_in(provided-8, relation-10)
det(manifestation-13, the-12)
prep_to(provided-8, manifestation-13)
prep_of(manifestation-13, intention-15)
partmod(intention-15, set-16)
prt(set-16, forth-17)
det(paragraph-21, the-19)
amod(paragraph-21, preceding-20)
prep_in(set-16, paragraph-21)
det(party-25, the-23)
amod(party-25, other-24)
nsubj(issue-30, party-25)
det(pre-contact-28, the-27)
prep_to(party-25, pre-contact-28)
aux(issue-30, may-29)
root(ROOT-0, issue-30)
det(notice-32, a-31)
dobj(issue-30, notice-32)
prep_of(notice-32, demand-34)
det(party-38, the-36)
amod(party-38, other-37)
prep_to(issue-30, party-38)
partmod(issue-30, specifying-40)
xcomp(issue-30, specifying-40)
det(period-43, a-41)
amod(period-43, reasonable-42)
dobj(specifying-40, period-43)
det(effect-47, the-46)
prep_to(issue-30, effect-47)
complm(is-52, that-48)
det(party-51, the-49)
amod(party-51, other-50)
nsubj(is-52, party-51)
xsubj(give-54, party-51)
dep(effect-47, is-52)
aux(give-54, to-53)
xcomp(is-52, give-54)
det(answer-57, a-55)
amod(answer-57, definite-56)
dobj(give-54, answer-57)
advmod(give-54, as-58)
prep(as-58, to-59)
complm(complete-65, whether-60)
ccomp(give-54, not-62)
conj_or(complete-65, not-62)
nsubj(complete-65, he\/she-63)
aux(complete-65, will-64)
ccomp(give-54, complete-65)
det(sale-67, the-66)
dobj(complete-65, sale-67)
det(period-70, that-69)
prep_within(complete-65, period-70)

In such cases, if the other party fails to give a definite answer within that period, the pre-contract of sale by one party shall lose its effect.
(ROOT
  (S
    (PP (IN In)
      (NP (JJ such) (NNS cases)))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (DT the) (JJ other) (NN party))
        (VP (VBZ fails)
          (S
            (VP (TO to)
              (VP (VB give)
                (NP (DT a) (JJ definite) (NN answer))
                (PP (IN within)
                  (NP (DT that) (NN period)))))))))
    (, ,)
    (NP
      (NP (DT the) (NN pre-contract))
      (PP (IN of)
        (NP
          (NP (NN sale))
          (PP (IN by)
            (NP (CD one) (NN party))))))
    (VP (MD shall)
      (VP (VB lose)
        (NP (PRP$ its) (NN effect))))
    (. .)))

amod(cases-3, such-2)
prep_in(lose-27, cases-3)
mark(fails-9, if-5)
det(party-8, the-6)
amod(party-8, other-7)
nsubj(fails-9, party-8)
xsubj(give-11, party-8)
advcl(lose-27, fails-9)
aux(give-11, to-10)
xcomp(fails-9, give-11)
det(answer-14, a-12)
amod(answer-14, definite-13)
dobj(give-11, answer-14)
det(period-17, that-16)
prep_within(give-11, period-17)
det(pre-contract-20, the-19)
nsubj(lose-27, pre-contract-20)
prep_of(pre-contract-20, sale-22)
num(party-25, one-24)
prep_by(sale-22, party-25)
aux(lose-27, shall-26)
root(ROOT-0, lose-27)
poss(effect-29, its-28)
dobj(lose-27, effect-29)

</t1>
<t2>
If no period is provided in relation to the manifestation of intention for a completion in a pre-contract to sell or purchase, regardless of whether or not the party to the pre contract issued a notice of demand to the other party, specifying a reasonable period, for the other party is to give a definite answer as to whether or not he or she would complete the sale, if no definite answer has been given, the party to the pre contract cannot demand execution of the contract of sale to the other party.
(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT no) (NN period))
        (VP (VBZ is)
          (VP (VBN provided)
            (PP (IN in)
              (NP (NN relation)))
            (PP (TO to)
              (NP
                (NP (DT the) (NN manifestation))
                (PP (IN of)
                  (NP
                    (NP (NN intention))
                    (PP (IN for)
                      (NP
                        (NP (DT a) (NN completion))
                        (PP (IN in)
                          (NP (DT a) (NN pre-contract)))))))))
            (S
              (VP (TO to)
                (VP (VB sell)
                  (CC or)
                  (VB purchase))))))))
    (, ,)
    (ADVP (RB regardless)
      (PP (IN of)
        (SBAR (IN whether)
          (S
            (NP
              (NP
                (FRAG (CC or)
                  (RB not)
                  (NP (DT the) (NN party))))
              (PP (TO to)
                (NP
                  (NP (DT the) (NN pre) (NN contract))
                  (VP (VBN issued)
                    (NP
                      (NP (DT a) (NN notice))
                      (PP (IN of)
                        (NP (NN demand))))
                    (PP (TO to)
                      (NP (DT the) (JJ other) (NN party)))
                    (, ,)
                    (S
                      (VP (VBG specifying)
                        (NP (DT a) (JJ reasonable) (NN period))))
                    (, ,)
                    (PP (IN for)
                      (NP (DT the) (JJ other) (NN party)))))))
            (VP (VBZ is)
              (S
                (VP (TO to)
                  (VP (VB give)
                    (NP (DT a) (JJ definite) (NN answer))
                    (ADVP (RB as)
                      (PP (TO to)))
                    (SBAR (IN whether)
                      (CC or)
                      (RB not)
                      (S
                        (NP (PRP he)
                          (CC or)
                          (PRP she))
                        (VP (MD would)
                          (VP (VB complete)
                            (NP (DT the) (NN sale))))))
                    (, ,)
                    (SBAR (IN if)
                      (S
                        (NP (DT no) (JJ definite) (NN answer))
                        (VP (VBZ has)
                          (VP (VBN been)
                            (VP (VBN given))))))))))))))
    (, ,)
    (NP
      (NP (DT the) (NN party))
      (PP (TO to)
        (NP (DT the) (NN pre) (NN contract))))
    (VP (MD can) (RB not)
      (VP (VB demand)
        (NP
          (NP (NN execution))
          (PP (IN of)
            (NP
              (NP (DT the) (NN contract))
              (PP (IN of)
                (NP (NN sale))))))
        (PP (TO to)
          (NP (DT the) (JJ other) (NN party)))))
    (. .)))

mark(provided-5, If-1)
det(period-3, no-2)
nsubjpass(provided-5, period-3)
xsubj(sell-20, period-3)
auxpass(provided-5, is-4)
advcl(demand-89, provided-5)
prep_in(provided-5, relation-7)
det(manifestation-10, the-9)
prep_to(provided-5, manifestation-10)
prep_of(manifestation-10, intention-12)
det(completion-15, a-14)
prep_for(intention-12, completion-15)
det(pre-contract-18, a-17)
prep_in(completion-15, pre-contract-18)
aux(sell-20, to-19)
xcomp(provided-5, sell-20)
xcomp(provided-5, purchase-22)
conj_or(sell-20, purchase-22)
complm(is-54, whether-26)
dep(not-28, or-27)
nsubj(is-54, not-28)
xsubj(give-56, not-28)
det(party-30, the-29)
dep(not-28, party-30)
det(contract-34, the-32)
nn(contract-34, pre-33)
prep_to(not-28, contract-34)
partmod(contract-34, issued-35)
det(notice-37, a-36)
dobj(issued-35, notice-37)
prep_of(notice-37, demand-39)
det(party-43, the-41)
amod(party-43, other-42)
prep_to(issued-35, party-43)
partmod(issued-35, specifying-45)
xcomp(issued-35, specifying-45)
det(period-48, a-46)
amod(period-48, reasonable-47)
dobj(specifying-45, period-48)
det(party-53, the-51)
amod(party-53, other-52)
prep_for(issued-35, party-53)
prepc_regardless_of(demand-89, is-54)
aux(give-56, to-55)
xcomp(is-54, give-56)
det(answer-59, a-57)
amod(answer-59, definite-58)
dobj(give-56, answer-59)
advmod(give-56, as-60)
prep(as-60, to-61)
complm(complete-69, whether-62)
ccomp(give-56, not-64)
conj_or(complete-69, not-64)
nsubj(complete-69, he-65)
conj_or(he-65, she-67)
nsubj(complete-69, she-67)
aux(complete-69, would-68)
ccomp(give-56, complete-69)
det(sale-71, the-70)
dobj(complete-69, sale-71)
mark(given-79, if-73)
det(answer-76, no-74)
amod(answer-76, definite-75)
nsubjpass(given-79, answer-76)
aux(given-79, has-77)
auxpass(given-79, been-78)
advcl(give-56, given-79)
det(party-82, the-81)
nsubj(demand-89, party-82)
det(contract-86, the-84)
nn(contract-86, pre-85)
prep_to(party-82, contract-86)
aux(demand-89, can-87)
neg(demand-89, not-88)
root(ROOT-0, demand-89)
dobj(demand-89, execution-90)
det(contract-93, the-92)
prep_of(execution-90, contract-93)
prep_of(contract-93, sale-95)
det(party-99, the-97)
amod(party-99, other-98)
prep_to(demand-89, party-99)

</t2>
</pair>
<pair id="H22-4-E" label="N">
<t1>
(Right of Notice of Counterparty of Unauthorized Agency)Article 114
In the case referred to in the preceding Article, the counterparty may require the principal, by fixing a reasonable period of time, to make a definite answer on whether or not he/she will ratify within such period of time.
(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT the) (NN case))
        (VP (VBN referred)
          (PP (TO to))
          (PP (IN in)
            (NP (DT the) (VBG preceding) (NN Article))))))
    (, ,)
    (NP (DT the) (NN counterparty))
    (VP (MD may)
      (VP (VB require)
        (NP (DT the) (NN principal))
        (, ,)
        (PP (IN by)
          (S
            (VP (VBG fixing)
              (NP
                (NP (DT a) (JJ reasonable) (NN period))
                (PP (IN of)
                  (NP (NN time)))))))
        (, ,)
        (S
          (VP (TO to)
            (VP (VB make)
              (NP (DT a) (JJ definite) (NN answer))
              (PP (IN on))
              (SBAR (IN whether)
                (CC or)
                (RB not)
                (S
                  (NP (NN he\/she))
                  (VP (MD will)
                    (VP (VB ratify)
                      (PP (IN within)
                        (NP
                          (NP (JJ such) (NN period))
                          (PP (IN of)
                            (NP (NN time))))))))))))))
    (. .)))

det(case-3, the-2)
prep_in(require-14, case-3)
partmod(case-3, referred-4)
prep(referred-4, to-5)
det(Article-9, the-7)
amod(Article-9, preceding-8)
prep_in(referred-4, Article-9)
det(counterparty-12, the-11)
nsubj(require-14, counterparty-12)
xsubj(make-27, counterparty-12)
aux(require-14, may-13)
root(ROOT-0, require-14)
det(principal-16, the-15)
dobj(require-14, principal-16)
prepc_by(require-14, fixing-19)
det(period-22, a-20)
amod(period-22, reasonable-21)
dobj(fixing-19, period-22)
prep_of(period-22, time-24)
aux(make-27, to-26)
xcomp(require-14, make-27)
det(answer-30, a-28)
amod(answer-30, definite-29)
dobj(make-27, answer-30)
prep(make-27, on-31)
complm(ratify-37, whether-32)
ccomp(make-27, not-34)
conj_or(ratify-37, not-34)
nsubj(ratify-37, he\/she-35)
aux(ratify-37, will-36)
ccomp(make-27, ratify-37)
amod(period-40, such-39)
prep_within(ratify-37, period-40)
prep_of(period-40, time-42)

In such case, if the principal fails to make any definite answer within such period, he/she is deemed to have refused to ratify.
(ROOT
  (S
    (PP (IN In)
      (NP (JJ such) (NN case)))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (DT the) (NN principal))
        (VP (VBZ fails)
          (S
            (VP (TO to)
              (VP (VB make)
                (NP (DT any) (JJ definite) (NN answer))
                (PP (IN within)
                  (NP (JJ such) (NN period)))))))))
    (, ,)
    (NP (NN he\/she))
    (VP (VBZ is)
      (VP (VBN deemed)
        (S
          (VP (TO to)
            (VP (VB have)
              (VP (VBN refused)
                (S
                  (VP (TO to)
                    (VP (VB ratify))))))))))
    (. .)))

amod(case-3, such-2)
prep_in(deemed-20, case-3)
mark(fails-8, if-5)
det(principal-7, the-6)
nsubj(fails-8, principal-7)
xsubj(make-10, principal-7)
advcl(deemed-20, fails-8)
aux(make-10, to-9)
xcomp(fails-8, make-10)
det(answer-13, any-11)
amod(answer-13, definite-12)
dobj(make-10, answer-13)
amod(period-16, such-15)
prep_within(make-10, period-16)
nsubjpass(deemed-20, he\/she-18)
xsubj(refused-23, he\/she-18)
auxpass(deemed-20, is-19)
root(ROOT-0, deemed-20)
aux(refused-23, to-21)
aux(refused-23, have-22)
xcomp(deemed-20, refused-23)
aux(ratify-25, to-24)
xcomp(refused-23, ratify-25)

</t1>
<t2>
For a contract completed by an unauthorized agent, regardless of the fact that the counterparty requires the principal, by fixing a reasonable period of time, to make a definite answer on whether or not he/she will ratify within such period of time , if no definite answer has been given, the other party can demand execution of the contract to the principal.
(ROOT
  (S
    (PP (IN For)
      (NP
        (NP (DT a) (NN contract))
        (VP (VBN completed)
          (PP (IN by)
            (NP (DT an) (JJ unauthorized) (NN agent)))
          (, ,)
          (ADVP
            (ADVP (RB regardless)
              (PP (IN of)
                (NP (DT the) (NN fact))))
            (SBAR (IN that)
              (S
                (NP (DT the) (NN counterparty))
                (VP (VBZ requires)
                  (NP
                    (NP (DT the) (NN principal))
                    (, ,)
                    (PP (IN by)
                      (S
                        (VP (VBG fixing)
                          (NP
                            (NP (DT a) (JJ reasonable) (NN period))
                            (PP (IN of)
                              (NP (NN time))))))))
                  (, ,)
                  (S
                    (VP (TO to)
                      (VP (VB make)
                        (NP (DT a) (JJ definite) (NN answer))
                        (PP (IN on))
                        (SBAR (IN whether)
                          (CC or)
                          (RB not)
                          (S
                            (NP (NN he\/she))
                            (VP (MD will)
                              (VP (VB ratify)
                                (PP (IN within)
                                  (NP
                                    (NP (JJ such) (NN period))
                                    (PP (IN of)
                                      (NP (NN time))))))))))))
                  (, ,)
                  (SBAR (IN if)
                    (S
                      (NP (DT no) (JJ definite) (NN answer))
                      (VP (VBZ has)
                        (VP (VBN been)
                          (VP (VBN given)))))))))))))
    (, ,)
    (NP (DT the) (JJ other) (NN party))
    (VP (MD can)
      (VP (VB demand)
        (NP
          (NP (NN execution))
          (PP (IN of)
            (NP (DT the) (NN contract))))
        (PP (TO to)
          (NP (DT the) (NN principal)))))
    (. .)))

det(contract-3, a-2)
prep_for(demand-59, contract-3)
partmod(contract-3, completed-4)
det(agent-8, an-6)
amod(agent-8, unauthorized-7)
agent(completed-4, agent-8)
det(fact-13, the-12)
prep_regardless_of(completed-4, fact-13)
dep(requires-17, that-14)
det(counterparty-16, the-15)
nsubj(requires-17, counterparty-16)
xsubj(make-30, counterparty-16)
ccomp(completed-4, requires-17)
det(principal-19, the-18)
dobj(requires-17, principal-19)
prepc_by(principal-19, fixing-22)
det(period-25, a-23)
amod(period-25, reasonable-24)
dobj(fixing-22, period-25)
prep_of(period-25, time-27)
aux(make-30, to-29)
xcomp(requires-17, make-30)
det(answer-33, a-31)
amod(answer-33, definite-32)
dobj(make-30, answer-33)
prep(make-30, on-34)
complm(ratify-40, whether-35)
ccomp(make-30, not-37)
conj_or(ratify-40, not-37)
nsubj(ratify-40, he\/she-38)
aux(ratify-40, will-39)
ccomp(make-30, ratify-40)
amod(period-43, such-42)
prep_within(ratify-40, period-43)
prep_of(period-43, time-45)
mark(given-53, if-47)
det(answer-50, no-48)
amod(answer-50, definite-49)
nsubjpass(given-53, answer-50)
aux(given-53, has-51)
auxpass(given-53, been-52)
advcl(requires-17, given-53)
det(party-57, the-55)
amod(party-57, other-56)
nsubj(demand-59, party-57)
aux(demand-59, can-58)
root(ROOT-0, demand-59)
dobj(demand-59, execution-60)
det(contract-63, the-62)
prep_of(execution-60, contract-63)
det(principal-66, the-65)
prep_to(demand-59, principal-66)

</t2>
</pair>
<pair id="H22-5-I" label="N">
<t1>
(Method and Effect of Set-offs)Article 506
(1)Set-offs shall be effected by means of manifestation of one party's intention to the other.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
    (NP (NNP Set-offs))
    (VP (MD shall)
      (VP (VB be)
        (VP (VBN effected)
          (PP (IN by)
            (NP
              (NP (NNS means))
              (PP (IN of)
                (NP
                  (NP (NN manifestation))
                  (PP (IN of)
                    (NP
                      (NP (CD one) (NN party) (POS 's))
                      (NN intention)))))))
          (PP (TO to)
            (NP (DT the) (JJ other))))))
    (. .)))

dep(effected-7, 1-2)
nsubjpass(effected-7, Set-offs-4)
aux(effected-7, shall-5)
auxpass(effected-7, be-6)
root(ROOT-0, effected-7)
prep_by_means_of(effected-7, manifestation-11)
num(party-14, one-13)
poss(intention-16, party-14)
prep_of(manifestation-11, intention-16)
det(other-19, the-18)
prep_to(effected-7, other-19)

In such case, no condition or time limit may be added to such manifestation of intention.
(ROOT
  (S
    (PP (IN In)
      (NP (JJ such) (NN case)))
    (, ,)
    (NP (DT no) (NN condition)
      (CC or)
      (NN time) (NN limit))
    (VP (MD may)
      (VP (VB be)
        (VP (VBN added)
          (PP (TO to)
            (NP
              (NP (JJ such) (NN manifestation))
              (PP (IN of)
                (NP (NN intention))))))))
    (. .)))

amod(case-3, such-2)
prep_in(added-12, case-3)
det(limit-9, no-5)
nn(limit-9, condition-6)
conj_or(condition-6, time-8)
nn(limit-9, time-8)
nsubjpass(added-12, limit-9)
aux(added-12, may-10)
auxpass(added-12, be-11)
root(ROOT-0, added-12)
amod(manifestation-15, such-14)
prep_to(added-12, manifestation-15)
prep_of(manifestation-15, intention-17)

(2)The manifestation of intention set forth in the preceding paragraph shall take effect retroactively as of the time when the obligations of both parties became due and suitable for set-off.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
    (NP
      (NP (DT The) (NN manifestation))
      (PP (IN of)
        (NP
          (NP (NN intention))
          (VP (VBN set)
            (PRT (RP forth))
            (PP (IN in)
              (NP (DT the) (VBG preceding) (NN paragraph)))))))
    (VP (MD shall)
      (VP (VB take)
        (NP (NN effect))
        (PP
          (ADVP (RB retroactively))
          (IN as) (IN of)
          (NP
            (NP (DT the) (NN time))
            (SBAR
              (WHADVP (WRB when))
              (S
                (NP
                  (NP (DT the) (NNS obligations))
                  (PP (IN of)
                    (NP (DT both) (NNS parties))))
                (VP (VBD became)
                  (ADJP (JJ due)
                    (CC and)
                    (JJ suitable))
                  (PP (IN for)
                    (NP (NN set-off))))))))))
    (. .)))

dep(take-15, 2-2)
det(manifestation-5, The-4)
nsubj(take-15, manifestation-5)
prep_of(manifestation-5, intention-7)
partmod(intention-7, set-8)
prt(set-8, forth-9)
det(paragraph-13, the-11)
amod(paragraph-13, preceding-12)
prep_in(set-8, paragraph-13)
aux(take-15, shall-14)
root(ROOT-0, take-15)
dobj(take-15, effect-16)
advmod(take-15, retroactively-17)
det(time-21, the-20)
prep_as_of(take-15, time-21)
advmod(due-29, when-22)
det(obligations-24, the-23)
nsubj(due-29, obligations-24)
nsubj(suitable-31, obligations-24)
det(parties-27, both-26)
prep_of(obligations-24, parties-27)
cop(due-29, became-28)
dep(time-21, due-29)
dep(time-21, suitable-31)
conj_and(due-29, suitable-31)
prep_for(due-29, set-off-33)

</t1>
<t2>
A time limit can be added to the manifestation of intention of offset, but conditions cannot be added.
(ROOT
  (S
    (S
      (NP (DT A) (NN time) (NN limit))
      (VP (MD can)
        (VP (VB be)
          (VP (VBN added)
            (PP (TO to)
              (NP
                (NP (DT the) (NN manifestation))
                (PP (IN of)
                  (NP
                    (NP (NN intention))
                    (PP (IN of)
                      (NP (NNP offset)))))))))))
    (, ,)
    (CC but)
    (S
      (NP (NNS conditions))
      (VP (MD can) (RB not)
        (VP (VB be)
          (VP (VBN added)))))
    (. .)))

det(limit-3, A-1)
nn(limit-3, time-2)
nsubjpass(added-6, limit-3)
aux(added-6, can-4)
auxpass(added-6, be-5)
root(ROOT-0, added-6)
det(manifestation-9, the-8)
prep_to(added-6, manifestation-9)
prep_of(manifestation-9, intention-11)
prep_of(intention-11, offset-13)
nsubjpass(added-20, conditions-16)
aux(added-20, can-17)
neg(added-20, not-18)
auxpass(added-20, be-19)
conj_but(added-6, added-20)

</t2>
</pair>
<pair id="H22-5-U" label="Y">
<t1>
(Forfeiture of Benefit of Time)Article 137
The obligor may not assert the benefit of time if:(i)the obligor has become subject to the ruling of the commencement of bankruptcy procedures;(ii)the obligor has destroyed, damaged, or diminished the security; or(iii)the obligor fails to provide security when it has the obligation to do so.
(ROOT
  (S
    (NP (DT The) (NN obligor))
    (VP (MD may) (RB not)
      (VP (VB assert)
        (NP
          (NP
            (NP (DT the) (NN benefit))
            (PP (IN of)
              (NP (NN time)))
            (UCP
              (ADJP (IN if))
              (: :)
              (NP
                (NP (-LRB- -LRB-) (NNP i) (-RRB- -RRB-))
                (SBAR
                  (S
                    (NP (DT the) (NN obligor))
                    (VP (VBZ has)
                      (VP (VBN become)
                        (S
                          (ADJP (JJ subject)
                            (PP (TO to)
                              (NP
                                (NP (DT the) (NN ruling))
                                (PP (IN of)
                                  (NP
                                    (NP (DT the) (NN commencement))
                                    (PP (IN of)
                                      (NP (NN bankruptcy) (NNS procedures))))))))))))))))
          (: ;)
          (NP
            (NP (-LRB- -LRB-) (NN ii) (-RRB- -RRB-))
            (SBAR
              (S
                (NP (DT the) (NN obligor))
                (VP (VBZ has)
                  (VP
                    (VP (VBN destroyed))
                    (, ,)
                    (VP (VBN damaged))
                    (, ,)
                    (CC or)
                    (VP (VBN diminished)
                      (NP (DT the) (NN security))))))))
          (: ;)
          (CC or)
          (NP
            (NP (-LRB- -LRB-) (NN iii) (-RRB- -RRB-))
            (SBAR
              (S
                (NP (DT the) (NN obligor))
                (VP (VBZ fails)
                  (S
                    (VP (TO to)
                      (VP (VB provide)
                        (NP (NN security))
                        (SBAR
                          (WHADVP (WRB when))
                          (S
                            (NP (PRP it))
                            (VP (VBZ has)
                              (NP (DT the) (NN obligation)
                                (S
                                  (VP (TO to)
                                    (VP (VB do)
                                      (ADVP (RB so)))))))))))))))))))
    (. .)))

det(obligor-2, The-1)
nsubj(assert-5, obligor-2)
aux(assert-5, may-3)
neg(assert-5, not-4)
root(ROOT-0, assert-5)
det(benefit-7, the-6)
dobj(assert-5, benefit-7)
prep_of(benefit-7, time-9)
amod(benefit-7, if-10)
dep(if-10, i-13)
dobj(become-18, i-13)
det(obligor-16, the-15)
nsubj(become-18, obligor-16)
aux(become-18, has-17)
rcmod(i-13, become-18)
acomp(become-18, subject-19)
det(ruling-22, the-21)
prep_to(subject-19, ruling-22)
det(commencement-25, the-24)
prep_of(ruling-22, commencement-25)
nn(procedures-28, bankruptcy-27)
prep_of(commencement-25, procedures-28)
dobj(assert-5, ii-31)
conj_or(benefit-7, ii-31)
det(obligor-34, the-33)
nsubj(destroyed-36, obligor-34)
nsubj(damaged-38, obligor-34)
nsubj(diminished-41, obligor-34)
aux(destroyed-36, has-35)
rcmod(ii-31, destroyed-36)
rcmod(ii-31, damaged-38)
conj_or(destroyed-36, damaged-38)
rcmod(ii-31, diminished-41)
conj_or(destroyed-36, diminished-41)
det(security-43, the-42)
dobj(diminished-41, security-43)
dobj(assert-5, iii-47)
conj_or(benefit-7, iii-47)
dobj(fails-51, iii-47)
det(obligor-50, the-49)
nsubj(fails-51, obligor-50)
xsubj(provide-53, obligor-50)
rcmod(iii-47, fails-51)
aux(provide-53, to-52)
xcomp(fails-51, provide-53)
dobj(provide-53, security-54)
advmod(has-57, when-55)
nsubj(has-57, it-56)
advcl(provide-53, has-57)
det(obligation-59, the-58)
dobj(has-57, obligation-59)
aux(do-61, to-60)
infmod(obligation-59, do-61)
advmod(do-61, so-62)

</t1>
<t2>
In cases where the obligor of monetary debt has the obligation to provide security, if the security is not provided, the obligor cannot assert the benefit of the time.
(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNS cases))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP
              (NP (DT the) (NN obligor))
              (PP (IN of)
                (NP (JJ monetary) (NN debt))))
            (VP (VBZ has)
              (NP (DT the) (NN obligation)
                (S
                  (VP (TO to)
                    (VP (VB provide)
                      (NP (NN security)))))))))))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (DT the) (NN security))
        (VP (VBZ is) (RB not)
          (VP (VBN provided)))))
    (, ,)
    (NP (DT the) (NN obligor))
    (VP (MD can) (RB not)
      (VP (VB assert)
        (NP
          (NP (DT the) (NN benefit))
          (PP (IN of)
            (NP (DT the) (NN time))))))
    (. .)))

prep_in(assert-27, cases-2)
advmod(has-9, where-3)
det(obligor-5, the-4)
nsubj(has-9, obligor-5)
amod(debt-8, monetary-7)
prep_of(obligor-5, debt-8)
rcmod(cases-2, has-9)
det(obligation-11, the-10)
dobj(has-9, obligation-11)
aux(provide-13, to-12)
infmod(obligation-11, provide-13)
dobj(provide-13, security-14)
mark(provided-21, if-16)
det(security-18, the-17)
nsubjpass(provided-21, security-18)
auxpass(provided-21, is-19)
neg(provided-21, not-20)
advcl(assert-27, provided-21)
det(obligor-24, the-23)
nsubj(assert-27, obligor-24)
aux(assert-27, can-25)
neg(assert-27, not-26)
root(ROOT-0, assert-27)
det(benefit-29, the-28)
dobj(assert-27, benefit-29)
det(time-32, the-31)
prep_of(benefit-29, time-32)

</t2>
</pair>
<pair id="H22-5-O" label="Y">
<t1>
(Potestative Conditions)Article 134
A juristic act which is subject to a condition precedent shall be void if the condition is dependent upon the will of the obligor.
(ROOT
  (S
    (NP
      (NP (DT A) (JJ juristic) (NN act))
      (SBAR
        (WHNP (WDT which))
        (S
          (VP (VBZ is)
            (ADJP (JJ subject)
              (PP (TO to)
                (NP (DT a) (NN condition) (NN precedent))))))))
    (VP (MD shall)
      (VP (VB be)
        (ADJP (JJ void))
        (SBAR (IN if)
          (S
            (NP (DT the) (NN condition))
            (VP (VBZ is)
              (ADJP (JJ dependent)
                (PP (IN upon)
                  (NP
                    (NP (DT the) (NN will))
                    (PP (IN of)
                      (NP (DT the) (NN obligor)))))))))))
    (. .)))

det(act-3, A-1)
amod(act-3, juristic-2)
nsubj(subject-6, act-3)
nsubj(void-13, act-3)
cop(subject-6, is-5)
rcmod(act-3, subject-6)
det(precedent-10, a-8)
nn(precedent-10, condition-9)
prep_to(subject-6, precedent-10)
aux(void-13, shall-11)
cop(void-13, be-12)
root(ROOT-0, void-13)
mark(dependent-18, if-14)
det(condition-16, the-15)
nsubj(dependent-18, condition-16)
cop(dependent-18, is-17)
advcl(void-13, dependent-18)
det(will-21, the-20)
prep_upon(dependent-18, will-21)
det(obligor-24, the-23)
prep_of(will-21, obligor-24)

</t1>
<t2>
A juristic act which is subject to a condition precedent is void if the condition is dependent on  the willof the obligor.
(ROOT
  (S
    (NP
      (NP (DT A) (JJ juristic) (NN act))
      (SBAR
        (WHNP (WDT which))
        (S
          (VP (VBZ is)
            (ADJP (JJ subject)
              (PP (TO to)
                (NP (DT a) (NN condition) (NN precedent))))))))
    (VP (VBZ is)
      (ADJP (JJ void))
      (SBAR (IN if)
        (S
          (NP (DT the) (NN condition))
          (VP (VBZ is)
            (ADJP (JJ dependent)
              (PP (IN on)
                (NP
                  (NP (DT the) (NN willof))
                  (NP (DT the) (NN obligor)))))))))
    (. .)))

det(act-3, A-1)
amod(act-3, juristic-2)
nsubj(subject-6, act-3)
nsubj(void-12, act-3)
cop(subject-6, is-5)
rcmod(act-3, subject-6)
det(precedent-10, a-8)
nn(precedent-10, condition-9)
prep_to(subject-6, precedent-10)
cop(void-12, is-11)
root(ROOT-0, void-12)
mark(dependent-17, if-13)
det(condition-15, the-14)
nsubj(dependent-17, condition-15)
cop(dependent-17, is-16)
advcl(void-12, dependent-17)
det(willof-20, the-19)
prep_on(dependent-17, willof-20)
det(obligor-22, the-21)
dep(willof-20, obligor-22)

</t2>
</pair>
<pair id="H22-8-I" label="N">
<t1>
(Cutting of Branches and Roots of Trees and Bamboo)Article 233
(1)If a tree or bamboo branch from neighboring land crosses a boundary line, the landowner may have the owner of that tree or bamboo sever that branch.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
    (SBAR (IN If)
      (S
        (NP
          (NP (DT a) (NN tree)
            (CC or)
            (NN bamboo) (NN branch))
          (PP (IN from)
            (NP (JJ neighboring) (NN land))))
        (VP (VBZ crosses)
          (NP (DT a) (NN boundary) (NN line)))))
    (, ,)
    (NP (DT the) (NN landowner))
    (VP (MD may)
      (VP (VB have)
        (S
          (NP
            (NP (DT the) (NN owner))
            (PP (IN of)
              (NP (DT that) (NN tree)
                (CC or)
                (NN bamboo))))
          (VP (VB sever)
            (NP (DT that) (NN branch))))))
    (. .)))

dep(have-21, 1-2)
mark(crosses-13, If-4)
det(branch-9, a-5)
nn(branch-9, tree-6)
conj_or(tree-6, bamboo-8)
nn(branch-9, bamboo-8)
nsubj(crosses-13, branch-9)
amod(land-12, neighboring-11)
prep_from(branch-9, land-12)
advcl(have-21, crosses-13)
det(line-16, a-14)
nn(line-16, boundary-15)
dobj(crosses-13, line-16)
det(landowner-19, the-18)
nsubj(have-21, landowner-19)
aux(have-21, may-20)
root(ROOT-0, have-21)
det(owner-23, the-22)
nsubj(sever-29, owner-23)
det(tree-26, that-25)
prep_of(owner-23, tree-26)
prep_of(owner-23, bamboo-28)
conj_or(tree-26, bamboo-28)
ccomp(have-21, sever-29)
det(branch-31, that-30)
dobj(sever-29, branch-31)

(2)If a tree or bamboo root from neighboring land crosses a boundary line, the owner of the land may sever that root.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
    (SBAR (IN If)
      (S
        (NP
          (NP (DT a) (NN tree)
            (CC or)
            (NN bamboo) (NN root))
          (PP (IN from)
            (NP (JJ neighboring) (NN land))))
        (VP (VBZ crosses)
          (NP (DT a) (NN boundary) (NN line)))))
    (, ,)
    (NP
      (NP (DT the) (NN owner))
      (PP (IN of)
        (NP (DT the) (NN land))))
    (VP (MD may)
      (VP (VB sever)
        (NP (DT that) (NN root))))
    (. .)))

dep(sever-24, 2-2)
mark(crosses-13, If-4)
det(root-9, a-5)
nn(root-9, tree-6)
conj_or(tree-6, bamboo-8)
nn(root-9, bamboo-8)
nsubj(crosses-13, root-9)
amod(land-12, neighboring-11)
prep_from(root-9, land-12)
advcl(sever-24, crosses-13)
det(line-16, a-14)
nn(line-16, boundary-15)
dobj(crosses-13, line-16)
det(owner-19, the-18)
nsubj(sever-24, owner-19)
det(land-22, the-21)
prep_of(owner-19, land-22)
aux(sever-24, may-23)
root(ROOT-0, sever-24)
det(root-26, that-25)
dobj(sever-24, root-26)

</t1>
<t2>
When a tree or bamboo branch from neighboring land cross a boundary line, the person can remove the branch him or herself, but cannot have the owner of that tree or bamboosever the branch.
(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP
          (NP (DT a) (NN tree)
            (CC or)
            (NN bamboo) (NN branch))
          (PP (IN from)
            (NP (JJ neighboring) (NN land))))
        (VP (VBP cross)
          (NP (DT a) (NN boundary) (NN line)))))
    (, ,)
    (NP (DT the) (NN person))
    (VP
      (VP (MD can)
        (VP (VB remove)
          (S
            (NP (DT the) (NN branch))
            (NP (PRP him)
              (CC or)
              (PRP herself)))))
      (, ,)
      (CC but)
      (VP (MD can) (RB not)
        (VP
          (VP (VB have)
            (NP
              (NP (DT the) (NN owner))
              (PP (IN of)
                (NP (DT that) (NN tree)))))
          (CC or)
          (VP (VB bamboosever)
            (NP (DT the) (NN branch))))))
    (. .)))

advmod(cross-10, When-1)
det(branch-6, a-2)
nn(branch-6, tree-3)
conj_or(tree-3, bamboo-5)
nn(branch-6, bamboo-5)
nsubj(cross-10, branch-6)
amod(land-9, neighboring-8)
prep_from(branch-6, land-9)
advcl(remove-18, cross-10)
det(line-13, a-11)
nn(line-13, boundary-12)
dobj(cross-10, line-13)
det(person-16, the-15)
nsubj(remove-18, person-16)
nsubj(have-28, person-16)
aux(remove-18, can-17)
root(ROOT-0, remove-18)
det(branch-20, the-19)
nsubj(him-21, branch-20)
xcomp(remove-18, him-21)
xcomp(remove-18, herself-23)
conj_or(him-21, herself-23)
aux(have-28, can-26)
neg(have-28, not-27)
conj_but(remove-18, have-28)
det(owner-30, the-29)
dobj(have-28, owner-30)
det(tree-33, that-32)
prep_of(owner-30, tree-33)
conj_but(remove-18, bamboosever-35)
conj_or(have-28, bamboosever-35)
det(branch-37, the-36)
dobj(bamboosever-35, branch-37)

</t2>
</pair>
<pair id="H22-9-I" label="Y">
<t1>
(Accession to Movables)Article 243
If two or more movables with different owners are so joined to each other that they can no longer be separated without damaging the same, ownership of the composite Thing shall vest in the owner of the principal movables.
(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP
            (QP (CD two)
              (CC or)
              (JJR more))
            (NNS movables))
          (PP (IN with)
            (NP (JJ different) (NNS owners))))
        (VP (VBP are)
          (ADVP (RB so))
          (VP (VBN joined)
            (PP (TO to)
              (NP (DT each) (JJ other)))
            (SBAR (IN that)
              (S
                (NP (PRP they))
                (VP (MD can)
                  (ADVP (RB no) (RB longer))
                  (VP (VB be)
                    (VP (VBN separated)
                      (PP (IN without)
                        (S
                          (VP (VBG damaging)
                            (NP (DT the) (JJ same))))))))))))))
    (, ,)
    (NP
      (NP (NN ownership))
      (PP (IN of)
        (NP (DT the) (JJ composite) (NN Thing))))
    (VP (MD shall)
      (VP (VB vest)
        (PP (IN in)
          (NP
            (NP (DT the) (NN owner))
            (PP (IN of)
              (NP (DT the) (JJ principal) (NNS movables)))))))
    (. .)))

mark(joined-11, If-1)
num(movables-5, two-2)
conj_or(two-2, more-4)
quantmod(two-2, more-4)
num(movables-5, more-4)
nsubjpass(joined-11, movables-5)
amod(owners-8, different-7)
prep_with(movables-5, owners-8)
auxpass(joined-11, are-9)
advmod(joined-11, so-10)
advcl(vest-33, joined-11)
det(other-14, each-13)
prep_to(joined-11, other-14)
complm(separated-21, that-15)
nsubjpass(separated-21, they-16)
aux(separated-21, can-17)
advmod(longer-19, no-18)
advmod(separated-21, longer-19)
auxpass(separated-21, be-20)
ccomp(joined-11, separated-21)
prepc_without(separated-21, damaging-23)
det(same-25, the-24)
dobj(damaging-23, same-25)
nsubj(vest-33, ownership-27)
det(Thing-31, the-29)
amod(Thing-31, composite-30)
prep_of(ownership-27, Thing-31)
aux(vest-33, shall-32)
root(ROOT-0, vest-33)
det(owner-36, the-35)
prep_in(vest-33, owner-36)
det(movables-40, the-38)
amod(movables-40, principal-39)
prep_of(owner-36, movables-40)

The same shall apply if excessive expense would be required to separate the same.
(ROOT
  (S
    (NP (DT The) (JJ same))
    (VP (MD shall)
      (VP (VB apply)
        (SBAR (IN if)
          (S
            (NP (JJ excessive) (NN expense))
            (VP (MD would)
              (VP (VB be)
                (VP (VBN required)
                  (S
                    (VP (TO to)
                      (VP (VB separate)
                        (NP (DT the) (JJ same))))))))))))
    (. .)))

det(same-2, The-1)
nsubj(apply-4, same-2)
aux(apply-4, shall-3)
root(ROOT-0, apply-4)
mark(required-10, if-5)
amod(expense-7, excessive-6)
nsubjpass(required-10, expense-7)
aux(required-10, would-8)
auxpass(required-10, be-9)
advcl(apply-4, required-10)
aux(separate-12, to-11)
xcomp(required-10, separate-12)
det(same-14, the-13)
dobj(separate-12, same-14)

</t1>
<t2>
If two or more movables with different owners are so joined to each other that they can no longer be separated without damaging the same, ownership of the composite Thing shall vest in the owner of the principal movables.
(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP
            (QP (CD two)
              (CC or)
              (JJR more))
            (NNS movables))
          (PP (IN with)
            (NP (JJ different) (NNS owners))))
        (VP (VBP are)
          (ADVP (RB so))
          (VP (VBN joined)
            (PP (TO to)
              (NP (DT each) (JJ other)))
            (SBAR (IN that)
              (S
                (NP (PRP they))
                (VP (MD can)
                  (ADVP (RB no) (RB longer))
                  (VP (VB be)
                    (VP (VBN separated)
                      (PP (IN without)
                        (S
                          (VP (VBG damaging)
                            (NP (DT the) (JJ same))))))))))))))
    (, ,)
    (NP
      (NP (NN ownership))
      (PP (IN of)
        (NP (DT the) (JJ composite) (NN Thing))))
    (VP (MD shall)
      (VP (VB vest)
        (PP (IN in)
          (NP
            (NP (DT the) (NN owner))
            (PP (IN of)
              (NP (DT the) (JJ principal) (NNS movables)))))))
    (. .)))

mark(joined-11, If-1)
num(movables-5, two-2)
conj_or(two-2, more-4)
quantmod(two-2, more-4)
num(movables-5, more-4)
nsubjpass(joined-11, movables-5)
amod(owners-8, different-7)
prep_with(movables-5, owners-8)
auxpass(joined-11, are-9)
advmod(joined-11, so-10)
advcl(vest-33, joined-11)
det(other-14, each-13)
prep_to(joined-11, other-14)
complm(separated-21, that-15)
nsubjpass(separated-21, they-16)
aux(separated-21, can-17)
advmod(longer-19, no-18)
advmod(separated-21, longer-19)
auxpass(separated-21, be-20)
ccomp(joined-11, separated-21)
prepc_without(separated-21, damaging-23)
det(same-25, the-24)
dobj(damaging-23, same-25)
nsubj(vest-33, ownership-27)
det(Thing-31, the-29)
amod(Thing-31, composite-30)
prep_of(ownership-27, Thing-31)
aux(vest-33, shall-32)
root(ROOT-0, vest-33)
det(owner-36, the-35)
prep_in(vest-33, owner-36)
det(movables-40, the-38)
amod(movables-40, principal-39)
prep_of(owner-36, movables-40)

</t2>
</pair>
<pair id="H22-9-O" label="N">
<t1>
Article 244
If the distinction of principal and accessory cannot be made between the joined movables, the owner of each movable shall co-own the composite Thing in proportion to the respective price current at the time of the accession.
(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (DT the) (NN distinction))
          (PP (IN of)
            (NP (JJ principal)
              (CC and)
              (JJ accessory))))
        (VP (MD can) (RB not)
          (VP (VB be)
            (VP (VBN made)
              (PP (IN between)
                (NP (DT the) (JJ joined) (NNS movables))))))))
    (, ,)
    (NP
      (NP (DT the) (NN owner))
      (PP (IN of)
        (NP (DT each) (NN movable))))
    (VP (MD shall)
      (VP (VB co-own)
        (NP
          (NP (DT the) (JJ composite) (NN Thing))
          (PP (IN in)
            (NP (NN proportion))))
        (PP (TO to)
          (NP (DT the) (JJ respective) (NN price) (NN current)))
        (PP (IN at)
          (NP
            (NP (DT the) (NN time))
            (PP (IN of)
              (NP (DT the) (NN accession)))))))
    (. .)))

mark(made-11, If-1)
det(distinction-3, the-2)
nsubjpass(made-11, distinction-3)
prep_of(distinction-3, principal-5)
prep_of(distinction-3, accessory-7)
conj_and(principal-5, accessory-7)
aux(made-11, can-8)
neg(made-11, not-9)
auxpass(made-11, be-10)
advcl(co-own-23, made-11)
det(movables-15, the-13)
amod(movables-15, joined-14)
prep_between(made-11, movables-15)
det(owner-18, the-17)
nsubj(co-own-23, owner-18)
det(movable-21, each-20)
prep_of(owner-18, movable-21)
aux(co-own-23, shall-22)
root(ROOT-0, co-own-23)
det(Thing-26, the-24)
amod(Thing-26, composite-25)
dobj(co-own-23, Thing-26)
prep_in(Thing-26, proportion-28)
det(current-33, the-30)
amod(current-33, respective-31)
nn(current-33, price-32)
prep_to(co-own-23, current-33)
det(time-36, the-35)
prep_at(co-own-23, time-36)
det(accession-39, the-38)
prep_of(time-36, accession-39)

</t1>
<t2>
If the distinction of principal and accessory cannot be made between the joined movables, based on a demand by one or several owners of each of the movables, the owners shall be determined by court.
(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (DT the) (NN distinction))
          (PP (IN of)
            (NP (JJ principal)
              (CC and)
              (JJ accessory))))
        (VP (MD can) (RB not)
          (VP (VB be)
            (VP (VBN made)
              (PP (IN between)
                (NP (DT the) (JJ joined) (NNS movables)))
              (, ,)
              (PP (VBN based)
                (PP (IN on)
                  (NP
                    (NP
                      (NP (DT a) (NN demand))
                      (PP (IN by)
                        (NP (CD one))))
                    (CC or)
                    (NP
                      (NP (JJ several) (NNS owners))
                      (PP (IN of)
                        (NP
                          (NP (DT each))
                          (PP (IN of)
                            (NP (DT the) (NNS movables))))))))))))))
    (, ,)
    (NP (DT the) (NNS owners))
    (VP (MD shall)
      (VP (VB be)
        (VP (VBN determined)
          (PP (IN by)
            (NP (NN court))))))
    (. .)))

mark(made-11, If-1)
det(distinction-3, the-2)
nsubjpass(made-11, distinction-3)
prep_of(distinction-3, principal-5)
prep_of(distinction-3, accessory-7)
conj_and(principal-5, accessory-7)
aux(made-11, can-8)
neg(made-11, not-9)
auxpass(made-11, be-10)
advcl(determined-36, made-11)
det(movables-15, the-13)
amod(movables-15, joined-14)
prep_between(made-11, movables-15)
prepc_based_on(made-11, on-18)
det(demand-20, a-19)
pobj(made-11, demand-20)
prep_by(demand-20, one-22)
amod(owners-25, several-24)
pobj(made-11, owners-25)
conj_or(demand-20, owners-25)
prep_of(owners-25, each-27)
det(movables-30, the-29)
prep_of(each-27, movables-30)
det(owners-33, the-32)
nsubjpass(determined-36, owners-33)
aux(determined-36, shall-34)
auxpass(determined-36, be-35)
root(ROOT-0, determined-36)
agent(determined-36, court-38)

</t2>
</pair>
<pair id="H22-10-O" label="N">
<t1>
Article 292
In cases where dominant land is co-owned by more than one person, if there is a suspension or interruption of prescription in favor of one co-owner, such suspension or interruption shall also be effective for the benefit of other co-owners.
(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNS cases))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (JJ dominant) (NN land))
            (VP (VBZ is)
              (ADJP (JJ co-owned)
                (PP (IN by)
                  (NP
                    (QP (JJR more) (IN than) (CD one))
                    (NN person))))
              (, ,)
              (SBAR (IN if)
                (S
                  (NP (EX there))
                  (VP (VBZ is)
                    (NP
                      (NP (DT a) (NN suspension)
                        (CC or)
                        (NN interruption))
                      (PP (IN of)
                        (NP
                          (NP (NN prescription))
                          (PP (IN in)
                            (NP
                              (NP (NN favor))
                              (PP (IN of)
                                (NP (CD one) (NN co-owner))))))))))))))))
    (, ,)
    (NP
      (NP (JJ such) (NN suspension))
      (CC or)
      (NP (NN interruption)))
    (VP (MD shall)
      (ADVP (RB also))
      (VP (VB be)
        (ADJP (JJ effective)
          (PP (IN for)
            (NP
              (NP (DT the) (NN benefit))
              (PP (IN of)
                (NP (JJ other) (NNS co-owners))))))))
    (. .)))

prep_in(effective-36, cases-2)
advmod(co-owned-7, where-3)
amod(land-5, dominant-4)
nsubj(co-owned-7, land-5)
cop(co-owned-7, is-6)
rcmod(cases-2, co-owned-7)
mwe(than-10, more-9)
quantmod(one-11, than-10)
num(person-12, one-11)
prep_by(co-owned-7, person-12)
mark(is-16, if-14)
expl(is-16, there-15)
advcl(co-owned-7, is-16)
det(suspension-18, a-17)
nsubj(is-16, suspension-18)
nsubj(is-16, interruption-20)
conj_or(suspension-18, interruption-20)
prep_of(suspension-18, prescription-22)
prep_in(prescription-22, favor-24)
num(co-owner-27, one-26)
prep_of(favor-24, co-owner-27)
amod(suspension-30, such-29)
nsubj(effective-36, suspension-30)
conj_or(suspension-30, interruption-32)
nsubj(effective-36, interruption-32)
aux(effective-36, shall-33)
advmod(effective-36, also-34)
cop(effective-36, be-35)
root(ROOT-0, effective-36)
det(benefit-39, the-38)
prep_for(effective-36, benefit-39)
amod(co-owners-42, other-41)
prep_of(benefit-39, co-owners-42)

</t1>
<t2>
Even if there is an interruption of prescription in favor of one co-owner of dominant land, due to factors of the other co-owners, such extinctive prescription proceeds.
(ROOT
  (S
    (SBAR (RB Even) (IN if)
      (S
        (NP (EX there))
        (VP (VBZ is)
          (NP
            (NP (DT an) (NN interruption))
            (PP (IN of)
              (NP (NN prescription)))
            (PP (IN in)
              (NP
                (NP (NN favor))
                (PP (IN of)
                  (NP
                    (NP (CD one) (NN co-owner))
                    (PP (IN of)
                      (NP (JJ dominant) (NN land)))))))
            (, ,)
            (ADJP (JJ due)
              (PP (TO to)
                (NP
                  (NP (NNS factors))
                  (PP (IN of)
                    (NP (DT the) (JJ other) (NNS co-owners))))))))))
    (, ,)
    (NP (JJ such) (NN extinctive) (NN prescription))
    (VP (VBZ proceeds))
    (. .)))

advmod(is-4, Even-1)
dep(is-4, if-2)
expl(is-4, there-3)
advcl(proceeds-29, is-4)
det(interruption-6, an-5)
nsubj(is-4, interruption-6)
prep_of(interruption-6, prescription-8)
prep_in(interruption-6, favor-10)
num(co-owner-13, one-12)
prep_of(favor-10, co-owner-13)
amod(land-16, dominant-15)
prep_of(co-owner-13, land-16)
prep_due_to(interruption-6, factors-20)
det(co-owners-24, the-22)
amod(co-owners-24, other-23)
prep_of(factors-20, co-owners-24)
amod(prescription-28, such-26)
nn(prescription-28, extinctive-27)
nsubj(proceeds-29, prescription-28)
root(ROOT-0, proceeds-29)

</t2>
</pair>
<pair id="H22-11-1" label="Y">
<t1>
(Sub-pledges)Article 348
Pledgees may sub-pledge the Thing pledged within the duration of their rights, upon their own responsibility.
(ROOT
  (S
    (NP (NNS Pledgees))
    (VP (MD may)
      (VP (VB sub-pledge)
        (NP
          (NP (DT the) (NN Thing))
          (VP (VBN pledged)
            (PP (IN within)
              (NP
                (NP (DT the) (NN duration))
                (PP (IN of)
                  (NP (PRP$ their) (NNS rights)))))
            (, ,)
            (PP (IN upon)
              (NP (PRP$ their) (JJ own) (NN responsibility)))))))
    (. .)))

nsubj(sub-pledge-3, Pledgees-1)
aux(sub-pledge-3, may-2)
root(ROOT-0, sub-pledge-3)
det(Thing-5, the-4)
dobj(sub-pledge-3, Thing-5)
partmod(Thing-5, pledged-6)
det(duration-9, the-8)
prep_within(pledged-6, duration-9)
poss(rights-12, their-11)
prep_of(duration-9, rights-12)
poss(responsibility-17, their-15)
amod(responsibility-17, own-16)
prep_upon(pledged-6, responsibility-17)

In such cases, the pledgees shall be responsible for any loss arising from the -pledge even if the same is caused by force majeure.
(ROOT
  (S
    (PP (IN In)
      (NP (JJ such) (NNS cases)))
    (, ,)
    (NP (DT the) (NNS pledgees))
    (VP (MD shall)
      (VP (VB be)
        (ADJP (JJ responsible)
          (PP (IN for)
            (NP
              (NP (DT any) (NN loss))
              (VP (VBG arising)
                (PP (IN from)
                  (NP (DT the) (JJ -) (NN pledge)))))))
        (SBAR (RB even) (IN if)
          (S
            (NP (DT the) (JJ same))
            (VP (VBZ is)
              (VP (VBN caused)
                (PP (IN by)
                  (NP (NN force) (NN majeure)))))))))
    (. .)))

amod(cases-3, such-2)
prep_in(responsible-9, cases-3)
det(pledgees-6, the-5)
nsubj(responsible-9, pledgees-6)
aux(responsible-9, shall-7)
cop(responsible-9, be-8)
root(ROOT-0, responsible-9)
det(loss-12, any-11)
prep_for(responsible-9, loss-12)
partmod(loss-12, arising-13)
det(pledge-17, the-15)
prep_from(arising-13, pledge-17)
advmod(caused-23, even-18)
dep(caused-23, if-19)
det(same-21, the-20)
nsubjpass(caused-23, same-21)
auxpass(caused-23, is-22)
ccomp(responsible-9, caused-23)
nn(majeure-26, force-25)
agent(caused-23, majeure-26)

</t1>
<t2>
A pledgee can sub-pledge a Thing pledged without the approval of the owner of the Thing pledged.
(ROOT
  (S
    (NP (DT A) (NN pledgee))
    (VP (MD can)
      (VP (VB sub-pledge)
        (NP
          (NP (DT a) (NN Thing))
          (VP (VBN pledged)
            (PP (IN without)
              (NP
                (NP (DT the) (NN approval))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN owner))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NN Thing))
                        (VP (VBN pledged))))))))))))
    (. .)))

det(pledgee-2, A-1)
nsubj(sub-pledge-4, pledgee-2)
aux(sub-pledge-4, can-3)
root(ROOT-0, sub-pledge-4)
det(Thing-6, a-5)
dobj(sub-pledge-4, Thing-6)
partmod(Thing-6, pledged-7)
det(approval-10, the-9)
prep_without(pledged-7, approval-10)
det(owner-13, the-12)
prep_of(approval-10, owner-13)
det(Thing-16, the-15)
prep_of(owner-13, Thing-16)
partmod(Thing-16, pledged-17)

</t2>
</pair>
<pair id="H22-11-2" label="N">
<t1>
(Order of Priority of Pledges of Movables)Article 355
If more than one pledge is created with respect to the same movables, the order of priority of those pledges shall follow the chronological order of their creation.
(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (QP (JJR more) (IN than) (CD one))
          (NN pledge))
        (VP (VBZ is)
          (VP (VBN created)
            (PP (IN with)
              (NP (NN respect)))
            (PP (TO to)
              (NP (DT the) (JJ same) (NNS movables)))))))
    (, ,)
    (NP
      (NP (DT the) (NN order))
      (PP (IN of)
        (NP
          (NP (NN priority))
          (PP (IN of)
            (NP (DT those) (NNS pledges))))))
    (VP (MD shall)
      (VP (VB follow)
        (NP
          (NP (DT the) (JJ chronological) (NN order))
          (PP (IN of)
            (NP (PRP$ their) (NN creation))))))
    (. .)))

mark(created-7, If-1)
mwe(than-3, more-2)
quantmod(one-4, than-3)
num(pledge-5, one-4)
nsubjpass(created-7, pledge-5)
auxpass(created-7, is-6)
advcl(follow-23, created-7)
prep_with(created-7, respect-9)
det(movables-13, the-11)
amod(movables-13, same-12)
prep_to(created-7, movables-13)
det(order-16, the-15)
nsubj(follow-23, order-16)
prep_of(order-16, priority-18)
det(pledges-21, those-20)
prep_of(priority-18, pledges-21)
aux(follow-23, shall-22)
root(ROOT-0, follow-23)
det(order-26, the-24)
amod(order-26, chronological-25)
dobj(follow-23, order-26)
poss(creation-29, their-28)
prep_of(order-26, creation-29)

</t1>
<t2>
Pledges on movable property do not take effect if there is no delivery, and thus, for that movable, multiple pledges cannot be created.
(ROOT
  (S
    (S
      (NP
        (NP (NNS Pledges))
        (PP (IN on)
          (NP (JJ movable) (NN property))))
      (VP (VBP do) (RB not)
        (VP (VB take)
          (NP (NN effect))
          (SBAR (IN if)
            (S
              (NP (EX there))
              (VP (VBZ is)
                (NP (DT no) (NN delivery))))))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB thus))
      (, ,)
      (PP (IN for)
        (NP (DT that) (NN movable)))
      (, ,)
      (NP (JJ multiple) (NNS pledges))
      (VP (MD can) (RB not)
        (VP (VB be)
          (VP (VBN created)))))
    (. .)))

nsubj(take-7, Pledges-1)
amod(property-4, movable-3)
prep_on(Pledges-1, property-4)
aux(take-7, do-5)
neg(take-7, not-6)
root(ROOT-0, take-7)
dobj(take-7, effect-8)
mark(is-11, if-9)
expl(is-11, there-10)
advcl(take-7, is-11)
det(delivery-13, no-12)
nsubj(is-11, delivery-13)
advmod(created-27, thus-16)
det(movable-20, that-19)
prep_for(created-27, movable-20)
amod(pledges-23, multiple-22)
nsubjpass(created-27, pledges-23)
aux(created-27, can-24)
neg(created-27, not-25)
auxpass(created-27, be-26)
conj_and(take-7, created-27)

</t2>
</pair>
<pair id="H22-11-5" label="N">
<t1>
(Recovery of Possession of the Thing Pledged )Article 353
Pledgees of movables may, if the pledged Thing is usurped, recover the same solely by bringing actions for recovery of possession.
(ROOT
  (S
    (NP
      (NP (NNS Pledgees))
      (PP (IN of)
        (NP (NNS movables))))
    (VP (MD may) (, ,)
      (SBAR (IN if)
        (S
          (NP (DT the) (JJ pledged) (NN Thing))
          (VP (VBZ is)
            (VP (VBN usurped)))))
      (, ,)
      (VP (VB recover)
        (NP (DT the) (JJ same))
        (PP (RB solely) (IN by)
          (S
            (VP (VBG bringing)
              (NP (NNS actions))
              (PP (IN for)
                (NP
                  (NP (NN recovery))
                  (PP (IN of)
                    (NP (NN possession))))))))))
    (. .)))

nsubj(recover-13, Pledgees-1)
prep_of(Pledgees-1, movables-3)
aux(recover-13, may-4)
mark(usurped-11, if-6)
det(Thing-9, the-7)
amod(Thing-9, pledged-8)
nsubjpass(usurped-11, Thing-9)
auxpass(usurped-11, is-10)
advcl(recover-13, usurped-11)
root(ROOT-0, recover-13)
det(same-15, the-14)
dobj(recover-13, same-15)
advmod(recover-13, solely-16)
prepc_by(recover-13, bringing-18)
dobj(bringing-18, actions-19)
prep_for(bringing-18, recovery-21)
prep_of(recovery-21, possession-23)

</t1>
<t2>
If the possession of the pledgee of a pledge on movable property is stolen by a third party, the pledgee can demand the return based on the pledge.
(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (DT the) (NN possession))
          (PP (IN of)
            (NP
              (NP (DT the) (NN pledgee))
              (PP (IN of)
                (NP
                  (NP (DT a) (NN pledge))
                  (PP (IN on)
                    (NP (JJ movable) (NN property))))))))
        (VP (VBZ is)
          (VP (VBN stolen)
            (PP (IN by)
              (NP (DT a) (JJ third) (NN party)))))))
    (, ,)
    (NP (DT the) (NN pledgee))
    (VP (MD can)
      (VP (VB demand)
        (NP (DT the) (NN return))
        (PP (VBN based)
          (PP (IN on)
            (NP (DT the) (NN pledge))))))
    (. .)))

mark(stolen-14, If-1)
det(possession-3, the-2)
nsubjpass(stolen-14, possession-3)
det(pledgee-6, the-5)
prep_of(possession-3, pledgee-6)
det(pledge-9, a-8)
prep_of(pledgee-6, pledge-9)
amod(property-12, movable-11)
prep_on(pledge-9, property-12)
auxpass(stolen-14, is-13)
advcl(demand-23, stolen-14)
det(party-18, a-16)
amod(party-18, third-17)
agent(stolen-14, party-18)
det(pledgee-21, the-20)
nsubj(demand-23, pledgee-21)
aux(demand-23, can-22)
root(ROOT-0, demand-23)
det(return-25, the-24)
dobj(demand-23, return-25)
prepc_based_on(demand-23, on-27)
det(pledge-29, the-28)
pobj(demand-23, pledge-29)

</t2>
</pair>
<pair id="H22-14-A" label="N">
<t1>
(Duty of Care in cases of Delivery of Specified Things)Article 400
If the subject of a claim is the delivery of any specified things, the obligor must take custody of such property with due care of a prudent manager until the completion of such delivery.
(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (DT the) (NN subject))
          (PP (IN of)
            (NP (DT a) (NN claim))))
        (VP (VBZ is)
          (NP
            (NP (DT the) (NN delivery))
            (PP (IN of)
              (NP (DT any) (VBN specified) (NNS things)))))))
    (, ,)
    (NP (DT the) (NN obligor))
    (VP (MD must)
      (VP (VB take)
        (NP
          (NP (NN custody))
          (PP (IN of)
            (NP (JJ such) (NN property))))
        (PP (IN with)
          (NP
            (NP (JJ due) (NN care))
            (PP (IN of)
              (NP (DT a) (JJ prudent) (NN manager)))))
        (PP (IN until)
          (NP
            (NP (DT the) (NN completion))
            (PP (IN of)
              (NP (JJ such) (NN delivery)))))))
    (. .)))

mark(delivery-9, If-1)
det(subject-3, the-2)
nsubj(delivery-9, subject-3)
det(claim-6, a-5)
prep_of(subject-3, claim-6)
cop(delivery-9, is-7)
det(delivery-9, the-8)
advcl(take-18, delivery-9)
det(things-13, any-11)
amod(things-13, specified-12)
prep_of(delivery-9, things-13)
det(obligor-16, the-15)
nsubj(take-18, obligor-16)
aux(take-18, must-17)
root(ROOT-0, take-18)
dobj(take-18, custody-19)
amod(property-22, such-21)
prep_of(custody-19, property-22)
amod(care-25, due-24)
prep_with(take-18, care-25)
det(manager-29, a-27)
amod(manager-29, prudent-28)
prep_of(care-25, manager-29)
det(completion-32, the-31)
prep_until(take-18, completion-32)
amod(delivery-35, such-34)
prep_of(completion-32, delivery-35)

</t1>
<t2>
The obligor of a claim whose subject is the delivery of  any specified things carries the duty to preserve that thing until the delivery is performed with the same  care  he/she would exercise over his/her own property.
(ROOT
  (S
    (NP
      (NP (DT The) (NN obligor))
      (PP (IN of)
        (NP
          (NP (DT a) (NN claim))
          (SBAR (WP$ whose)
            (S
              (NP (NN subject))
              (VP (VBZ is)
                (NP
                  (NP (DT the) (NN delivery))
                  (PP (IN of)
                    (NP (DT any) (VBN specified) (NNS things))))))))))
    (VP (VBZ carries)
      (NP (DT the) (NN duty)
        (S
          (VP (TO to)
            (VP (VB preserve)
              (SBAR (IN that)
                (S
                  (NP
                    (NP (NN thing))
                    (SBAR (IN until)
                      (S
                        (NP (DT the) (NN delivery))
                        (VP (VBZ is)
                          (VP (VBN performed)
                            (PP (IN with)
                              (NP (DT the) (JJ same) (NN care) (NN he\/she))))))))
                  (VP (MD would)
                    (VP (VB exercise)
                      (PP (IN over)
                        (NP (JJ his\/her) (JJ own) (NN property))))))))))))
    (. .)))

det(obligor-2, The-1)
nsubj(carries-15, obligor-2)
det(claim-5, a-4)
prep_of(obligor-2, claim-5)
dep(delivery-10, whose-6)
nsubj(delivery-10, subject-7)
cop(delivery-10, is-8)
det(delivery-10, the-9)
dep(claim-5, delivery-10)
det(things-14, any-12)
amod(things-14, specified-13)
prep_of(delivery-10, things-14)
root(ROOT-0, carries-15)
det(duty-17, the-16)
dobj(carries-15, duty-17)
aux(preserve-19, to-18)
infmod(duty-17, preserve-19)
complm(exercise-33, that-20)
nsubj(exercise-33, thing-21)
mark(performed-26, until-22)
det(delivery-24, the-23)
nsubjpass(performed-26, delivery-24)
auxpass(performed-26, is-25)
dep(thing-21, performed-26)
det(he\/she-31, the-28)
amod(he\/she-31, same-29)
nn(he\/she-31, care-30)
prep_with(performed-26, he\/she-31)
aux(exercise-33, would-32)
ccomp(preserve-19, exercise-33)
amod(property-37, his\/her-35)
amod(property-37, own-36)
prep_over(exercise-33, property-37)

</t2>
</pair>
<pair id="H22-14-I" label="Y">
<t1>
Article 403
When the amount of the claim is specified in the currency of a foreign state, the obligor may make the payment in the legal currency of Japan using the foreign exchange rate current in the place of the performance.
(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP
          (NP (DT the) (NN amount))
          (PP (IN of)
            (NP (DT the) (NN claim))))
        (VP (VBZ is)
          (VP (VBN specified)
            (PP (IN in)
              (NP
                (NP (DT the) (NN currency))
                (PP (IN of)
                  (NP (DT a) (JJ foreign) (NN state)))))))))
    (, ,)
    (NP (DT the) (NN obligor))
    (VP (MD may)
      (VP (VB make)
        (NP (DT the) (NN payment))
        (PP (IN in)
          (S
            (NP
              (NP (DT the) (JJ legal) (NN currency))
              (PP (IN of)
                (NP (NNP Japan))))
            (VP (VBG using)
              (NP (DT the) (JJ foreign) (NN exchange) (NN rate) (NN current))
              (PP (IN in)
                (NP
                  (NP (DT the) (NN place))
                  (PP (IN of)
                    (NP (DT the) (NN performance))))))))))
    (. .)))

advmod(specified-8, When-1)
det(amount-3, the-2)
nsubjpass(specified-8, amount-3)
det(claim-6, the-5)
prep_of(amount-3, claim-6)
auxpass(specified-8, is-7)
advcl(make-20, specified-8)
det(currency-11, the-10)
prep_in(specified-8, currency-11)
det(state-15, a-13)
amod(state-15, foreign-14)
prep_of(currency-11, state-15)
det(obligor-18, the-17)
nsubj(make-20, obligor-18)
aux(make-20, may-19)
root(ROOT-0, make-20)
det(payment-22, the-21)
dobj(make-20, payment-22)
det(currency-26, the-24)
amod(currency-26, legal-25)
nsubj(using-29, currency-26)
prep_of(currency-26, Japan-28)
prepc_in(make-20, using-29)
det(current-34, the-30)
amod(current-34, foreign-31)
nn(current-34, exchange-32)
nn(current-34, rate-33)
dobj(using-29, current-34)
det(place-37, the-36)
prep_in(using-29, place-37)
det(performance-40, the-39)
prep_of(place-37, performance-40)

</t1>
<t2>
Even if the amount of the claim was specified in the currency of a foreign state, the obligor can make the payment in the legal currency of Japan instead of currency of the foreign state.
(ROOT
  (S
    (SBAR (RB Even) (IN if)
      (S
        (NP
          (NP (DT the) (NN amount))
          (PP (IN of)
            (NP (DT the) (NN claim))))
        (VP (VBD was)
          (VP (VBN specified)
            (PP (IN in)
              (NP
                (NP (DT the) (NN currency))
                (PP (IN of)
                  (NP (DT a) (JJ foreign) (NN state)))))))))
    (, ,)
    (NP (DT the) (NN obligor))
    (VP (MD can)
      (VP (VB make)
        (NP (DT the) (NN payment))
        (PP (IN in)
          (NP
            (NP (DT the) (JJ legal) (NN currency))
            (PP (IN of)
              (NP
                (NP (NNP Japan))
                (PP (RB instead) (IN of)
                  (NP
                    (NP (NN currency))
                    (PP (IN of)
                      (NP (DT the) (JJ foreign) (NN state)))))))))))
    (. .)))

advmod(specified-9, Even-1)
dep(specified-9, if-2)
det(amount-4, the-3)
nsubjpass(specified-9, amount-4)
det(claim-7, the-6)
prep_of(amount-4, claim-7)
auxpass(specified-9, was-8)
advcl(make-21, specified-9)
det(currency-12, the-11)
prep_in(specified-9, currency-12)
det(state-16, a-14)
amod(state-16, foreign-15)
prep_of(currency-12, state-16)
det(obligor-19, the-18)
nsubj(make-21, obligor-19)
aux(make-21, can-20)
root(ROOT-0, make-21)
det(payment-23, the-22)
dobj(make-21, payment-23)
det(currency-27, the-25)
amod(currency-27, legal-26)
prep_in(make-21, currency-27)
prep_of(currency-27, Japan-29)
prep_instead_of(Japan-29, currency-32)
det(state-36, the-34)
amod(state-36, foreign-35)
prep_of(currency-32, state-36)

</t2>
</pair>
<pair id="H22-14-E" label="N">
<t1>
(Attribution of Right of Choice in cases of Alternative Obligation)Article 406
If the subject of the claim is to be identified by way of choice among more than one performance, the right to make the choice shall vest in the obligor.
(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (DT the) (NN subject))
          (PP (IN of)
            (NP (DT the) (NN claim))))
        (VP (VBZ is)
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN identified)
                  (PP (IN by)
                    (NP
                      (NP (NN way))
                      (PP (IN of)
                        (NP (NN choice)))))
                  (PP (IN among)
                    (NP
                      (QP (JJR more) (IN than) (CD one))
                      (NN performance))))))))))
    (, ,)
    (NP (DT the) (NN right)
      (S
        (VP (TO to)
          (VP (VB make)
            (NP (DT the) (NN choice))))))
    (VP (MD shall)
      (VP (VB vest)
        (PP (IN in)
          (NP (DT the) (NN obligor)))))
    (. .)))

mark(is-7, If-1)
det(subject-3, the-2)
nsubj(is-7, subject-3)
xsubj(identified-10, subject-3)
det(claim-6, the-5)
prep_of(subject-3, claim-6)
advcl(vest-28, is-7)
aux(identified-10, to-8)
auxpass(identified-10, be-9)
xcomp(is-7, identified-10)
agent(identified-10, way-12)
prep_of(way-12, choice-14)
mwe(than-17, more-16)
quantmod(one-18, than-17)
num(performance-19, one-18)
prep_among(identified-10, performance-19)
det(right-22, the-21)
nsubj(vest-28, right-22)
aux(make-24, to-23)
infmod(right-22, make-24)
det(choice-26, the-25)
dobj(make-24, choice-26)
aux(vest-28, shall-27)
root(ROOT-0, vest-28)
det(obligor-31, the-30)
prep_in(vest-28, obligor-31)

</t1>
<t2>
If the subject of the claim is to be identified by way of choice among more than one performance, the right to make the choice shall vest in the obligor as long as there is no special provision.
(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (DT the) (NN subject))
          (PP (IN of)
            (NP (DT the) (NN claim))))
        (VP (VBZ is)
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN identified)
                  (PP (IN by)
                    (NP
                      (NP (NN way))
                      (PP (IN of)
                        (NP (NN choice)))))
                  (PP (IN among)
                    (NP
                      (QP (JJR more) (IN than) (CD one))
                      (NN performance))))))))))
    (, ,)
    (NP (DT the) (NN right)
      (S
        (VP (TO to)
          (VP (VB make)
            (NP (DT the) (NN choice))))))
    (VP (MD shall)
      (VP (VB vest)
        (PP (IN in)
          (NP (DT the) (NN obligor)))
        (ADVP
          (ADVP (RB as) (RB long))
          (SBAR (IN as)
            (S
              (NP (EX there))
              (VP (VBZ is)
                (NP (DT no) (JJ special) (NN provision))))))))
    (. .)))

mark(is-7, If-1)
det(subject-3, the-2)
nsubj(is-7, subject-3)
xsubj(identified-10, subject-3)
det(claim-6, the-5)
prep_of(subject-3, claim-6)
advcl(vest-28, is-7)
aux(identified-10, to-8)
auxpass(identified-10, be-9)
xcomp(is-7, identified-10)
agent(identified-10, way-12)
prep_of(way-12, choice-14)
mwe(than-17, more-16)
quantmod(one-18, than-17)
num(performance-19, one-18)
prep_among(identified-10, performance-19)
det(right-22, the-21)
nsubj(vest-28, right-22)
aux(make-24, to-23)
infmod(right-22, make-24)
det(choice-26, the-25)
dobj(make-24, choice-26)
aux(vest-28, shall-27)
root(ROOT-0, vest-28)
det(obligor-31, the-30)
prep_in(vest-28, obligor-31)
advmod(long-33, as-32)
advmod(vest-28, long-33)
mark(is-36, as-34)
expl(is-36, there-35)
ccomp(long-33, is-36)
det(provision-39, no-37)
amod(provision-39, special-38)
nsubj(is-36, provision-39)

</t2>
</pair>
<pair id="H22-14-O" label="Y">
<t1>
(Identification of Alternative Obligation due to Impossibility)Article 410
(1)If any performance which is included in the subject of a claim is impossible from the beginning, or later becomes impossible, the claim shall exist to the extent of the performance which still remains.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
    (SBAR (IN If)
      (S
        (NP
          (NP (DT any) (NN performance))
          (SBAR
            (WHNP (WDT which))
            (S
              (VP (VBZ is)
                (VP (VBN included)
                  (PP (IN in)
                    (NP
                      (NP (DT the) (NN subject))
                      (PP (IN of)
                        (NP (DT a) (NN claim))))))))))
        (VP
          (VP (VBZ is)
            (ADJP (JJ impossible)
              (PP (IN from)
                (NP (DT the) (NN beginning)))))
          (, ,)
          (CC or)
          (VP
            (ADVP (RB later))
            (VBZ becomes)
            (ADJP (JJ impossible))))))
    (, ,)
    (NP (DT the) (NN claim))
    (VP (MD shall)
      (VP (VB exist)
        (PP (TO to)
          (NP
            (NP (DT the) (NN extent))
            (PP (IN of)
              (NP
                (NP (DT the) (NN performance))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (ADVP (RB still))
                    (VP (VBZ remains))))))))))
    (. .)))

dep(exist-30, 1-2)
mark(impossible-17, If-4)
det(performance-6, any-5)
nsubjpass(included-9, performance-6)
nsubj(impossible-17, performance-6)
nsubj(impossible-25, performance-6)
auxpass(included-9, is-8)
rcmod(performance-6, included-9)
det(subject-12, the-11)
prep_in(included-9, subject-12)
det(claim-15, a-14)
prep_of(subject-12, claim-15)
cop(impossible-17, is-16)
advcl(exist-30, impossible-17)
det(beginning-20, the-19)
prep_from(impossible-17, beginning-20)
advmod(impossible-25, later-23)
cop(impossible-25, becomes-24)
conj_or(impossible-17, impossible-25)
advcl(exist-30, impossible-25)
det(claim-28, the-27)
nsubj(exist-30, claim-28)
aux(exist-30, shall-29)
root(ROOT-0, exist-30)
det(extent-33, the-32)
prep_to(exist-30, extent-33)
det(performance-36, the-35)
prep_of(extent-33, performance-36)
nsubj(remains-39, performance-36)
advmod(remains-39, still-38)
rcmod(performance-36, remains-39)

(2)If any performance has become impossible due to the negligence of any party who does not have any right of choice, the provision of the preceding paragraph shall not apply.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
    (SBAR (IN If)
      (S
        (NP (DT any) (NN performance))
        (VP (VBZ has)
          (VP (VBN become)
            (ADJP (JJ impossible))
            (PP (JJ due) (TO to)
              (NP
                (NP (DT the) (NN negligence))
                (PP (IN of)
                  (NP
                    (NP (DT any) (NN party))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBZ does) (RB not)
                          (VP (VB have)
                            (NP
                              (NP (DT any) (NN right))
                              (PP (IN of)
                                (NP (NN choice))))))))))))))))
    (, ,)
    (NP
      (NP (DT the) (NN provision))
      (PP (IN of)
        (NP (DT the) (VBG preceding) (NN paragraph))))
    (VP (MD shall) (RB not)
      (VP (VB apply)))
    (. .)))

dep(apply-34, 2-2)
mark(impossible-9, If-4)
det(performance-6, any-5)
nsubj(impossible-9, performance-6)
aux(impossible-9, has-7)
cop(impossible-9, become-8)
advcl(apply-34, impossible-9)
det(negligence-13, the-12)
prep_due_to(impossible-9, negligence-13)
det(party-16, any-15)
prep_of(negligence-13, party-16)
nsubj(have-20, party-16)
aux(have-20, does-18)
neg(have-20, not-19)
rcmod(party-16, have-20)
det(right-22, any-21)
dobj(have-20, right-22)
prep_of(right-22, choice-24)
det(provision-27, the-26)
nsubj(apply-34, provision-27)
det(paragraph-31, the-29)
amod(paragraph-31, preceding-30)
prep_of(provision-27, paragraph-31)
aux(apply-34, shall-32)
neg(apply-34, not-33)
root(ROOT-0, apply-34)

</t1>
<t2>
If the subject of the claim is to be identified by way of choice among two performances, if one of the performances becomes impossible in the future not due to fault of persons involved that do not possess the right to choose, then the subject of the claim is identified  as the other performance.
(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (DT the) (NN subject))
          (PP (IN of)
            (NP (DT the) (NN claim))))
        (VP (VBZ is)
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN identified)
                  (PP (IN by)
                    (NP
                      (NP (NN way))
                      (PP (IN of)
                        (NP (NN choice)))))
                  (PP (IN among)
                    (NP (CD two) (NNS performances)))
                  (, ,)
                  (SBAR (IN if)
                    (S
                      (NP
                        (NP (CD one))
                        (PP (IN of)
                          (NP (DT the) (NNS performances))))
                      (VP (VBZ becomes)
                        (ADJP (JJ impossible)
                          (PP (IN in)
                            (NP
                              (NP (DT the) (NN future))
                              (ADJP (RB not) (JJ due)
                                (PP (TO to)
                                  (NP
                                    (NP (NN fault))
                                    (PP (IN of)
                                      (NP
                                        (NP (NNS persons))
                                        (VP (VBN involved)
                                          (SBAR (IN that)
                                            (S
                                              (VP (VBP do) (RB not)
                                                (VP (VB possess)
                                                  (NP (DT the) (NN right)
                                                    (S
                                                      (VP (TO to)
                                                        (VP (VB choose))))))))))))))))))))))))))))
    (, ,)
    (NP
      (NP (RB then) (DT the) (NN subject))
      (PP (IN of)
        (NP (DT the) (NN claim))))
    (VP (VBZ is)
      (VP (VBN identified)
        (PP (IN as)
          (NP (DT the) (JJ other) (NN performance)))))
    (. .)))

mark(is-7, If-1)
det(subject-3, the-2)
nsubj(is-7, subject-3)
xsubj(identified-10, subject-3)
det(claim-6, the-5)
prep_of(subject-3, claim-6)
advcl(identified-52, is-7)
aux(identified-10, to-8)
auxpass(identified-10, be-9)
xcomp(is-7, identified-10)
agent(identified-10, way-12)
prep_of(way-12, choice-14)
num(performances-17, two-16)
prep_among(identified-10, performances-17)
mark(impossible-25, if-19)
nsubj(impossible-25, one-20)
det(performances-23, the-22)
prep_of(one-20, performances-23)
cop(impossible-25, becomes-24)
advcl(identified-10, impossible-25)
det(future-28, the-27)
prep_in(impossible-25, future-28)
neg(future-28, not-29)
prep_due_to(future-28, fault-32)
prep_of(fault-32, persons-34)
partmod(persons-34, involved-35)
complm(possess-39, that-36)
aux(possess-39, do-37)
neg(possess-39, not-38)
ccomp(involved-35, possess-39)
det(right-41, the-40)
dobj(possess-39, right-41)
aux(choose-43, to-42)
infmod(right-41, choose-43)
advmod(subject-47, then-45)
det(subject-47, the-46)
nsubjpass(identified-52, subject-47)
det(claim-50, the-49)
prep_of(subject-47, claim-50)
auxpass(identified-52, is-51)
root(ROOT-0, identified-52)
det(performance-56, the-54)
amod(performance-56, other-55)
prep_as(identified-52, performance-56)

</t2>
</pair>
<pair id="H22-15-A" label="N">
<t1>
(Manifestation of Intention Inconsistent with Default Rules)Article 91
If any party to a juristic act manifests any intention which is inconsistent with a provision in any laws and regulations not related to public policy, such intention shall prevail.
(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (DT any) (NN party))
          (PP (TO to)
            (NP (DT a) (JJ juristic) (NN act))))
        (VP (VBZ manifests)
          (NP
            (NP (DT any) (NN intention))
            (SBAR
              (WHNP (WDT which))
              (S
                (VP (VBZ is)
                  (ADJP (JJ inconsistent)
                    (PP (IN with)
                      (NP
                        (NP (DT a) (NN provision))
                        (PP (IN in)
                          (NP
                            (NP (DT any) (NNS laws)
                              (CC and)
                              (NNS regulations))
                            (ADJP (RB not) (VBN related)))))))
                  (PP (TO to)
                    (NP (JJ public) (NN policy))))))))))
    (, ,)
    (NP (JJ such) (NN intention))
    (VP (MD shall)
      (VP (VB prevail)))
    (. .)))

mark(manifests-8, If-1)
det(party-3, any-2)
nsubj(manifests-8, party-3)
det(act-7, a-5)
amod(act-7, juristic-6)
prep_to(party-3, act-7)
advcl(prevail-31, manifests-8)
det(intention-10, any-9)
dobj(manifests-8, intention-10)
nsubj(inconsistent-13, intention-10)
cop(inconsistent-13, is-12)
rcmod(intention-10, inconsistent-13)
det(provision-16, a-15)
prep_with(inconsistent-13, provision-16)
det(laws-19, any-18)
prep_in(provision-16, laws-19)
prep_in(provision-16, regulations-21)
conj_and(laws-19, regulations-21)
neg(related-23, not-22)
amod(laws-19, related-23)
amod(policy-26, public-25)
prep_to(inconsistent-13, policy-26)
amod(intention-29, such-28)
nsubj(prevail-31, intention-29)
aux(prevail-31, shall-30)
root(ROOT-0, prevail-31)

</t1>
<t2>
In cases where an obligor does not perform an obligation, the agreement of the parties involved that the obligee.
(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNS cases))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (DT an) (NN obligor))
            (VP (VBZ does) (RB not)
              (VP (VB perform)
                (NP (DT an) (NN obligation))))))))
    (, ,)
    (NP
      (NP (DT the) (NN agreement))
      (PP (IN of)
        (NP (DT the) (NNS parties))))
    (VP (VBD involved)
      (ADVP (IN that)
        (NP (DT the) (NN obligee))))
    (. .)))

prep_in(involved-17, cases-2)
advmod(perform-8, where-3)
det(obligor-5, an-4)
nsubj(perform-8, obligor-5)
aux(perform-8, does-6)
neg(perform-8, not-7)
rcmod(cases-2, perform-8)
det(obligation-10, an-9)
dobj(perform-8, obligation-10)
det(agreement-13, the-12)
nsubj(involved-17, agreement-13)
det(parties-16, the-15)
prep_of(agreement-13, parties-16)
root(ROOT-0, involved-17)
advmod(involved-17, that-18)
det(obligee-20, the-19)
pobj(that-18, obligee-20)

</t2>
</pair>
<pair id="H22-15-U" label="Y">
<t1>
(No Set-off by Obligor of Partnership)Article 677
An obligor of a partnership may not set off his/her obligation against his/her claim against the partners.
(ROOT
  (S
    (NP
      (NP (DT An) (NN obligor))
      (PP (IN of)
        (NP (DT a) (NN partnership))))
    (VP (MD may) (RB not)
      (VP (VB set)
        (PRT (RP off))
        (NP
          (NP (NN his\/her) (NN obligation))
          (PP (IN against)
            (NP (NN his\/her) (NN claim))))
        (PP (IN against)
          (NP (DT the) (NNS partners)))))
    (. .)))

det(obligor-2, An-1)
nsubj(set-8, obligor-2)
det(partnership-5, a-4)
prep_of(obligor-2, partnership-5)
aux(set-8, may-6)
neg(set-8, not-7)
root(ROOT-0, set-8)
prt(set-8, off-9)
nn(obligation-11, his\/her-10)
dobj(set-8, obligation-11)
nn(claim-14, his\/her-13)
prep_against(obligation-11, claim-14)
det(partners-17, the-16)
prep_against(set-8, partners-17)

</t1>
<t2>
An obligor of a partnership cannot set off his/her obligation against his/her claim against the partners.
(ROOT
  (S
    (NP
      (NP (DT An) (NN obligor))
      (PP (IN of)
        (NP (DT a) (NN partnership))))
    (VP (MD can) (RB not)
      (VP (VB set)
        (PRT (RP off))
        (NP
          (NP (NN his\/her) (NN obligation))
          (PP (IN against)
            (NP (NN his\/her) (NN claim))))
        (PP (IN against)
          (NP (DT the) (NNS partners)))))
    (. .)))

det(obligor-2, An-1)
nsubj(set-8, obligor-2)
det(partnership-5, a-4)
prep_of(obligor-2, partnership-5)
aux(set-8, can-6)
neg(set-8, not-7)
root(ROOT-0, set-8)
prt(set-8, off-9)
nn(obligation-11, his\/her-10)
dobj(set-8, obligation-11)
nn(claim-14, his\/her-13)
prep_against(obligation-11, claim-14)
det(partners-17, the-16)
prep_against(set-8, partners-17)

</t2>
</pair>
<pair id="H22-17-4" label="Y">
<t1>
(Mandatary's Claims for Reimbursement of Expense)Article 650
(1)If the mandatary has incurred costs found to be necessary for the administration of the mandated business, the mandatary may claim reimbursement of those costs from the mandator and any interest on the same from the day the costs were incurred.
(ROOT
  (S
    (S
      (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
      (SBAR (IN If)
        (S
          (NP (DT the) (NN mandatary))
          (VP (VBZ has)
            (VP (VBN incurred)
              (NP
                (NP (NNS costs))
                (VP (VBN found)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (ADJP (JJ necessary)
                          (PP (IN for)
                            (NP
                              (NP (DT the) (NN administration))
                              (PP (IN of)
                                (NP (DT the) (VBN mandated) (NN business)))))))))))))))
      (, ,)
      (NP (DT the) (NN mandatary))
      (VP (MD may)
        (VP (VB claim)
          (NP
            (NP (NN reimbursement))
            (PP (IN of)
              (NP (DT those) (NNS costs))))
          (PP (IN from)
            (NP
              (NP (DT the) (NN mandator))
              (CC and)
              (NP (DT any) (NN interest))))
          (PP (IN on)
            (NP
              (NP (DT the) (JJ same))
              (PP (IN from)
                (NP (DT the) (NN day))))))))
    (NP (DT the) (NNS costs))
    (VP (VBD were)
      (VP (VBN incurred)))
    (. .)))

dep(claim-25, 1-2)
mark(incurred-8, If-4)
det(mandatary-6, the-5)
nsubj(incurred-8, mandatary-6)
aux(incurred-8, has-7)
advcl(claim-25, incurred-8)
dobj(incurred-8, costs-9)
xsubj(necessary-13, costs-9)
partmod(costs-9, found-10)
aux(necessary-13, to-11)
cop(necessary-13, be-12)
xcomp(found-10, necessary-13)
det(administration-16, the-15)
prep_for(necessary-13, administration-16)
det(business-20, the-18)
amod(business-20, mandated-19)
prep_of(administration-16, business-20)
det(mandatary-23, the-22)
nsubj(claim-25, mandatary-23)
aux(claim-25, may-24)
dep(incurred-45, claim-25)
dobj(claim-25, reimbursement-26)
det(costs-29, those-28)
prep_of(reimbursement-26, costs-29)
det(mandator-32, the-31)
prep_from(claim-25, mandator-32)
det(interest-35, any-34)
prep_from(claim-25, interest-35)
conj_and(mandator-32, interest-35)
det(same-38, the-37)
prep_on(claim-25, same-38)
det(day-41, the-40)
prep_from(same-38, day-41)
det(costs-43, the-42)
nsubjpass(incurred-45, costs-43)
auxpass(incurred-45, were-44)
root(ROOT-0, incurred-45)

(2)If the mandatary has incurred any obligation found to be necessary for the administration of the mandated business, the mandatary may demand that the mandator perform the obligation on the mandatary's behalf.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
    (SBAR (IN If)
      (S
        (NP (DT the) (NN mandatary))
        (VP (VBZ has)
          (VP (VBN incurred)
            (NP
              (NP (DT any) (NN obligation))
              (VP (VBN found)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (JJ necessary)
                        (PP (IN for)
                          (NP
                            (NP (DT the) (NN administration))
                            (PP (IN of)
                              (NP (DT the) (VBN mandated) (NN business)))))))))))))))
    (, ,)
    (NP (DT the) (NN mandatary))
    (VP (MD may)
      (VP (VB demand)
        (SBAR (IN that)
          (S
            (NP (DT the) (NN mandator))
            (VP (VBP perform)
              (NP
                (NP (DT the) (NN obligation))
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN mandatary) (POS 's))
                    (NN behalf)))))))))
    (. .)))

dep(demand-26, 2-2)
mark(incurred-8, If-4)
det(mandatary-6, the-5)
nsubj(incurred-8, mandatary-6)
aux(incurred-8, has-7)
advcl(demand-26, incurred-8)
det(obligation-10, any-9)
dobj(incurred-8, obligation-10)
xsubj(necessary-14, obligation-10)
partmod(obligation-10, found-11)
aux(necessary-14, to-12)
cop(necessary-14, be-13)
xcomp(found-11, necessary-14)
det(administration-17, the-16)
prep_for(necessary-14, administration-17)
det(business-21, the-19)
amod(business-21, mandated-20)
prep_of(administration-17, business-21)
det(mandatary-24, the-23)
nsubj(demand-26, mandatary-24)
aux(demand-26, may-25)
root(ROOT-0, demand-26)
complm(perform-30, that-27)
det(mandator-29, the-28)
nsubj(perform-30, mandator-29)
ccomp(demand-26, perform-30)
det(obligation-32, the-31)
dobj(perform-30, obligation-32)
det(mandatary-35, the-34)
poss(behalf-37, mandatary-35)
prep_on(obligation-32, behalf-37)

In such cases, if the obligation has not yet fallen due, the mandatary may require the mandator to tender reasonable security.
(ROOT
  (S
    (PP (IN In)
      (NP (JJ such) (NNS cases)))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (DT the) (NN obligation))
        (VP (VBZ has) (RB not)
          (ADVP (RB yet))
          (VP (VBN fallen)
            (S
              (ADJP (JJ due)))))))
    (, ,)
    (NP (DT the) (NN mandatary))
    (VP (MD may)
      (VP (VB require)
        (NP (DT the) (NN mandator)
          (S
            (VP (TO to)
              (VP (VB tender)
                (NP (JJ reasonable) (NN security))))))))
    (. .)))

amod(cases-3, such-2)
prep_in(require-17, cases-3)
mark(fallen-11, if-5)
det(obligation-7, the-6)
nsubj(fallen-11, obligation-7)
aux(fallen-11, has-8)
neg(fallen-11, not-9)
advmod(fallen-11, yet-10)
advcl(require-17, fallen-11)
acomp(fallen-11, due-12)
det(mandatary-15, the-14)
nsubj(require-17, mandatary-15)
aux(require-17, may-16)
root(ROOT-0, require-17)
det(mandator-19, the-18)
dobj(require-17, mandator-19)
aux(tender-21, to-20)
infmod(mandator-19, tender-21)
amod(security-23, reasonable-22)
dobj(tender-21, security-23)

(3)If the mandatary suffers any loss due to the administration of the mandated business without negligence in the mandatary, he/she may claim compensation for the loss from the mandator.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 3) (-RRB- -RRB-))
    (SBAR (IN If)
      (S
        (NP (DT the) (NN mandatary))
        (VP (VBZ suffers)
          (S
            (NP (DT any) (NN loss))
            (ADJP (JJ due)
              (PP (TO to)
                (NP
                  (NP (DT the) (NN administration))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (VBN mandated) (NN business))
                      (PP (IN without)
                        (NP
                          (NP (NN negligence))
                          (PP (IN in)
                            (NP (DT the) (NN mandatary))))))))))))))
    (, ,)
    (NP (NN he\/she))
    (VP (MD may)
      (VP (VB claim)
        (NP (NN compensation))
        (PP (IN for)
          (NP
            (NP (DT the) (NN loss))
            (PP (IN from)
              (NP (DT the) (NN mandator)))))))
    (. .)))

dep(claim-26, 3-2)
mark(suffers-7, If-4)
det(mandatary-6, the-5)
nsubj(suffers-7, mandatary-6)
advcl(claim-26, suffers-7)
det(loss-9, any-8)
nsubj(due-10, loss-9)
xcomp(suffers-7, due-10)
det(administration-13, the-12)
prep_to(due-10, administration-13)
det(business-17, the-15)
amod(business-17, mandated-16)
prep_of(administration-13, business-17)
prep_without(business-17, negligence-19)
det(mandatary-22, the-21)
prep_in(negligence-19, mandatary-22)
nsubj(claim-26, he\/she-24)
aux(claim-26, may-25)
root(ROOT-0, claim-26)
dobj(claim-26, compensation-27)
det(loss-30, the-29)
prep_for(claim-26, loss-30)
det(mandator-33, the-32)
prep_from(loss-30, mandator-33)

</t1>
<t2>
If the mandatary suffer any loss due to the administration of the mandated business s without negligence in the mandatary, he/she can claimcompensation for the loss from the mandator.
(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT the) (NN mandatary))
        (VP (VBP suffer)
          (SBAR
            (S
              (NP
                (NP (DT any) (NN loss))
                (ADJP (JJ due)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (NN administration))
                      (PP (IN of)
                        (NP (DT the) (VBN mandated) (NN business)))))))
              (VP (VBZ s)
                (PP (IN without)
                  (NP
                    (NP (NN negligence))
                    (PP (IN in)
                      (NP (DT the) (NN mandatary)))))))))))
    (, ,)
    (NP (NN he\/she))
    (VP (MD can)
      (VP (VB claimcompensation)
        (PP (IN for)
          (NP
            (NP (DT the) (NN loss))
            (PP (IN from)
              (NP (DT the) (NN mandator)))))))
    (. .)))

mark(suffer-4, If-1)
det(mandatary-3, the-2)
nsubj(suffer-4, mandatary-3)
advcl(claimcompensation-24, suffer-4)
det(loss-6, any-5)
nsubj(s-15, loss-6)
det(administration-10, the-9)
prep_due_to(loss-6, administration-10)
det(business-14, the-12)
amod(business-14, mandated-13)
prep_of(administration-10, business-14)
ccomp(suffer-4, s-15)
prep_without(s-15, negligence-17)
det(mandatary-20, the-19)
prep_in(negligence-17, mandatary-20)
nsubj(claimcompensation-24, he\/she-22)
aux(claimcompensation-24, can-23)
root(ROOT-0, claimcompensation-24)
det(loss-27, the-26)
prep_for(claimcompensation-24, loss-27)
det(mandator-30, the-29)
prep_from(loss-27, mandator-30)

</t2>
</pair>
<pair id="H22-18-I" label="Y">
<t1>
(Liability of Guarantor of Contract for Revolving Guarantee on Loans)Article 465-2
(1)A guarantor to a contract of guarantee the principal obligation of which is one or more unidentified obligations within a certain specified scope (hereinafter referred to as a "contract for revolving guarantee") whereby the scope of such obligation includes any obligation which is incurred as a result of the transaction of lending money or accepting discount of a negotiable instrument (hereinafter referred to as an "loan obligation")(excluding any contract in which the guarantor is a juridical person, hereinafter referred to as a "contract for revolving guarantee on loans") shall be liable for the satisfaction of the amount of the principal of the relevant principal obligation, interest, any penalty and damages in connection with such principal obligation, and all other amounts incidental to such obligation, as well as the amount of any penalty and damages which are agreed on with regard to such guarantee obligation, which liability shall be limited in aggregate, however, to a certain maximum amount which pertains to all of the above-mentioned amounts.
(ROOT
  (S
    (S
      (NP
        (NP
          (NP
            (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
            (NP (DT A) (NN guarantor))
            (PP (TO to)
              (NP
                (NP (DT a) (NN contract))
                (PP (IN of)
                  (S
                    (VP
                      (VP (VBG guarantee)
                        (NP
                          (NP (DT the) (JJ principal) (NN obligation))
                          (PP (IN of)
                            (SBAR
                              (WHNP (WDT which))
                              (S
                                (VP (VBZ is)
                                  (NP
                                    (NP
                                      (QP (CD one)
                                        (CC or)
                                        (JJR more))
                                      (JJ unidentified) (NNS obligations))
                                    (PP (IN within)
                                      (NP (DT a) (JJ certain) (VBN specified) (NN scope))))
                                  (PRN (-LRB- -LRB-)
                                    (S
                                      (NP (NN hereinafter))
                                      (VP (VBD referred)
                                        (PP (TO to))
                                        (PP (IN as)
                                          (NP
                                            (NP (DT a) (`` ``) (NN contract))
                                            (PP (IN for)
                                              (NP (JJ revolving) (NN guarantee)))
                                            ('' '')))))
                                    (-RRB- -RRB-))
                                  (SBAR
                                    (WHADVP (WRB whereby))
                                    (S
                                      (NP
                                        (NP (DT the) (NN scope))
                                        (PP (IN of)
                                          (NP (JJ such) (NN obligation))))
                                      (VP (VBZ includes)
                                        (NP
                                          (NP (DT any) (NN obligation))
                                          (SBAR
                                            (WHNP (WDT which))
                                            (S
                                              (VP (VBZ is)
                                                (VP (VBN incurred)
                                                  (PP (IN as)
                                                    (NP
                                                      (NP (DT a) (NN result))
                                                      (PP (IN of)
                                                        (NP
                                                          (NP (DT the) (NN transaction))
                                                          (PP (IN of)
                                                            (NP (NN lending) (NN money)))))))))))))))))))))
                      (CC or)
                      (VP (VBG accepting)
                        (NP
                          (NP (NN discount))
                          (PP (IN of)
                            (NP (DT a) (JJ negotiable) (NN instrument)))))))))))
          (PRN (-LRB- -LRB-)
            (NP
              (NP (NN hereinafter))
              (VP (VBN referred)
                (PP (TO to)
                  (NP (IN as) (DT an) (`` ``) (NN loan) (NN obligation) ('' '')))))
            (-RRB- -RRB-)))
        (PRN (-LRB- -LRB-)
          (PP (VBG excluding)
            (NP
              (NP (DT any) (NN contract))
              (SBAR
                (WHPP (IN in)
                  (WHNP (WDT which)))
                (S
                  (NP (DT the) (NN guarantor))
                  (VP (VBZ is)
                    (NP
                      (NP (DT a) (JJ juridical) (NN person))
                      (, ,)
                      (NP
                        (NP (NN hereinafter))
                        (VP (VBN referred)
                          (S
                            (VP (TO to)
                              (VP
                                (PP (IN as)
                                  (NP
                                    (NP (DT a) (`` ``) (NN contract))
                                    (PP (IN for)
                                      (NP (JJ revolving) (NN guarantee)))))
                                (PP (IN on)
                                  (NP (NNS loans) ('' ''))))))))))))))
          (-RRB- -RRB-)))
      (VP (MD shall)
        (VP (VB be)
          (ADJP (JJ liable)
            (PP (IN for)
              (NP
                (NP (DT the) (NN satisfaction))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN amount))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NN principal))
                        (PP (IN of)
                          (NP
                            (NP (DT the) (JJ relevant) (JJ principal) (NN obligation))
                            (, ,)
                            (NP (NN interest))
                            (, ,)
                            (NP (DT any) (NN penalty))
                            (CC and)
                            (NP (NNS damages)))))))))))
          (PP (IN in)
            (NP (NN connection)))
          (PP (IN with)
            (NP (JJ such) (JJ principal) (NN obligation))))))
    (, ,)
    (CC and)
    (S
      (NP (DT all) (JJ other) (NNS amounts))
      (ADJP (JJ incidental)
        (PP (TO to)
          (NP
            (NP (JJ such) (NN obligation))
            (, ,)
            (CONJP (RB as) (RB well) (IN as))
            (NP
              (NP (DT the) (NN amount))
              (PP (IN of)
                (NP
                  (NP (DT any) (NN penalty))
                  (CC and)
                  (NP (NNS damages))))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (VBP are)
                    (VP (VBN agreed)
                      (PRT (RP on))
                      (PP (IN with)
                        (NP (NN regard)))
                      (PP (TO to)
                        (NP
                          (NP (JJ such) (NN guarantee) (NN obligation))
                          (, ,)
                          (SBAR
                            (WHNP (WDT which))
                            (S
                              (NP (NN liability))
                              (VP (MD shall)
                                (VP (VB be)
                                  (VP (VBN limited)
                                    (PP (IN in)
                                      (NP (NN aggregate)))
                                    (, ,)
                                    (ADVP (RB however))
                                    (, ,)
                                    (PP (TO to)
                                      (NP
                                        (NP (DT a) (JJ certain) (JJ maximum) (NN amount))
                                        (SBAR
                                          (WHNP (WDT which))
                                          (S
                                            (VP (VBZ pertains)
                                              (PP (TO to)
                                                (NP
                                                  (NP (DT all))
                                                  (PP (IN of)
                                                    (NP (DT the) (JJ above-mentioned) (NNS amounts))))))))))))))))))))))))))
    (. .)))

dep(guarantor-5, 1-2)
det(guarantor-5, A-4)
nsubj(liable-108, guarantor-5)
nsubj(incidental-141, guarantor-5)
det(contract-8, a-7)
prep_to(guarantor-5, contract-8)
prepc_of(contract-8, guarantee-10)
det(obligation-13, the-11)
amod(obligation-13, principal-12)
dobj(guarantee-10, obligation-13)
nsubj(obligations-21, which-15)
cop(obligations-21, is-16)
num(obligations-21, one-17)
conj_or(one-17, more-19)
quantmod(one-17, more-19)
num(obligations-21, more-19)
amod(obligations-21, unidentified-20)
prepc_of(obligation-13, obligations-21)
det(scope-26, a-23)
amod(scope-26, certain-24)
amod(scope-26, specified-25)
prep_within(obligations-21, scope-26)
nsubj(referred-29, hereinafter-28)
parataxis(obligations-21, referred-29)
prep(referred-29, to-30)
det(contract-34, a-32)
prep_as(referred-29, contract-34)
amod(guarantee-37, revolving-36)
prep_for(contract-34, guarantee-37)
advmod(includes-46, whereby-40)
det(scope-42, the-41)
nsubj(includes-46, scope-42)
amod(obligation-45, such-44)
prep_of(scope-42, obligation-45)
advcl(obligations-21, includes-46)
det(obligation-48, any-47)
dobj(includes-46, obligation-48)
nsubjpass(incurred-51, obligation-48)
auxpass(incurred-51, is-50)
rcmod(obligation-48, incurred-51)
det(result-54, a-53)
prep_as(incurred-51, result-54)
det(transaction-57, the-56)
prep_of(result-54, transaction-57)
nn(money-60, lending-59)
prep_of(transaction-57, money-60)
prepc_of(contract-8, accepting-62)
conj_or(guarantee-10, accepting-62)
dobj(accepting-62, discount-63)
det(instrument-67, a-65)
amod(instrument-67, negotiable-66)
prep_of(discount-63, instrument-67)
dep(guarantor-5, hereinafter-69)
partmod(hereinafter-69, referred-70)
amod(obligation-76, as-72)
det(obligation-76, an-73)
nn(obligation-76, loan-75)
prep_to(referred-70, obligation-76)
dep(guarantor-5, excluding-80)
det(contract-82, any-81)
pobj(excluding-80, contract-82)
rel(person-90, which-84)
det(guarantor-86, the-85)
nsubj(person-90, guarantor-86)
cop(person-90, is-87)
det(person-90, a-88)
amod(person-90, juridical-89)
rcmod(contract-82, person-90)
appos(person-90, hereinafter-92)
xsubj(as-95, hereinafter-92)
partmod(hereinafter-92, referred-93)
aux(as-95, to-94)
xcomp(referred-93, as-95)
det(contract-98, a-96)
pobj(as-95, contract-98)
amod(guarantee-101, revolving-100)
prep_for(contract-98, guarantee-101)
prep_on(as-95, loans-103)
aux(liable-108, shall-106)
cop(liable-108, be-107)
root(ROOT-0, liable-108)
det(satisfaction-111, the-110)
prep_for(liable-108, satisfaction-111)
det(amount-114, the-113)
prep_of(satisfaction-111, amount-114)
det(principal-117, the-116)
prep_of(amount-114, principal-117)
det(obligation-122, the-119)
amod(obligation-122, relevant-120)
amod(obligation-122, principal-121)
prep_of(principal-117, obligation-122)
prep_of(principal-117, interest-124)
conj_and(obligation-122, interest-124)
det(penalty-127, any-126)
prep_of(principal-117, penalty-127)
conj_and(obligation-122, penalty-127)
prep_of(principal-117, damages-129)
conj_and(obligation-122, damages-129)
prep_in(liable-108, connection-131)
amod(obligation-135, such-133)
amod(obligation-135, principal-134)
prep_with(liable-108, obligation-135)
det(amounts-140, all-138)
amod(amounts-140, other-139)
dep(incidental-141, amounts-140)
conj_and(liable-108, incidental-141)
amod(obligation-144, such-143)
prep_to(incidental-141, obligation-144)
det(amount-150, the-149)
prep_to(incidental-141, amount-150)
conj_and(obligation-144, amount-150)
nsubjpass(agreed-158, amount-150)
det(penalty-153, any-152)
prep_of(amount-150, penalty-153)
prep_of(amount-150, damages-155)
conj_and(penalty-153, damages-155)
auxpass(agreed-158, are-157)
rcmod(amount-150, agreed-158)
prt(agreed-158, on-159)
prep_with(agreed-158, regard-161)
amod(obligation-165, such-163)
nn(obligation-165, guarantee-164)
prep_to(agreed-158, obligation-165)
dobj(limited-171, obligation-165)
rel(limited-171, which-167)
nsubjpass(limited-171, liability-168)
aux(limited-171, shall-169)
auxpass(limited-171, be-170)
rcmod(obligation-165, limited-171)
prep_in(limited-171, aggregate-173)
advmod(limited-171, however-175)
det(amount-181, a-178)
amod(amount-181, certain-179)
amod(amount-181, maximum-180)
prep_to(limited-171, amount-181)
nsubj(pertains-183, amount-181)
rcmod(amount-181, pertains-183)
prep_to(pertains-183, all-185)
det(amounts-189, the-187)
amod(amounts-189, above-mentioned-188)
prep_of(all-185, amounts-189)

(2)A contract for revolving guarantee on loans shall not be effective unless the maximum amount set forth in the preceding paragraph is stipulated.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
    (NP
      (NP (DT A) (NN contract))
      (PP (IN for)
        (NP
          (NP (VBG revolving) (NN guarantee))
          (PP (IN on)
            (NP (NNS loans))))))
    (VP (MD shall) (RB not)
      (VP (VB be)
        (ADJP (JJ effective))
        (SBAR (IN unless)
          (S
            (NP
              (NP (DT the) (JJ maximum) (NN amount))
              (VP (VBN set)
                (PRT (RP forth))
                (PP (IN in)
                  (NP (DT the) (VBG preceding) (NN paragraph)))))
            (VP (VBZ is)
              (ADJP (JJ stipulated)))))))
    (. .)))

dep(effective-14, 2-2)
det(contract-5, A-4)
nsubj(effective-14, contract-5)
amod(guarantee-8, revolving-7)
prep_for(contract-5, guarantee-8)
prep_on(guarantee-8, loans-10)
aux(effective-14, shall-11)
neg(effective-14, not-12)
cop(effective-14, be-13)
root(ROOT-0, effective-14)
mark(stipulated-26, unless-15)
det(amount-18, the-16)
amod(amount-18, maximum-17)
nsubj(stipulated-26, amount-18)
partmod(amount-18, set-19)
prt(set-19, forth-20)
det(paragraph-24, the-22)
amod(paragraph-24, preceding-23)
prep_in(set-19, paragraph-24)
cop(stipulated-26, is-25)
advcl(effective-14, stipulated-26)

(3)The provisions of paragraph 2 and paragraph 3 of Article 446 shall apply mutatis mutandis to the stipulation of a maximum amount in a contract for revolving guarantee on loans provided in paragraph 1.
(ROOT
  (S
    (NP
      (NP
        (LST (-LRB- -LRB-) (LS 3) (-RRB- -RRB-))
        (NP (DT The) (NNS provisions))
        (PP (IN of)
          (NP (NN paragraph) (CD 2))))
      (CC and)
      (NP
        (NP (NN paragraph) (CD 3))
        (PP (IN of)
          (NP (NNP Article) (CD 446)))))
    (VP (MD shall)
      (VP (VB apply)
        (NP (JJ mutatis) (NNS mutandis))
        (PP (TO to)
          (NP
            (NP (DT the) (NN stipulation))
            (PP (IN of)
              (NP
                (NP (DT a) (JJ maximum) (NN amount))
                (PP (IN in)
                  (NP
                    (NP (DT a) (NN contract))
                    (PP (IN for)
                      (NP (JJ revolving) (NN guarantee)))))))))
        (PP (IN on)
          (NP
            (NP (NNS loans))
            (VP (VBN provided)
              (PP (IN in)
                (NP (NN paragraph) (CD 1))))))))
    (. .)))

dep(provisions-5, 3-2)
det(provisions-5, The-4)
nsubj(apply-16, provisions-5)
prep_of(provisions-5, paragraph-7)
num(paragraph-7, 2-8)
conj_and(provisions-5, paragraph-10)
nsubj(apply-16, paragraph-10)
num(paragraph-10, 3-11)
prep_of(paragraph-10, Article-13)
num(Article-13, 446-14)
aux(apply-16, shall-15)
root(ROOT-0, apply-16)
amod(mutandis-18, mutatis-17)
dobj(apply-16, mutandis-18)
det(stipulation-21, the-20)
prep_to(apply-16, stipulation-21)
det(amount-25, a-23)
amod(amount-25, maximum-24)
prep_of(stipulation-21, amount-25)
det(contract-28, a-27)
prep_in(amount-25, contract-28)
amod(guarantee-31, revolving-30)
prep_for(contract-28, guarantee-31)
prep_on(apply-16, loans-33)
partmod(loans-33, provided-34)
prep_in(provided-34, paragraph-36)
num(paragraph-36, 1-37)

</t1>
<t2>
In a revolving guarantee contract on loans, even if the principal determination date is determined, if the maximum amount is not stipulated, it shall not be effective.
(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT a) (JJ revolving) (NN guarantee) (NN contract))
        (PP (IN on)
          (NP (NNS loans)))))
    (, ,)
    (SBAR (RB even) (IN if)
      (S
        (NP (DT the) (JJ principal) (NN determination) (NN date))
        (VP (VBZ is)
          (VP (VBN determined) (, ,)
            (SBAR (IN if)
              (S
                (NP (DT the) (JJ maximum) (NN amount))
                (VP (VBZ is) (RB not)
                  (ADJP (JJ stipulated)))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD shall) (RB not)
      (VP (VB be)
        (ADJP (JJ effective))))
    (. .)))

det(contract-5, a-2)
amod(contract-5, revolving-3)
nn(contract-5, guarantee-4)
prep_in(effective-30, contract-5)
prep_on(contract-5, loans-7)
advmod(determined-16, even-9)
dep(determined-16, if-10)
det(date-14, the-11)
amod(date-14, principal-12)
nn(date-14, determination-13)
nsubjpass(determined-16, date-14)
auxpass(determined-16, is-15)
dep(effective-30, determined-16)
mark(stipulated-24, if-18)
det(amount-21, the-19)
amod(amount-21, maximum-20)
nsubj(stipulated-24, amount-21)
cop(stipulated-24, is-22)
neg(stipulated-24, not-23)
advcl(determined-16, stipulated-24)
nsubj(effective-30, it-26)
aux(effective-30, shall-27)
neg(effective-30, not-28)
cop(effective-30, be-29)
root(ROOT-0, effective-30)

</t2>
</pair>
<pair id="H22-19-A" label="Y">
<t1>
(Restrictions on Assignment and Subleasing of Leasehold)Article 612
(1)A lessee may not assign the lessee's rights or sublease a leased Thing without obtaining the approval of the lessor.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
    (NP (DT A) (NN lessee))
    (VP (MD may) (RB not)
      (VP
        (VP (VB assign)
          (NP
            (NP (DT the) (NN lessee) (POS 's))
            (NNS rights)))
        (CC or)
        (VP (VB sublease)
          (NP (DT a) (VBN leased) (NN Thing))
          (PP (IN without)
            (S
              (VP (VBG obtaining)
                (NP
                  (NP (DT the) (NN approval))
                  (PP (IN of)
                    (NP (DT the) (NN lessor))))))))))
    (. .)))

dep(assign-8, 1-2)
det(lessee-5, A-4)
nsubj(assign-8, lessee-5)
nsubj(sublease-14, lessee-5)
aux(assign-8, may-6)
neg(assign-8, not-7)
root(ROOT-0, assign-8)
det(lessee-10, the-9)
poss(rights-12, lessee-10)
dobj(assign-8, rights-12)
conj_or(assign-8, sublease-14)
det(Thing-17, a-15)
amod(Thing-17, leased-16)
dobj(sublease-14, Thing-17)
prepc_without(sublease-14, obtaining-19)
det(approval-21, the-20)
dobj(obtaining-19, approval-21)
det(lessor-24, the-23)
prep_of(approval-21, lessor-24)

(2)If the lessee allows any third party to make use of or take the profits of a leased Thing in violation of the provisions of the preceding paragraph, the lessor may cancel the contract.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
    (SBAR (IN If)
      (S
        (NP (DT the) (NN lessee))
        (VP (VBZ allows)
          (NP (DT any) (JJ third) (NN party)
            (S
              (VP (TO to)
                (VP
                  (VP (VB make)
                    (NP (NN use))
                    (PP (IN of)))
                  (CC or)
                  (VP (VB take)
                    (NP
                      (NP (DT the) (NNS profits))
                      (PP (IN of)
                        (NP
                          (NP (DT a) (VBN leased) (NN Thing))
                          (PP (IN in)
                            (NP
                              (NP (NN violation))
                              (PP (IN of)
                                (NP
                                  (NP (DT the) (NNS provisions))
                                  (PP (IN of)
                                    (NP (DT the) (VBG preceding) (NN paragraph))))))))))))))))))
    (, ,)
    (NP (DT the) (NN lessor))
    (VP (MD may)
      (VP (VB cancel)
        (NP (DT the) (NN contract))))
    (. .)))

dep(cancel-36, 2-2)
mark(allows-7, If-4)
det(lessee-6, the-5)
nsubj(allows-7, lessee-6)
advcl(cancel-36, allows-7)
det(party-10, any-8)
amod(party-10, third-9)
dobj(allows-7, party-10)
aux(make-12, to-11)
infmod(party-10, make-12)
dobj(make-12, use-13)
prep(make-12, of-14)
infmod(party-10, take-16)
conj_or(make-12, take-16)
det(profits-18, the-17)
dobj(take-16, profits-18)
det(Thing-22, a-20)
amod(Thing-22, leased-21)
prep_of(profits-18, Thing-22)
prep_in(Thing-22, violation-24)
det(provisions-27, the-26)
prep_of(violation-24, provisions-27)
det(paragraph-31, the-29)
amod(paragraph-31, preceding-30)
prep_of(provisions-27, paragraph-31)
det(lessor-34, the-33)
nsubj(cancel-36, lessor-34)
aux(cancel-36, may-35)
root(ROOT-0, cancel-36)
det(contract-38, the-37)
dobj(cancel-36, contract-38)

</t1>
<t2>
A lessor who cancels a lease contract for reasons of unauthorized subleasing, and demands the lessee to return the subject matter is not required to demonstrate proof that he/she did not consent to the sublease.
(ROOT
  (S
    (NP
      (NP (DT A) (NN lessor))
      (SBAR
        (WHNP (WP who))
        (S
          (VP
            (VP (VBZ cancels)
              (NP (DT a) (NN lease) (NN contract))
              (PP (IN for)
                (NP
                  (NP (NNS reasons))
                  (PP (IN of)
                    (NP (JJ unauthorized) (NN subleasing))))))
            (, ,)
            (CC and)
            (VP (VBZ demands)
              (NP (DT the) (NN lessee)
                (S
                  (VP (TO to)
                    (VP (VB return)
                      (NP (DT the) (NN subject) (NN matter)))))))))))
    (VP (VBZ is) (RB not)
      (VP (VBN required)
        (S
          (VP (TO to)
            (VP (VB demonstrate)
              (NP (NN proof))
              (SBAR (IN that)
                (S
                  (NP (NN he\/she))
                  (VP (VBD did) (RB not)
                    (VP (VB consent)
                      (PP (TO to)
                        (NP (DT the) (NN sublease))))))))))))
    (. .)))

det(lessor-2, A-1)
nsubj(cancels-4, lessor-2)
nsubj(demands-15, lessor-2)
nsubjpass(required-25, lessor-2)
xsubj(demonstrate-27, lessor-2)
rcmod(lessor-2, cancels-4)
det(contract-7, a-5)
nn(contract-7, lease-6)
dobj(cancels-4, contract-7)
prep_for(cancels-4, reasons-9)
amod(subleasing-12, unauthorized-11)
prep_of(reasons-9, subleasing-12)
rcmod(lessor-2, demands-15)
conj_and(cancels-4, demands-15)
det(lessee-17, the-16)
dobj(demands-15, lessee-17)
aux(return-19, to-18)
infmod(lessee-17, return-19)
det(matter-22, the-20)
nn(matter-22, subject-21)
dobj(return-19, matter-22)
auxpass(required-25, is-23)
neg(required-25, not-24)
root(ROOT-0, required-25)
aux(demonstrate-27, to-26)
xcomp(required-25, demonstrate-27)
dobj(demonstrate-27, proof-28)
complm(consent-33, that-29)
nsubj(consent-33, he\/she-30)
aux(consent-33, did-31)
neg(consent-33, not-32)
ccomp(demonstrate-27, consent-33)
det(sublease-36, the-35)
prep_to(consent-33, sublease-36)

</t2>
</pair>
<pair id="H22-19-O" label="Y">
<t1>
(Requirement for Assertion of Assignment of Nominative Claim against Third Parties)Article 467
(1)The assignment of a nominative claim may not be asserted against the applicable obligor or any other third party, unless the assignor gives a notice thereof to the obligor or the obligor has acknowledged the same.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
    (S
      (NP
        (NP (DT The) (NN assignment))
        (PP (IN of)
          (NP (DT a) (JJ nominative) (NN claim))))
      (VP (MD may) (RB not)
        (VP (VB be)
          (VP (VBN asserted)
            (PP (IN against)
              (NP
                (NP (DT the) (JJ applicable) (NN obligor))
                (CC or)
                (NP (DT any) (JJ other) (JJ third) (NN party))))
            (, ,)
            (SBAR (IN unless)
              (S
                (NP (DT the) (NN assignor))
                (VP (VBZ gives)
                  (NP (DT a) (NN notice))
                  (ADVP (RB thereof))
                  (PP (TO to)
                    (NP (DT the) (NN obligor))))))))))
    (CC or)
    (S
      (NP (DT the) (NN obligor))
      (VP (VBZ has)
        (VP (VBN acknowledged)
          (NP (DT the) (JJ same)))))
    (. .)))

dep(asserted-13, 1-2)
det(assignment-5, The-4)
nsubjpass(asserted-13, assignment-5)
det(claim-9, a-7)
amod(claim-9, nominative-8)
prep_of(assignment-5, claim-9)
aux(asserted-13, may-10)
neg(asserted-13, not-11)
auxpass(asserted-13, be-12)
root(ROOT-0, asserted-13)
det(obligor-17, the-15)
amod(obligor-17, applicable-16)
prep_against(asserted-13, obligor-17)
det(party-22, any-19)
amod(party-22, other-20)
amod(party-22, third-21)
prep_against(asserted-13, party-22)
conj_or(obligor-17, party-22)
mark(gives-27, unless-24)
det(assignor-26, the-25)
nsubj(gives-27, assignor-26)
advcl(asserted-13, gives-27)
det(notice-29, a-28)
dobj(gives-27, notice-29)
advmod(gives-27, thereof-30)
det(obligor-33, the-32)
prep_to(gives-27, obligor-33)
det(obligor-36, the-35)
nsubj(acknowledged-38, obligor-36)
aux(acknowledged-38, has-37)
conj_or(asserted-13, acknowledged-38)
det(same-40, the-39)
dobj(acknowledged-38, same-40)

(2)The notice or acknowledgement set forth in the preceding paragraph may not be asserted against a third party other than the obligor unless the notice or acknowledgement is made using an instrument bearing a fixed date.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
    (NP
      (NP (DT The) (NN notice)
        (CC or)
        (NN acknowledgement))
      (VP (VBN set)
        (PRT (RP forth))
        (PP (IN in)
          (NP (DT the) (VBG preceding) (NN paragraph)))))
    (VP (MD may) (RB not)
      (VP (VB be)
        (VP (VBN asserted)
          (PP (IN against)
            (NP
              (NP (DT a) (JJ third) (NN party))
              (PP (JJ other) (IN than)
                (NP (DT the) (NN obligor)))))
          (SBAR (IN unless)
            (S
              (NP (DT the) (NN notice)
                (CC or)
                (NN acknowledgement))
              (VP (VBZ is)
                (VP (VBN made)
                  (S
                    (VP (VBG using)
                      (NP (DT an) (NN instrument))
                      (S
                        (VP (VBG bearing)
                          (NP (DT a) (VBN fixed) (NN date)))))))))))))
    (. .)))

dep(asserted-17, 2-2)
det(notice-5, The-4)
nsubjpass(asserted-17, notice-5)
conj_or(notice-5, acknowledgement-7)
nsubjpass(asserted-17, acknowledgement-7)
partmod(notice-5, set-8)
prt(set-8, forth-9)
det(paragraph-13, the-11)
amod(paragraph-13, preceding-12)
prep_in(set-8, paragraph-13)
aux(asserted-17, may-14)
neg(asserted-17, not-15)
auxpass(asserted-17, be-16)
root(ROOT-0, asserted-17)
det(party-21, a-19)
amod(party-21, third-20)
prep_against(asserted-17, party-21)
dep(party-21, other-22)
det(obligor-25, the-24)
prep_than(party-21, obligor-25)
mark(made-32, unless-26)
det(notice-28, the-27)
nsubjpass(made-32, notice-28)
conj_or(notice-28, acknowledgement-30)
nsubjpass(made-32, acknowledgement-30)
auxpass(made-32, is-31)
advcl(asserted-17, made-32)
xcomp(made-32, using-33)
det(instrument-35, an-34)
dobj(using-33, instrument-35)
xcomp(using-33, bearing-36)
det(date-39, a-37)
amod(date-39, fixed-38)
dobj(bearing-36, date-39)

</t1>
<t2>
If the assignee of a claim demands the obligor to execute the assignment of the claim, in order for the obligor to refuse this, he/she is not required to demonstrate proof that there was no notification or consent regarding the claim assignment.
(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (DT the) (NN assignee))
          (PP (IN of)
            (NP (DT a) (NN claim))))
        (VP (VBZ demands)
          (NP (DT the) (NN obligor)
            (S
              (VP (TO to)
                (VP (VB execute)
                  (NP
                    (NP (DT the) (NN assignment))
                    (PP (IN of)
                      (NP (DT the) (NN claim))))
                  (, ,)
                  (PP (IN in)
                    (NP
                      (NP (NN order))
                      (PP (IN for)
                        (NP (DT the) (NN obligor)
                          (S
                            (VP (TO to)
                              (VP (VB refuse)
                                (NP (DT this))))))))))))))))
    (, ,)
    (NP (NN he\/she))
    (VP (VBZ is) (RB not)
      (VP (VBN required)
        (S
          (VP (TO to)
            (VP (VB demonstrate)
              (NP (NN proof))
              (SBAR (IN that)
                (S
                  (NP (EX there))
                  (VP (VBD was)
                    (NP
                      (NP (DT no) (NN notification)
                        (CC or)
                        (NN consent))
                      (PP (VBG regarding)
                        (NP (DT the) (NN claim) (NN assignment))))))))))))
    (. .)))

mark(demands-7, If-1)
det(assignee-3, the-2)
nsubj(demands-7, assignee-3)
det(claim-6, a-5)
prep_of(assignee-3, claim-6)
advcl(required-30, demands-7)
det(obligor-9, the-8)
dobj(demands-7, obligor-9)
aux(execute-11, to-10)
infmod(obligor-9, execute-11)
det(assignment-13, the-12)
dobj(execute-11, assignment-13)
det(claim-16, the-15)
prep_of(assignment-13, claim-16)
prep_in(execute-11, order-19)
det(obligor-22, the-21)
prep_for(order-19, obligor-22)
aux(refuse-24, to-23)
infmod(obligor-22, refuse-24)
dobj(refuse-24, this-25)
nsubjpass(required-30, he\/she-27)
xsubj(demonstrate-32, he\/she-27)
auxpass(required-30, is-28)
neg(required-30, not-29)
root(ROOT-0, required-30)
aux(demonstrate-32, to-31)
xcomp(required-30, demonstrate-32)
dobj(demonstrate-32, proof-33)
complm(was-36, that-34)
expl(was-36, there-35)
ccomp(demonstrate-32, was-36)
det(notification-38, no-37)
nsubj(was-36, notification-38)
nsubj(was-36, consent-40)
conj_or(notification-38, consent-40)
det(assignment-44, the-42)
nn(assignment-44, claim-43)
prep_regarding(notification-38, assignment-44)

</t2>
</pair>
<pair id="H22-21-2" label="Y">
<t1>
(Method of Tender of Performances)Article 493
The tender of the performance must be made actually consistent with the main purport of the obligation;provided, however, that, if the obligee refuses to accept such performance in advance, or any act is required on the part of the obligee with respect to the performance of the obligation, it shall be sufficient if the obligor demands the acceptance thereof by giving a notice that the tender of the performance has been prepared.
(ROOT
  (S
    (NP
      (NP (DT The) (NN tender))
      (PP (IN of)
        (NP (DT the) (NN performance))))
    (VP (MD must)
      (VP (VB be)
        (VP (VBN made)
          (ADVP (RB actually))
          (S
            (ADJP (JJ consistent)
              (PP (IN with)
                (NP
                  (NP (DT the) (JJ main) (NN purport))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NN obligation))
                      (: ;)
                      (VP (VBN provided) (, ,)
                        (ADVP (RB however))
                        (, ,)
                        (SBAR (IN that) (, ,)
                          (S
                            (SBAR (IN if)
                              (S
                                (S
                                  (NP (DT the) (NN obligee))
                                  (VP (VBZ refuses)
                                    (S
                                      (VP (TO to)
                                        (VP (VB accept)
                                          (NP (JJ such) (NN performance))
                                          (PP (IN in)
                                            (NP (NN advance))))))))
                                (, ,)
                                (CC or)
                                (S
                                  (NP (DT any) (NN act))
                                  (VP (VBZ is)
                                    (VP (VBN required)
                                      (PP (IN on)
                                        (NP
                                          (NP (DT the) (NN part))
                                          (PP (IN of)
                                            (NP
                                              (NP (DT the) (NN obligee))
                                              (PP (IN with)
                                                (NP (NN respect)))))))
                                      (PP (TO to)
                                        (NP
                                          (NP (DT the) (NN performance))
                                          (PP (IN of)
                                            (NP (DT the) (NN obligation))))))))))
                            (, ,)
                            (NP (PRP it))
                            (VP (MD shall)
                              (VP (VB be)
                                (ADJP (JJ sufficient))
                                (SBAR (IN if)
                                  (S
                                    (NP (DT the) (NN obligor))
                                    (VP (VBZ demands)
                                      (NP (DT the) (NN acceptance))
                                      (PP
                                        (ADVP (RB thereof))
                                        (IN by)
                                        (S
                                          (VP (VBG giving)
                                            (NP (DT a) (NN notice))
                                            (SBAR (IN that)
                                              (S
                                                (NP
                                                  (NP (DT the) (NN tender))
                                                  (PP (IN of)
                                                    (NP (DT the) (NN performance))))
                                                (VP (VBZ has)
                                                  (VP (VBN been)
                                                    (VP (VBN prepared))))))))))))))))))))))))))
    (. .)))

det(tender-2, The-1)
nsubjpass(made-8, tender-2)
det(performance-5, the-4)
prep_of(tender-2, performance-5)
aux(made-8, must-6)
auxpass(made-8, be-7)
root(ROOT-0, made-8)
advmod(made-8, actually-9)
dep(made-8, consistent-10)
det(purport-14, the-12)
amod(purport-14, main-13)
prep_with(consistent-10, purport-14)
det(obligation-17, the-16)
prep_of(purport-14, obligation-17)
partmod(obligation-17, provided-19)
advmod(provided-19, however-21)
complm(sufficient-59, that-23)
mark(refuses-28, if-25)
det(obligee-27, the-26)
nsubj(refuses-28, obligee-27)
advcl(sufficient-59, refuses-28)
aux(accept-30, to-29)
xcomp(refuses-28, accept-30)
amod(performance-32, such-31)
dobj(accept-30, performance-32)
prep_in(accept-30, advance-34)
det(act-38, any-37)
nsubjpass(required-40, act-38)
auxpass(required-40, is-39)
conj_or(refuses-28, required-40)
advcl(sufficient-59, required-40)
det(part-43, the-42)
prep_on(required-40, part-43)
det(obligee-46, the-45)
prep_of(part-43, obligee-46)
prep_with(obligee-46, respect-48)
det(performance-51, the-50)
prep_to(required-40, performance-51)
det(obligation-54, the-53)
prep_of(performance-51, obligation-54)
nsubj(sufficient-59, it-56)
aux(sufficient-59, shall-57)
cop(sufficient-59, be-58)
ccomp(provided-19, sufficient-59)
mark(demands-63, if-60)
det(obligor-62, the-61)
nsubj(demands-63, obligor-62)
advcl(sufficient-59, demands-63)
det(acceptance-65, the-64)
dobj(demands-63, acceptance-65)
advmod(demands-63, thereof-66)
prepc_by(demands-63, giving-68)
det(notice-70, a-69)
dobj(giving-68, notice-70)
complm(prepared-79, that-71)
det(tender-73, the-72)
nsubjpass(prepared-79, tender-73)
det(performance-76, the-75)
prep_of(tender-73, performance-76)
aux(prepared-79, has-77)
auxpass(prepared-79, been-78)
ccomp(giving-68, prepared-79)

</t1>
<t2>
Even if the obligor of a monetary debt brings cash to the address of the obligee and demands acceptance, in cases where the obligee refuses to accept, even if the cash is not presented in front of the obligee, the provision is deemed as actual.
(ROOT
  (S
    (SBAR (RB Even) (IN if)
      (S
        (NP
          (NP (DT the) (NN obligor))
          (PP (IN of)
            (NP (DT a) (JJ monetary) (NN debt))))
        (VP (VBZ brings)
          (NP (NN cash))
          (PP (TO to)
            (NP
              (NP (DT the) (NN address))
              (PP (IN of)
                (NP (DT the) (NN obligee)
                  (CC and)
                  (NNS demands) (NN acceptance)))))
          (, ,)
          (PP (IN in)
            (NP
              (NP (NNS cases))
              (SBAR
                (WHADVP (WRB where))
                (S
                  (NP (DT the) (NN obligee))
                  (VP (VBZ refuses)
                    (S
                      (VP (TO to)
                        (VP (VB accept))))))))))))
    (, ,)
    (SBAR (RB even) (IN if)
      (S
        (NP (DT the) (NN cash))
        (VP (VBZ is) (RB not)
          (VP (VBN presented)
            (PP (IN in)
              (NP
                (NP (NN front))
                (PP (IN of)
                  (NP (DT the) (NN obligee)))))))))
    (, ,)
    (NP (DT the) (NN provision))
    (VP (VBZ is)
      (VP (VBN deemed)
        (S
          (ADJP (RB as) (JJ actual)))))
    (. .)))

advmod(brings-9, Even-1)
dep(brings-9, if-2)
det(obligor-4, the-3)
nsubj(brings-9, obligor-4)
det(debt-8, a-6)
amod(debt-8, monetary-7)
prep_of(obligor-4, debt-8)
advcl(deemed-46, brings-9)
dobj(brings-9, cash-10)
det(address-13, the-12)
prep_to(brings-9, address-13)
det(acceptance-19, the-15)
nn(acceptance-19, obligee-16)
conj_and(obligee-16, demands-18)
nn(acceptance-19, demands-18)
prep_of(address-13, acceptance-19)
prep_in(brings-9, cases-22)
advmod(refuses-26, where-23)
det(obligee-25, the-24)
nsubj(refuses-26, obligee-25)
xsubj(accept-28, obligee-25)
rcmod(cases-22, refuses-26)
aux(accept-28, to-27)
xcomp(refuses-26, accept-28)
advmod(presented-36, even-30)
dep(presented-36, if-31)
det(cash-33, the-32)
nsubjpass(presented-36, cash-33)
auxpass(presented-36, is-34)
neg(presented-36, not-35)
dep(deemed-46, presented-36)
det(obligee-41, the-40)
prep_in_front_of(presented-36, obligee-41)
det(provision-44, the-43)
nsubjpass(deemed-46, provision-44)
auxpass(deemed-46, is-45)
root(ROOT-0, deemed-46)
advmod(actual-48, as-47)
acomp(deemed-46, actual-48)

</t2>
</pair>
<pair id="H22-21-4" label="Y">
<t1>
(Effect of Tender of Performances)Article 492
Upon tendering the performance, the relevant obligor shall be relieved from any and all responsibilities which may arise from the nonperformance of the obligation.
(ROOT
  (S
    (PP (IN Upon)
      (S
        (VP (VBG tendering)
          (NP (DT the) (NN performance)))))
    (, ,)
    (NP (DT the) (JJ relevant) (NN obligor))
    (VP (MD shall)
      (VP (VB be)
        (VP (VBN relieved)
          (PP (IN from)
            (NP
              (NP
                (ADJP (DT any)
                  (CC and)
                  (DT all))
                (NNS responsibilities))
              (SBAR
                (WHNP (WDT which))
                (S
                  (VP (MD may)
                    (VP (VB arise)
                      (PP (IN from)
                        (NP
                          (NP (DT the) (NN nonperformance))
                          (PP (IN of)
                            (NP (DT the) (NN obligation))))))))))))))
    (. .)))

prepc_upon(relieved-11, tendering-2)
det(performance-4, the-3)
dobj(tendering-2, performance-4)
det(obligor-8, the-6)
amod(obligor-8, relevant-7)
nsubjpass(relieved-11, obligor-8)
aux(relieved-11, shall-9)
auxpass(relieved-11, be-10)
root(ROOT-0, relieved-11)
amod(responsibilities-16, any-13)
conj_and(any-13, all-15)
amod(responsibilities-16, all-15)
prep_from(relieved-11, responsibilities-16)
nsubj(arise-19, responsibilities-16)
aux(arise-19, may-18)
rcmod(responsibilities-16, arise-19)
det(nonperformance-22, the-21)
prep_from(arise-19, nonperformance-22)
det(obligation-25, the-24)
prep_of(nonperformance-22, obligation-25)

</t1>
<t2>
In cases where the obligor of a monetary debt provides actual performance on the time of performance, but the obligee refuses to accept the performance, the obligor does not carry the duty to pay delinquent charges after the provision.
(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNS cases))
        (SBAR
          (WHADVP (WRB where))
          (S
            (S
              (NP
                (NP (DT the) (NN obligor))
                (PP (IN of)
                  (NP (DT a) (JJ monetary) (NN debt))))
              (VP (VBZ provides)
                (NP (JJ actual) (NN performance))
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN time))
                    (PP (IN of)
                      (NP (NN performance)))))))
            (, ,)
            (CC but)
            (S
              (NP (DT the) (NN obligee))
              (VP (VBZ refuses)
                (S
                  (VP (TO to)
                    (VP (VB accept)
                      (NP (DT the) (NN performance)))))))))))
    (, ,)
    (NP (DT the) (NN obligor))
    (VP (VBZ does) (RB not)
      (VP (VB carry)
        (NP (DT the) (NN duty)
          (S
            (VP (TO to)
              (VP (VB pay)
                (NP (JJ delinquent) (NNS charges))
                (PP (IN after)
                  (NP (DT the) (NN provision)))))))))
    (. .)))

prep_in(carry-32, cases-2)
advmod(provides-10, where-3)
det(obligor-5, the-4)
nsubj(provides-10, obligor-5)
det(debt-9, a-7)
amod(debt-9, monetary-8)
prep_of(obligor-5, debt-9)
rcmod(cases-2, provides-10)
amod(performance-12, actual-11)
dobj(provides-10, performance-12)
det(time-15, the-14)
prep_on(provides-10, time-15)
prep_of(time-15, performance-17)
det(obligee-21, the-20)
nsubj(refuses-22, obligee-21)
xsubj(accept-24, obligee-21)
rcmod(cases-2, refuses-22)
conj_but(provides-10, refuses-22)
aux(accept-24, to-23)
xcomp(refuses-22, accept-24)
det(performance-26, the-25)
dobj(accept-24, performance-26)
det(obligor-29, the-28)
nsubj(carry-32, obligor-29)
aux(carry-32, does-30)
neg(carry-32, not-31)
root(ROOT-0, carry-32)
det(duty-34, the-33)
dobj(carry-32, duty-34)
aux(pay-36, to-35)
infmod(duty-34, pay-36)
amod(charges-38, delinquent-37)
dobj(pay-36, charges-38)
det(provision-41, the-40)
prep_after(pay-36, provision-41)

</t2>
</pair>
<pair id="H22-22-2" label="Y">
<t1>
(Warranty by Donor)Article 551
(1)The donor shall not be liable for any defect in or absence of the thing or right that is the subject matter of the gift;provided, however, that this shall not apply if the donor has knowledge of the defect or absence and fails to inform the donee thereof.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
    (S
      (NP (DT The) (NN donor))
      (VP (MD shall) (RB not)
        (VP (VB be)
          (ADJP (JJ liable)
            (PP (IN for)
              (NP (DT any) (NN defect))))
          (PP (IN in)))))
    (CC or)
    (S
      (NP
        (NP (NN absence))
        (PP (IN of)
          (NP (DT the) (NN thing)
            (CC or)
            (NN right)))
        (SBAR
          (WHNP (WDT that))
          (S
            (VP (VBZ is)
              (NP
                (NP (DT the) (NN subject) (NN matter))
                (PP (IN of)
                  (NP (DT the) (NN gift)))))))
        (: ;))
      (VP (VBD provided) (, ,)
        (ADVP (RB however))
        (, ,)
        (SBAR (IN that)
          (S
            (NP (DT this))
            (VP (MD shall) (RB not)
              (VP (VB apply)
                (SBAR (IN if)
                  (S
                    (NP (DT the) (NN donor))
                    (VP
                      (VP (VBZ has)
                        (NP
                          (NP (NN knowledge))
                          (PP (IN of)
                            (NP (DT the) (NN defect)
                              (CC or)
                              (NN absence)))))
                      (CC and)
                      (VP (VBZ fails)
                        (S
                          (VP (TO to)
                            (VP (VB inform)
                              (NP (DT the) (NN donee))
                              (ADVP (RB thereof)))))))))))))))
    (. .)))

dep(liable-9, 1-2)
det(donor-5, The-4)
nsubj(liable-9, donor-5)
aux(liable-9, shall-6)
neg(liable-9, not-7)
cop(liable-9, be-8)
root(ROOT-0, liable-9)
det(defect-12, any-11)
prep_for(liable-9, defect-12)
prep(liable-9, in-13)
nsubj(matter-25, absence-15)
nsubj(provided-30, absence-15)
det(thing-18, the-17)
prep_of(absence-15, thing-18)
prep_of(absence-15, right-20)
conj_or(thing-18, right-20)
cop(matter-25, is-22)
det(matter-25, the-23)
nn(matter-25, subject-24)
rcmod(absence-15, matter-25)
det(gift-28, the-27)
prep_of(matter-25, gift-28)
conj_or(liable-9, provided-30)
advmod(provided-30, however-32)
complm(apply-38, that-34)
nsubj(apply-38, this-35)
aux(apply-38, shall-36)
neg(apply-38, not-37)
ccomp(provided-30, apply-38)
mark(has-42, if-39)
det(donor-41, the-40)
nsubj(has-42, donor-41)
nsubj(fails-50, donor-41)
xsubj(inform-52, donor-41)
advcl(apply-38, has-42)
dobj(has-42, knowledge-43)
det(defect-46, the-45)
prep_of(knowledge-43, defect-46)
prep_of(knowledge-43, absence-48)
conj_or(defect-46, absence-48)
advcl(apply-38, fails-50)
conj_and(has-42, fails-50)
aux(inform-52, to-51)
xcomp(fails-50, inform-52)
det(donee-54, the-53)
dobj(inform-52, donee-54)
advmod(inform-52, thereof-55)

(2)With respect to encumbered gifts, the donor shall assume a warranty identical to that borne by the seller, to the extent of that encumbrance.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
    (PP (IN With)
      (NP
        (NP (NN respect))
        (PP (TO to)
          (NP (JJ encumbered) (NNS gifts)))))
    (, ,)
    (NP (DT the) (NN donor))
    (VP (MD shall)
      (VP (VB assume)
        (S
          (NP (DT a) (NN warranty))
          (ADJP (JJ identical)
            (PP (TO to)
              (NP
                (NP (DT that))
                (VP (VBN borne)
                  (PP (IN by)
                    (NP (DT the) (NN seller)))
                  (, ,)
                  (PP (TO to)
                    (NP
                      (NP (DT the) (NN extent))
                      (PP (IN of)
                        (NP (DT that) (NN encumbrance))))))))))))
    (. .)))

dep(assume-13, 2-2)
amod(gifts-8, encumbered-7)
prep_with_respect_to(assume-13, gifts-8)
det(donor-11, the-10)
nsubj(assume-13, donor-11)
aux(assume-13, shall-12)
root(ROOT-0, assume-13)
det(warranty-15, a-14)
nsubj(identical-16, warranty-15)
xcomp(assume-13, identical-16)
prep_to(identical-16, that-18)
partmod(that-18, borne-19)
det(seller-22, the-21)
agent(borne-19, seller-22)
det(extent-26, the-25)
prep_to(borne-19, extent-26)
det(encumbrance-29, that-28)
prep_of(extent-26, encumbrance-29)

</t1>
<t2>
In cases where a gift of the specified thing is made without the donee bearing the responsibility, if the donor made the gift without knowing that the subject matter has a defect, the donor shall not assume a warranty for the defect.
(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNS cases))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP
              (NP (DT a) (NN gift))
              (PP (IN of)
                (NP (DT the) (VBN specified) (NN thing))))
            (VP (VBZ is)
              (VP (VBN made)
                (PP (IN without)
                  (NP
                    (NP (DT the) (NN donee))
                    (VP (VBG bearing)
                      (NP (DT the) (NN responsibility)))))))))))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (DT the) (NN donor))
        (VP (VBD made)
          (NP (DT the) (NN gift))
          (PP (IN without)
            (S
              (VP (VBG knowing)
                (SBAR (IN that)
                  (S
                    (NP (DT the) (NN subject) (NN matter))
                    (VP (VBZ has)
                      (NP (DT a) (NN defect)))))))))))
    (, ,)
    (NP (DT the) (NN donor))
    (VP (MD shall) (RB not)
      (VP (VB assume)
        (NP
          (NP (DT a) (NN warranty))
          (PP (IN for)
            (NP (DT the) (NN defect))))))
    (. .)))

prep_in(assume-39, cases-2)
advmod(made-11, where-3)
det(gift-5, a-4)
nsubjpass(made-11, gift-5)
det(thing-9, the-7)
amod(thing-9, specified-8)
prep_of(gift-5, thing-9)
auxpass(made-11, is-10)
rcmod(cases-2, made-11)
det(donee-14, the-13)
prep_without(made-11, donee-14)
partmod(donee-14, bearing-15)
det(responsibility-17, the-16)
dobj(bearing-15, responsibility-17)
mark(made-22, if-19)
det(donor-21, the-20)
nsubj(made-22, donor-21)
advcl(assume-39, made-22)
det(gift-24, the-23)
dobj(made-22, gift-24)
prepc_without(made-22, knowing-26)
complm(has-31, that-27)
det(matter-30, the-28)
nn(matter-30, subject-29)
nsubj(has-31, matter-30)
ccomp(knowing-26, has-31)
det(defect-33, a-32)
dobj(has-31, defect-33)
det(donor-36, the-35)
nsubj(assume-39, donor-36)
aux(assume-39, shall-37)
neg(assume-39, not-38)
root(ROOT-0, assume-39)
det(warranty-41, a-40)
dobj(assume-39, warranty-41)
det(defect-44, the-43)
prep_for(warranty-41, defect-44)

</t2>
</pair>
<pair id="H22-23-A" label="N">
<t1>
(Lessee's Demand for Reimbursement of Costs)Article 608
(1)If a lessee has defrayed necessary expenses with respect to the leased Thing which ought to be borne by the lessor, the lessee may immediately demand the reimbursement of the same from the lessor.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
    (SBAR (IN If)
      (S
        (NP (DT a) (NN lessee))
        (VP (VBZ has)
          (VP (VBN defrayed)
            (NP (JJ necessary) (NNS expenses))
            (PP (IN with)
              (NP (NN respect)))
            (PP (TO to)
              (NP
                (NP (DT the) (VBN leased) (NN Thing))
                (SBAR
                  (WHNP (WDT which))
                  (S
                    (VP (MD ought)
                      (S
                        (VP (TO to)
                          (VP (VB be)
                            (VP (VBN borne)
                              (PP (IN by)
                                (NP (DT the) (NN lessor))))))))))))))))
    (, ,)
    (NP (DT the) (NN lessee))
    (VP (MD may)
      (ADVP (RB immediately))
      (VP (VB demand)
        (NP
          (NP (DT the) (NN reimbursement))
          (PP (IN of)
            (NP (DT the) (JJ same))))
        (PP (IN from)
          (NP (DT the) (NN lessor)))))
    (. .)))

dep(demand-30, 1-2)
mark(defrayed-8, If-4)
det(lessee-6, a-5)
nsubj(defrayed-8, lessee-6)
aux(defrayed-8, has-7)
advcl(demand-30, defrayed-8)
amod(expenses-10, necessary-9)
dobj(defrayed-8, expenses-10)
prep_with(defrayed-8, respect-12)
det(Thing-16, the-14)
amod(Thing-16, leased-15)
prep_to(defrayed-8, Thing-16)
nsubj(ought-18, Thing-16)
rcmod(Thing-16, ought-18)
aux(borne-21, to-19)
auxpass(borne-21, be-20)
xcomp(ought-18, borne-21)
det(lessor-24, the-23)
agent(borne-21, lessor-24)
det(lessee-27, the-26)
nsubj(demand-30, lessee-27)
aux(demand-30, may-28)
advmod(demand-30, immediately-29)
root(ROOT-0, demand-30)
det(reimbursement-32, the-31)
dobj(demand-30, reimbursement-32)
det(same-35, the-34)
prep_of(reimbursement-32, same-35)
det(lessor-38, the-37)
prep_from(demand-30, lessor-38)

(2)If the lessee has incurred useful expenses with respect to the leased Thing, the lessor must reimburse those expenses on termination of the lease in compliance with the provisions of Paragraph 2 of Article 196;provided, however, that the court may, at the lessor's request, grant a reasonable period for the reimbursement of the same.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
    (SBAR (IN If)
      (S
        (NP (DT the) (NN lessee))
        (VP (VBZ has)
          (VP (VBN incurred)
            (NP (JJ useful) (NNS expenses))
            (PP (IN with)
              (NP (NN respect)))
            (PP (TO to)
              (NP (DT the) (VBN leased) (NN Thing)))))))
    (, ,)
    (NP (DT the) (NN lessor))
    (VP (MD must)
      (VP (VB reimburse)
        (S
          (NP
            (NP (DT those) (NNS expenses))
            (PP (IN on)
              (NP
                (NP (NN termination))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN lease))
                    (PP (IN in)
                      (NP
                        (NP (NN compliance))
                        (PP (IN with)
                          (NP
                            (NP (DT the) (NNS provisions))
                            (PP (IN of)
                              (NP (NNP Paragraph) (CD 2)))
                            (PP (IN of)
                              (NP (NNP Article) (CD 196))))))))))))
          (: ;)
          (VP (VBD provided) (, ,)
            (ADVP (RB however))
            (, ,)
            (SBAR (IN that)
              (S
                (NP (DT the) (NN court))
                (VP (MD may) (, ,)
                  (PP (IN at)
                    (NP
                      (NP (DT the) (NN lessor) (POS 's))
                      (NN request)))
                  (, ,)
                  (VP (VB grant)
                    (NP (DT a) (JJ reasonable) (NN period))
                    (PP (IN for)
                      (NP
                        (NP (DT the) (NN reimbursement))
                        (PP (IN of)
                          (NP (DT the) (JJ same)))))))))))))
    (. .)))

dep(reimburse-21, 2-2)
mark(incurred-8, If-4)
det(lessee-6, the-5)
nsubj(incurred-8, lessee-6)
aux(incurred-8, has-7)
advcl(reimburse-21, incurred-8)
amod(expenses-10, useful-9)
dobj(incurred-8, expenses-10)
prep_with(incurred-8, respect-12)
det(Thing-16, the-14)
amod(Thing-16, leased-15)
prep_to(incurred-8, Thing-16)
det(lessor-19, the-18)
nsubj(reimburse-21, lessor-19)
aux(reimburse-21, must-20)
root(ROOT-0, reimburse-21)
det(expenses-23, those-22)
nsubj(provided-41, expenses-23)
prep_on(expenses-23, termination-25)
det(lease-28, the-27)
prep_of(termination-25, lease-28)
prep_in(lease-28, compliance-30)
det(provisions-33, the-32)
prep_with(compliance-30, provisions-33)
prep_of(provisions-33, Paragraph-35)
num(Paragraph-35, 2-36)
prep_of(provisions-33, Article-38)
num(Article-38, 196-39)
ccomp(reimburse-21, provided-41)
advmod(provided-41, however-43)
complm(grant-56, that-45)
det(court-47, the-46)
nsubj(grant-56, court-47)
aux(grant-56, may-48)
det(lessor-52, the-51)
poss(request-54, lessor-52)
prep_at(grant-56, request-54)
ccomp(provided-41, grant-56)
det(period-59, a-57)
amod(period-59, reasonable-58)
dobj(grant-56, period-59)
det(reimbursement-62, the-61)
prep_for(grant-56, reimbursement-62)
det(same-65, the-64)
prep_of(reimbursement-62, same-65)

</t1>
<t2>
In cases where a lessee has defrayed necessary expenses with respect to the leased Thing in order to preserve the condition appropriate for profit from ordinary use of the subject, the lessee can wait for the end of the lease and demand the reimbursement of the same from the lessor.
(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNS cases))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (DT a) (NN lessee))
            (VP (VBZ has)
              (VP (VBN defrayed)
                (NP (JJ necessary) (NNS expenses))
                (PP (IN with)
                  (NP (NN respect)))
                (PP (TO to)
                  (NP
                    (NP (DT the) (VBN leased) (NN Thing))
                    (PP (IN in)
                      (NP (NN order)))
                    (S
                      (VP (TO to)
                        (VP (VB preserve)
                          (NP
                            (NP (DT the) (NN condition))
                            (ADJP (JJ appropriate)
                              (PP (IN for)
                                (NP (NN profit)))))
                          (PP (IN from)
                            (NP
                              (NP (JJ ordinary) (NN use))
                              (PP (IN of)
                                (NP (DT the) (NN subject))))))))))))))))
    (, ,)
    (NP (DT the) (NN lessee))
    (VP (MD can)
      (VP
        (VP (VB wait)
          (PP (IN for)
            (NP
              (NP (DT the) (NN end))
              (PP (IN of)
                (NP (DT the) (NN lease))))))
        (CC and)
        (VP (VB demand)
          (NP
            (NP (DT the) (NN reimbursement))
            (PP (IN of)
              (NP (DT the) (JJ same))))
          (PP (IN from)
            (NP (DT the) (NN lessor))))))
    (. .)))

prep_in(wait-35, cases-2)
advmod(defrayed-7, where-3)
det(lessee-5, a-4)
nsubj(defrayed-7, lessee-5)
aux(defrayed-7, has-6)
rcmod(cases-2, defrayed-7)
amod(expenses-9, necessary-8)
dobj(defrayed-7, expenses-9)
prep_with(defrayed-7, respect-11)
det(Thing-15, the-13)
amod(Thing-15, leased-14)
prep_to(defrayed-7, Thing-15)
prep_in(Thing-15, order-17)
aux(preserve-19, to-18)
infmod(Thing-15, preserve-19)
det(condition-21, the-20)
dobj(preserve-19, condition-21)
amod(condition-21, appropriate-22)
prep_for(appropriate-22, profit-24)
amod(use-27, ordinary-26)
prep_from(preserve-19, use-27)
det(subject-30, the-29)
prep_of(use-27, subject-30)
det(lessee-33, the-32)
nsubj(wait-35, lessee-33)
nsubj(demand-43, lessee-33)
aux(wait-35, can-34)
root(ROOT-0, wait-35)
det(end-38, the-37)
prep_for(wait-35, end-38)
det(lease-41, the-40)
prep_of(end-38, lease-41)
conj_and(wait-35, demand-43)
det(reimbursement-45, the-44)
dobj(demand-43, reimbursement-45)
det(same-48, the-47)
prep_of(reimbursement-45, same-48)
det(lessor-51, the-50)
prep_from(demand-43, lessor-51)

</t2>
</pair>
<pair id="H22-23-E" label="N">
<t1>
(Offers to Terminate Leases with Indefinite Terms)Article 617
(1)If the parties do not specify the term of a lease, either party may request to terminate it at any time.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
    (SBAR (IN If)
      (S
        (NP (DT the) (NNS parties))
        (VP (VBP do) (RB not)
          (VP (VB specify)
            (NP
              (NP (DT the) (NN term))
              (PP (IN of)
                (NP (DT a) (NN lease))))))))
    (, ,)
    (NP (DT either) (NN party))
    (VP (MD may)
      (VP (VB request)
        (S
          (VP (TO to)
            (VP (VB terminate)
              (NP (PRP it))
              (PP (IN at)
                (NP (DT any) (NN time))))))))
    (. .)))

dep(request-19, 1-2)
mark(specify-9, If-4)
det(parties-6, the-5)
nsubj(specify-9, parties-6)
aux(specify-9, do-7)
neg(specify-9, not-8)
advcl(request-19, specify-9)
det(term-11, the-10)
dobj(specify-9, term-11)
det(lease-14, a-13)
prep_of(term-11, lease-14)
det(party-17, either-16)
nsubj(request-19, party-17)
xsubj(terminate-21, party-17)
aux(request-19, may-18)
root(ROOT-0, request-19)
aux(terminate-21, to-20)
xcomp(request-19, terminate-21)
dobj(terminate-21, it-22)
det(time-25, any-24)
prep_at(terminate-21, time-25)

In such cases, the leases listed in the following items shall terminate on the expiration of the respective periods from the day of the request to terminate prescribed respectively in those items:(i)Leases of land: one year;(ii)Leases of buildings: three months; and(iii)Leases of movables and seating hire facilities: one day.
(ROOT
  (S
    (PP (IN In)
      (NP (JJ such) (NNS cases)))
    (, ,)
    (NP
      (NP (DT the) (NNS leases))
      (VP (VBN listed)
        (PP (IN in)
          (NP (DT the) (VBG following) (NNS items)))))
    (VP (MD shall)
      (VP (VB terminate)
        (PP (IN on)
          (NP
            (NP (DT the) (NN expiration))
            (PP (IN of)
              (NP (DT the) (JJ respective) (NNS periods)))))
        (PP (IN from)
          (NP
            (NP (DT the) (NN day))
            (PP (IN of)
              (NP (DT the) (NN request)
                (S
                  (VP (TO to)
                    (VP (VB terminate)
                      (VP (VBN prescribed)
                        (ADVP (RB respectively))
                        (PP (IN in)
                          (NP
                            (NP (DT those) (NNS items))
                            (: :)
                            (NP
                              (NP
                                (PRN (-LRB- -LRB-)
                                  (NP (NNP i))
                                  (-RRB- -RRB-))
                                (NNS Leases))
                              (PP (IN of)
                                (NP (NN land))))
                            (: :)
                            (NP (CD one) (NN year))
                            (: ;)
                            (NP
                              (NP
                                (PRN (-LRB- -LRB-)
                                  (NP (NN ii))
                                  (-RRB- -RRB-))
                                (NNS Leases))
                              (PP (IN of)
                                (NP (NNS buildings))))
                            (: :)
                            (NP (CD three) (NNS months))
                            (: ;)
                            (CC and)
                            (PRN (-LRB- -LRB-)
                              (NP (NN iii))
                              (-RRB- -RRB-))
                            (NP
                              (NP
                                (NP (NNP Leases))
                                (PP (IN of)
                                  (NP (NN movables)
                                    (CC and)
                                    (NN seating) (NN hire) (NNS facilities))))
                              (: :)
                              (NP (CD one) (NN day)))))))))))))))
    (. .)))

amod(cases-3, such-2)
prep_in(terminate-13, cases-3)
det(leases-6, the-5)
nsubj(terminate-13, leases-6)
partmod(leases-6, listed-7)
det(items-11, the-9)
amod(items-11, following-10)
prep_in(listed-7, items-11)
aux(terminate-13, shall-12)
root(ROOT-0, terminate-13)
det(expiration-16, the-15)
prep_on(terminate-13, expiration-16)
det(periods-20, the-18)
amod(periods-20, respective-19)
prep_of(expiration-16, periods-20)
det(day-23, the-22)
prep_from(terminate-13, day-23)
det(request-26, the-25)
prep_of(day-23, request-26)
aux(terminate-28, to-27)
infmod(request-26, terminate-28)
dep(terminate-28, prescribed-29)
advmod(prescribed-29, respectively-30)
det(items-33, those-32)
prep_in(prescribed-29, items-33)
appos(Leases-38, i-36)
prep_in(prescribed-29, Leases-38)
conj_and(items-33, Leases-38)
prep_of(Leases-38, land-40)
num(year-43, one-42)
prep_in(prescribed-29, year-43)
conj_and(items-33, year-43)
appos(Leases-48, ii-46)
prep_in(prescribed-29, Leases-48)
conj_and(items-33, Leases-48)
prep_of(Leases-48, buildings-50)
num(months-53, three-52)
prep_in(prescribed-29, months-53)
conj_and(items-33, months-53)
appos(items-33, iii-57)
prep_in(prescribed-29, Leases-59)
conj_and(items-33, Leases-59)
nn(facilities-65, movables-61)
conj_and(movables-61, seating-63)
nn(facilities-65, seating-63)
nn(facilities-65, hire-64)
prep_of(Leases-59, facilities-65)
num(day-68, one-67)
dep(Leases-59, day-68)

(2)With respect to leases of land with harvest seasons, the request to terminate must be made after the end of that season and before the next start of cultivation.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
    (PP (IN With)
      (NP
        (NP (NN respect))
        (PP (TO to)
          (NP
            (NP (NNS leases))
            (PP (IN of)
              (NP
                (NP (NN land))
                (PP (IN with)
                  (NP (NN harvest) (NNS seasons)))))))))
    (, ,)
    (NP (DT the) (NN request)
      (S
        (VP (TO to)
          (VP (VB terminate)))))
    (VP (MD must)
      (VP (VB be)
        (VP (VBN made)
          (PP
            (PP (IN after)
              (NP
                (NP (DT the) (NN end))
                (PP (IN of)
                  (NP (DT that) (NN season)))))
            (CC and)
            (PP (IN before)
              (NP
                (NP (DT the) (JJ next) (NN start))
                (PP (IN of)
                  (NP (NN cultivation)))))))))
    (. .)))

dep(made-20, 2-2)
prep_with_respect_to(made-20, leases-7)
prep_of(leases-7, land-9)
nn(seasons-12, harvest-11)
prep_with(land-9, seasons-12)
det(request-15, the-14)
nsubjpass(made-20, request-15)
nsubjpass(made-20', request-15)
aux(terminate-17, to-16)
infmod(request-15, terminate-17)
aux(made-20, must-18)
auxpass(made-20, be-19)
root(ROOT-0, made-20)
conj_and(made-20, made-20')
det(end-23, the-22)
prep_after(made-20, end-23)
det(season-26, that-25)
prep_of(end-23, season-26)
det(start-31, the-29)
amod(start-31, next-30)
prep_before(made-20', start-31)
prep_of(start-31, cultivation-33)

</t1>
<t2>
A lease without a specified term can be requested to be terminated at any time, and doing this will terminate the lease immediately.
(ROOT
  (S
    (S
      (NP
        (NP (DT A) (NN lease))
        (PP (IN without)
          (NP (DT a) (VBN specified) (NN term))))
      (VP (MD can)
        (VP (VB be)
          (VP (VBN requested)
            (S
              (VP (TO to)
                (VP (VB be)
                  (VP (VBN terminated)
                    (PP (IN at)
                      (NP (DT any) (NN time)))))))))))
    (, ,)
    (CC and)
    (S
      (S
        (VP (VBG doing)
          (NP (DT this))))
      (VP (MD will)
        (VP (VB terminate)
          (NP (DT the) (NN lease))
          (ADVP (RB immediately)))))
    (. .)))

det(lease-2, A-1)
nsubjpass(requested-9, lease-2)
det(term-6, a-4)
amod(term-6, specified-5)
prep_without(lease-2, term-6)
aux(requested-9, can-7)
auxpass(requested-9, be-8)
root(ROOT-0, requested-9)
aux(terminated-12, to-10)
auxpass(terminated-12, be-11)
xcomp(requested-9, terminated-12)
det(time-15, any-14)
prep_at(terminated-12, time-15)
csubj(terminate-21, doing-18)
dobj(doing-18, this-19)
aux(terminate-21, will-20)
conj_and(requested-9, terminate-21)
det(lease-23, the-22)
dobj(terminate-21, lease-23)
advmod(terminate-21, immediately-24)

</t2>
</pair>
<pair id="H22-23-O" label="Y">
<t1>
(Effect of Subleases)Article 613
(1)If a lessee lawfully subleases a leased Thing, the sublessee shall assume a direct obligation to the lessor.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
    (SBAR (IN If)
      (S
        (NP (DT a) (NN lessee))
        (ADVP (RB lawfully))
        (VP (VBZ subleases)
          (NP (DT a) (VBN leased) (NN Thing)))))
    (, ,)
    (NP (DT the) (NN sublessee))
    (VP (MD shall)
      (VP (VB assume)
        (NP (DT a) (JJ direct) (NN obligation))
        (PP (TO to)
          (NP (DT the) (NN lessor)))))
    (. .)))

dep(assume-16, 1-2)
mark(subleases-8, If-4)
det(lessee-6, a-5)
nsubj(subleases-8, lessee-6)
advmod(subleases-8, lawfully-7)
advcl(assume-16, subleases-8)
det(Thing-11, a-9)
amod(Thing-11, leased-10)
dobj(subleases-8, Thing-11)
det(sublessee-14, the-13)
nsubj(assume-16, sublessee-14)
aux(assume-16, shall-15)
root(ROOT-0, assume-16)
det(obligation-19, a-17)
amod(obligation-19, direct-18)
dobj(assume-16, obligation-19)
det(lessor-22, the-21)
prep_to(assume-16, lessor-22)

In such cases, advance payment of rent may not be asserted against the lessor.
(ROOT
  (S
    (PP (IN In)
      (NP (JJ such) (NNS cases)))
    (, ,)
    (NP
      (NP (NN advance) (NN payment))
      (PP (IN of)
        (NP (NN rent))))
    (VP (MD may) (RB not)
      (VP (VB be)
        (VP (VBN asserted)
          (PP (IN against)
            (NP (DT the) (NN lessor))))))
    (. .)))

amod(cases-3, such-2)
prep_in(asserted-12, cases-3)
nn(payment-6, advance-5)
nsubjpass(asserted-12, payment-6)
prep_of(payment-6, rent-8)
aux(asserted-12, may-9)
neg(asserted-12, not-10)
auxpass(asserted-12, be-11)
root(ROOT-0, asserted-12)
det(lessor-15, the-14)
prep_against(asserted-12, lessor-15)

(2)The provisions of the preceding paragraph shall not preclude the lessor from exercising his/her rights against the lessee.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
    (NP
      (NP (DT The) (NNS provisions))
      (PP (IN of)
        (NP (DT the) (VBG preceding) (NN paragraph))))
    (VP (MD shall) (RB not)
      (VP (VB preclude)
        (NP (DT the) (NN lessor))
        (PP (IN from)
          (S
            (VP (VBG exercising)
              (NP (NN his\/her) (NNS rights))
              (PP (IN against)
                (NP (DT the) (NN lessee))))))))
    (. .)))

dep(preclude-12, 2-2)
det(provisions-5, The-4)
nsubj(preclude-12, provisions-5)
det(paragraph-9, the-7)
amod(paragraph-9, preceding-8)
prep_of(provisions-5, paragraph-9)
aux(preclude-12, shall-10)
neg(preclude-12, not-11)
root(ROOT-0, preclude-12)
det(lessor-14, the-13)
dobj(preclude-12, lessor-14)
prepc_from(preclude-12, exercising-16)
nn(rights-18, his\/her-17)
dobj(exercising-16, rights-18)
det(lessee-21, the-20)
prep_against(exercising-16, lessee-21)

</t1>
<t2>
In cases where the lessee of a movable has obtained the consent from the lessor who is the owner to sublease the movable to a sub-lesseef, when the term of the lease between the lessee and the lessor finishes, and the lease is not renewed, the lessor can demand the sub-lessee to return the subject based on ownership.
(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNS cases))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP
              (NP (DT the) (NN lessee))
              (PP (IN of)
                (NP (DT a) (NN movable))))
            (VP (VBZ has)
              (VP (VBN obtained)
                (NP (DT the) (NN consent))
                (PP (IN from)
                  (NP
                    (NP (DT the) (NN lessor))
                    (SBAR
                      (WHNP (WP who))
                      (S
                        (VP (VBZ is)
                          (NP (DT the) (NN owner)
                            (S
                              (VP (TO to)
                                (VP (VB sublease)
                                  (NP (DT the) (NN movable))
                                  (PP (TO to)
                                    (NP
                                      (NP (DT a) (NN sub-lesseef))
                                      (, ,)
                                      (SBAR
                                        (WHADVP (WRB when))
                                        (S
                                          (S
                                            (NP
                                              (NP (DT the) (NN term))
                                              (PP (IN of)
                                                (NP
                                                  (NP (DT the) (NN lease))
                                                  (PP (IN between)
                                                    (NP
                                                      (NP (DT the) (NN lessee))
                                                      (CC and)
                                                      (NP (DT the) (NN lessor)))))))
                                            (VP (VBZ finishes)))
                                          (, ,)
                                          (CC and)
                                          (S
                                            (NP (DT the) (NN lease))
                                            (VP (VBZ is) (RB not)
                                              (VP (VBN renewed)))))))))))))))))))))))
    (, ,)
    (NP (DT the) (NN lessor))
    (VP (MD can)
      (VP (VB demand)
        (NP (DT the) (NN sub-lessee)
          (S
            (VP (TO to)
              (VP (VB return)
                (NP (DT the) (NN subject))
                (PP (VBN based)
                  (PP (IN on)
                    (NP (NN ownership))))))))))
    (. .)))

prep_in(demand-52, cases-2)
advmod(obtained-10, where-3)
det(lessee-5, the-4)
nsubj(obtained-10, lessee-5)
det(movable-8, a-7)
prep_of(lessee-5, movable-8)
aux(obtained-10, has-9)
rcmod(cases-2, obtained-10)
det(consent-12, the-11)
dobj(obtained-10, consent-12)
det(lessor-15, the-14)
prep_from(obtained-10, lessor-15)
nsubj(owner-19, lessor-15)
cop(owner-19, is-17)
det(owner-19, the-18)
rcmod(lessor-15, owner-19)
aux(sublease-21, to-20)
infmod(owner-19, sublease-21)
det(movable-23, the-22)
dobj(sublease-21, movable-23)
det(sub-lesseef-26, a-25)
prep_to(sublease-21, sub-lesseef-26)
advmod(finishes-40, when-28)
det(term-30, the-29)
nsubj(finishes-40, term-30)
det(lease-33, the-32)
prep_of(term-30, lease-33)
det(lessee-36, the-35)
prep_between(lease-33, lessee-36)
det(lessor-39, the-38)
prep_between(lease-33, lessor-39)
conj_and(lessee-36, lessor-39)
dep(sub-lesseef-26, finishes-40)
det(lease-44, the-43)
nsubjpass(renewed-47, lease-44)
auxpass(renewed-47, is-45)
neg(renewed-47, not-46)
dep(sub-lesseef-26, renewed-47)
conj_and(finishes-40, renewed-47)
det(lessor-50, the-49)
nsubj(demand-52, lessor-50)
aux(demand-52, can-51)
root(ROOT-0, demand-52)
det(sub-lessee-54, the-53)
dobj(demand-52, sub-lessee-54)
aux(return-56, to-55)
infmod(sub-lessee-54, return-56)
det(subject-58, the-57)
dobj(return-56, subject-58)
prepc_based_on(return-56, on-60)
pobj(return-56, ownership-61)

</t2>
</pair>
<pair id="H22-25-3" label="Y">
<t1>
(Defense for Simultaneous Performance)Article 533
A party to a bilateral contract may refuse to perform his/her own obligation until the other party tenders the performance of his/her obligation;provided, however, that this shall not apply if the obligation of the other party is not yet due.
(ROOT
  (S
    (NP
      (NP (DT A) (NN party))
      (PP (TO to)
        (NP (DT a) (JJ bilateral) (NN contract))))
    (VP (MD may)
      (VP (VB refuse)
        (S
          (VP (TO to)
            (VP (VB perform)
              (NP (JJ his\/her) (JJ own) (NN obligation))
              (SBAR (IN until)
                (S
                  (NP
                    (NP (DT the) (JJ other) (NN party))
                    (VP (VBG tenders)
                      (NP
                        (NP (DT the) (NN performance))
                        (PP (IN of)
                          (NP (NN his\/her) (NN obligation))))))
                  (: ;)
                  (VP (VBD provided) (, ,)
                    (ADVP (RB however))
                    (, ,)
                    (SBAR (IN that)
                      (S
                        (NP (DT this))
                        (VP (MD shall) (RB not)
                          (VP (VB apply)
                            (SBAR (IN if)
                              (S
                                (NP
                                  (NP (DT the) (NN obligation))
                                  (PP (IN of)
                                    (NP (DT the) (JJ other) (NN party))))
                                (VP (VBZ is) (RB not)
                                  (ADJP (RB yet) (JJ due)))))))))))))))))
    (. .)))

det(party-2, A-1)
nsubj(refuse-8, party-2)
xsubj(perform-10, party-2)
det(contract-6, a-4)
amod(contract-6, bilateral-5)
prep_to(party-2, contract-6)
aux(refuse-8, may-7)
root(ROOT-0, refuse-8)
aux(perform-10, to-9)
xcomp(refuse-8, perform-10)
amod(obligation-13, his\/her-11)
amod(obligation-13, own-12)
dobj(perform-10, obligation-13)
mark(provided-25, until-14)
det(party-17, the-15)
amod(party-17, other-16)
nsubj(provided-25, party-17)
partmod(party-17, tenders-18)
det(performance-20, the-19)
dobj(tenders-18, performance-20)
nn(obligation-23, his\/her-22)
prep_of(performance-20, obligation-23)
advcl(perform-10, provided-25)
advmod(provided-25, however-27)
complm(apply-33, that-29)
nsubj(apply-33, this-30)
aux(apply-33, shall-31)
neg(apply-33, not-32)
ccomp(provided-25, apply-33)
mark(due-44, if-34)
det(obligation-36, the-35)
nsubj(due-44, obligation-36)
det(party-40, the-38)
amod(party-40, other-39)
prep_of(obligation-36, party-40)
cop(due-44, is-41)
neg(due-44, not-42)
advmod(due-44, yet-43)
advcl(apply-33, due-44)

(Contractor's Warranty)Article 634
(1)If there is any defect in the subject matter of work performed, the party ordering the work may demand that the contractor repair the defect, specifying a reasonable period;provided, however, that this shall not apply if the defect is not significant and excessive costs would be required for the repair.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
    (SBAR (IN If)
      (S
        (NP (EX there))
        (VP (VBZ is)
          (NP
            (NP (DT any) (NN defect))
            (PP (IN in)
              (NP
                (NP (DT the) (NN subject) (NN matter))
                (PP (IN of)
                  (NP
                    (NP (NN work))
                    (VP (VBN performed))))))))))
    (, ,)
    (NP
      (NP (DT the) (NN party))
      (VP (VBG ordering)
        (NP (DT the) (NN work))))
    (VP (MD may)
      (VP (VB demand)
        (SBAR (IN that)
          (S
            (NP (DT the) (NN contractor))
            (VP (VBP repair)
              (SBAR
                (S
                  (S
                    (NP (DT the) (NN defect))
                    (, ,)
                    (S
                      (VP (VBG specifying)
                        (NP (DT a) (JJ reasonable) (NN period))))
                    (: ;)
                    (VP (VBD provided) (, ,)
                      (ADVP (RB however))
                      (, ,)
                      (SBAR (IN that)
                        (S
                          (NP (DT this))
                          (VP (MD shall) (RB not)
                            (VP (VB apply)
                              (SBAR (IN if)
                                (S
                                  (NP (DT the) (NN defect))
                                  (VP (VBZ is) (RB not)
                                    (ADJP (JJ significant)))))))))))
                  (CC and)
                  (S
                    (NP (JJ excessive) (NNS costs))
                    (VP (MD would)
                      (VP (VB be)
                        (VP (VBN required)
                          (PP (IN for)
                            (NP (DT the) (NN repair))))))))))))))
    (. .)))

dep(demand-23, 1-2)
mark(is-6, If-4)
expl(is-6, there-5)
advcl(demand-23, is-6)
det(defect-8, any-7)
nsubj(is-6, defect-8)
det(matter-12, the-10)
nn(matter-12, subject-11)
prep_in(defect-8, matter-12)
prep_of(matter-12, work-14)
partmod(work-14, performed-15)
det(party-18, the-17)
nsubj(demand-23, party-18)
partmod(party-18, ordering-19)
det(work-21, the-20)
dobj(ordering-19, work-21)
aux(demand-23, may-22)
root(ROOT-0, demand-23)
complm(repair-27, that-24)
det(contractor-26, the-25)
nsubj(repair-27, contractor-26)
ccomp(demand-23, repair-27)
det(defect-29, the-28)
nsubj(provided-36, defect-29)
partmod(provided-36, specifying-31)
det(period-34, a-32)
amod(period-34, reasonable-33)
dobj(specifying-31, period-34)
dep(repair-27, provided-36)
advmod(provided-36, however-38)
complm(apply-44, that-40)
nsubj(apply-44, this-41)
aux(apply-44, shall-42)
neg(apply-44, not-43)
ccomp(provided-36, apply-44)
mark(significant-50, if-45)
det(defect-47, the-46)
nsubj(significant-50, defect-47)
cop(significant-50, is-48)
neg(significant-50, not-49)
advcl(apply-44, significant-50)
amod(costs-53, excessive-52)
nsubjpass(required-56, costs-53)
aux(required-56, would-54)
auxpass(required-56, be-55)
dep(repair-27, required-56)
conj_and(provided-36, required-56)
det(repair-59, the-58)
prep_for(required-56, repair-59)

(2)The party ordering the work may demand compensation for damages in lieu of, or in addition to, the repair of the defect.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
    (NP
      (NP (DT The) (NN party))
      (VP (VBG ordering)
        (NP (DT the) (NN work))))
    (VP (MD may)
      (VP (VB demand)
        (NP
          (NP (NN compensation))
          (PP (IN for)
            (NP
              (NP (NNS damages))
              (PP
                (PP (IN in)
                  (NP
                    (NP (NN lieu))
                    (PP (IN of))))
                (, ,)
                (CC or)
                (PP (IN in)
                  (NP (NN addition)))))))
        (PP (TO to))
        (, ,)
        (NP
          (NP (DT the) (NN repair))
          (PP (IN of)
            (NP (DT the) (NN defect))))))
    (. .)))

dep(demand-10, 2-2)
det(party-5, The-4)
nsubj(demand-10, party-5)
partmod(party-5, ordering-6)
det(work-8, the-7)
dobj(ordering-6, work-8)
aux(demand-10, may-9)
root(ROOT-0, demand-10)
dobj(demand-10, compensation-11)
prep_for(compensation-11, damages-13)
prep_in(damages-13, lieu-15)
prep(lieu-15, of-16)
prep_in(damages-13, addition-20)
conj_or(lieu-15, addition-20)
prep(demand-10, to-21)
det(repair-24, the-23)
dobj(demand-10, repair-24)
det(defect-27, the-26)
prep_of(repair-24, defect-27)

In such cases, the provisions of Article 533 shall apply mutatis mutandis.
(ROOT
  (S
    (PP (IN In)
      (NP (JJ such) (NNS cases)))
    (, ,)
    (NP
      (NP (DT the) (NNS provisions))
      (PP (IN of)
        (NP (NNP Article) (CD 533))))
    (VP (MD shall)
      (VP (VB apply)
        (NP (JJ mutatis) (NNS mutandis))))
    (. .)))

amod(cases-3, such-2)
prep_in(apply-11, cases-3)
det(provisions-6, the-5)
nsubj(apply-11, provisions-6)
prep_of(provisions-6, Article-8)
num(Article-8, 533-9)
aux(apply-11, shall-10)
root(ROOT-0, apply-11)
amod(mutandis-13, mutatis-12)
dobj(apply-11, mutandis-13)

</t1>
<t2>
In cases where the contractor demands the party ordering work to provide remuneration, if there is any defect in the subject matter of work performed, and the party ordering work demands that the contractor repair the defect, the party ordering work can refuse to pay remuneration.
(ROOT
  (S
    (PP (IN In)
      (NP
        (NP
          (NP (NNS cases))
          (SBAR
            (WHADVP (WRB where))
            (S
              (NP (DT the) (NN contractor))
              (VP (VBZ demands)
                (NP
                  (NP (DT the) (NN party))
                  (VP (VBG ordering)
                    (NP (NN work))
                    (S
                      (VP (TO to)
                        (VP (VB provide)
                          (NP (NN remuneration)))))))
                (, ,)
                (SBAR (IN if)
                  (S
                    (NP (EX there))
                    (VP (VBZ is)
                      (NP
                        (NP (DT any) (NN defect))
                        (PP (IN in)
                          (NP
                            (NP (DT the) (NN subject) (NN matter))
                            (PP (IN of)
                              (NP
                                (NP (NN work))
                                (VP (VBN performed))))))))))))))
        (, ,)
        (CC and)
        (NP
          (NP (DT the) (NN party))
          (VP (VBG ordering)
            (NP (NN work) (NNS demands))
            (SBAR (IN that)
              (S
                (NP (DT the) (NN contractor))
                (VP (VBP repair)
                  (NP (DT the) (NN defect)))))))))
    (, ,)
    (NP
      (NP (DT the) (NN party))
      (VP (VBG ordering)
        (NP (NN work))))
    (VP (MD can)
      (VP (VB refuse)
        (S
          (VP (TO to)
            (VP (VB pay)
              (NP (NN remuneration)))))))
    (. .)))

prep_in(refuse-46, cases-2)
advmod(demands-6, where-3)
det(contractor-5, the-4)
nsubj(demands-6, contractor-5)
rcmod(cases-2, demands-6)
det(party-8, the-7)
dobj(demands-6, party-8)
partmod(party-8, ordering-9)
dobj(ordering-9, work-10)
aux(provide-12, to-11)
xcomp(ordering-9, provide-12)
dobj(provide-12, remuneration-13)
mark(is-17, if-15)
expl(is-17, there-16)
advcl(demands-6, is-17)
det(defect-19, any-18)
nsubj(is-17, defect-19)
det(matter-23, the-21)
nn(matter-23, subject-22)
prep_in(defect-19, matter-23)
prep_of(matter-23, work-25)
partmod(work-25, performed-26)
det(party-30, the-29)
conj_and(cases-2, party-30)
prep_in(refuse-46, party-30)
partmod(party-30, ordering-31)
nn(demands-33, work-32)
dobj(ordering-31, demands-33)
complm(repair-37, that-34)
det(contractor-36, the-35)
nsubj(repair-37, contractor-36)
ccomp(ordering-31, repair-37)
det(defect-39, the-38)
dobj(repair-37, defect-39)
det(party-42, the-41)
nsubj(refuse-46, party-42)
xsubj(pay-48, party-42)
partmod(party-42, ordering-43)
dobj(ordering-43, work-44)
aux(refuse-46, can-45)
root(ROOT-0, refuse-46)
aux(pay-48, to-47)
xcomp(refuse-46, pay-48)
dobj(pay-48, remuneration-49)

</t2>
</pair>
<pair id="H22-26-A" label="N">
<t1>
(Remuneration for Mandatary)Article 648
(1)In the absence of any special agreements, the mandatary may not claim remuneration from the mandator.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
    (PP (IN In)
      (NP
        (NP (DT the) (NN absence))
        (PP (IN of)
          (NP (DT any) (JJ special) (NNS agreements)))))
    (, ,)
    (NP (DT the) (NN mandatary))
    (VP (MD may) (RB not)
      (VP (VB claim)
        (NP (NN remuneration))
        (PP (IN from)
          (NP (DT the) (NN mandator)))))
    (. .)))

dep(claim-16, 1-2)
det(absence-6, the-5)
prep_in(claim-16, absence-6)
det(agreements-10, any-8)
amod(agreements-10, special-9)
prep_of(absence-6, agreements-10)
det(mandatary-13, the-12)
nsubj(claim-16, mandatary-13)
aux(claim-16, may-14)
neg(claim-16, not-15)
root(ROOT-0, claim-16)
dobj(claim-16, remuneration-17)
det(mandator-20, the-19)
prep_from(claim-16, mandator-20)

(2)In cases where the mandatary is to receive remuneration, the mandatary may not claim the same until and unless he/she has performed the mandated business;provided, however, that if the remuneration is specified with reference to period, the provisions of Paragraph 2 of Article 624 shall apply mutatis mutandis.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
    (PP (IN In)
      (NP
        (NP (NNS cases))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (DT the) (NN mandatary))
            (VP (VBZ is)
              (S
                (VP (TO to)
                  (VP (VB receive)
                    (NP (NN remuneration))))))))))
    (, ,)
    (NP (DT the) (NN mandatary))
    (VP (MD may) (RB not)
      (VP (VB claim)
        (NP (DT the) (JJ same))
        (SBAR (IN until)
          (CC and)
          (IN unless)
          (S
            (NP (NN he\/she))
            (VP (VBZ has)
              (VP (VBN performed)
                (NP
                  (NP (DT the) (JJ mandated) (NN business))
                  (: ;)
                  (VP (VBN provided) (, ,)
                    (ADVP (RB however))
                    (, ,)
                    (SBAR (IN that)
                      (S
                        (SBAR (IN if)
                          (S
                            (NP (DT the) (NN remuneration))
                            (VP (VBZ is)
                              (VP (VBN specified)
                                (PP (IN with)
                                  (NP (NN reference)))
                                (PP (TO to)
                                  (NP (NN period)))))))
                        (, ,)
                        (NP
                          (NP (DT the) (NNS provisions))
                          (PP (IN of)
                            (NP (NNP Paragraph) (CD 2)))
                          (PP (IN of)
                            (NP (NNP Article) (CD 624))))
                        (VP (MD shall)
                          (VP (VB apply)
                            (NP (JJ mutatis) (NNS mutandis))))))))))))))
    (. .)))

dep(claim-18, 2-2)
prep_in(claim-18, cases-5)
advmod(is-9, where-6)
det(mandatary-8, the-7)
nsubj(is-9, mandatary-8)
xsubj(receive-11, mandatary-8)
rcmod(cases-5, is-9)
aux(receive-11, to-10)
xcomp(is-9, receive-11)
dobj(receive-11, remuneration-12)
det(mandatary-15, the-14)
nsubj(claim-18, mandatary-15)
aux(claim-18, may-16)
neg(claim-18, not-17)
root(ROOT-0, claim-18)
det(same-20, the-19)
dobj(claim-18, same-20)
mark(performed-26, until-21)
advcl(claim-18, unless-23)
conj_and(performed-26, unless-23)
nsubj(performed-26, he\/she-24)
aux(performed-26, has-25)
advcl(claim-18, performed-26)
det(business-29, the-27)
amod(business-29, mandated-28)
dobj(performed-26, business-29)
partmod(business-29, provided-31)
advmod(provided-31, however-33)
complm(apply-55, that-35)
mark(specified-40, if-36)
det(remuneration-38, the-37)
nsubjpass(specified-40, remuneration-38)
auxpass(specified-40, is-39)
advcl(apply-55, specified-40)
prep_with(specified-40, reference-42)
prep_to(specified-40, period-44)
det(provisions-47, the-46)
nsubj(apply-55, provisions-47)
prep_of(provisions-47, Paragraph-49)
num(Paragraph-49, 2-50)
prep_of(provisions-47, Article-52)
num(Article-52, 624-53)
aux(apply-55, shall-54)
ccomp(provided-31, apply-55)
amod(mutandis-57, mutatis-56)
dobj(apply-55, mutandis-57)

(3)If the mandate terminates during performance due to reasons not attributable to the mandatary, the mandatary may demand remuneration in proportion to the performance already completed.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 3) (-RRB- -RRB-))
    (SBAR (IN If)
      (S
        (NP (DT the) (NN mandate))
        (VP (VBZ terminates)
          (PP (IN during)
            (NP
              (NP (NN performance))
              (ADJP (JJ due)
                (PP (TO to)
                  (NP
                    (NP (NNS reasons))
                    (ADJP (RB not) (JJ attributable)))))))
          (PP (TO to)
            (NP (DT the) (NN mandatary))))))
    (, ,)
    (NP (DT the) (NN mandatary))
    (VP (MD may)
      (VP (VB demand)
        (NP
          (NP (NN remuneration))
          (PP (IN in)
            (NP (NN proportion))))
        (PP (TO to)
          (NP
            (NP (DT the) (NN performance))
            (VP
              (ADVP (RB already))
              (VBN completed))))))
    (. .)))

dep(demand-22, 3-2)
mark(terminates-7, If-4)
det(mandate-6, the-5)
nsubj(terminates-7, mandate-6)
advcl(demand-22, terminates-7)
prep_during(terminates-7, performance-9)
prep_due_to(performance-9, reasons-12)
neg(attributable-14, not-13)
amod(reasons-12, attributable-14)
det(mandatary-17, the-16)
prep_to(terminates-7, mandatary-17)
det(mandatary-20, the-19)
nsubj(demand-22, mandatary-20)
aux(demand-22, may-21)
root(ROOT-0, demand-22)
dobj(demand-22, remuneration-23)
prep_in(remuneration-23, proportion-25)
det(performance-28, the-27)
prep_to(demand-22, performance-28)
advmod(completed-30, already-29)
partmod(performance-28, completed-30)

</t1>
<t2>
Even in cases where consent has been reached between a mandator and a mandatary for the payment of remuneration, if the mandatary cancels the contract of mandate in the middle of performance of the mandated business, the mandatary cannot demand payment of remuneration.
(ROOT
  (S
    (PP (RB Even) (IN in)
      (NP
        (NP (NNS cases))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (NN consent))
            (VP (VBZ has)
              (VP (VBN been)
                (VP (VBN reached)
                  (PP (IN between)
                    (NP
                      (NP (DT a) (NN mandator))
                      (CC and)
                      (NP (DT a) (NN mandatary))))
                  (PP (IN for)
                    (NP
                      (NP (DT the) (NN payment))
                      (PP (IN of)
                        (NP (NN remuneration))))))))))))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (DT the) (NN mandatary))
        (VP (VBZ cancels)
          (NP
            (NP (DT the) (NN contract))
            (PP (IN of)
              (NP
                (NP (NN mandate))
                (PP (IN in)
                  (NP
                    (NP (DT the) (NN middle))
                    (PP (IN of)
                      (NP
                        (NP (NN performance))
                        (PP (IN of)
                          (NP (DT the) (VBN mandated) (NN business)))))))))))))
    (, ,)
    (NP (DT the) (NN mandatary))
    (VP (MD can) (RB not)
      (VP (VB demand)
        (NP
          (NP (NN payment))
          (PP (IN of)
            (NP (NN remuneration))))))
    (. .)))

advmod(demand-43, Even-1)
advcl(demand-43, in-2)
prep_in(demand-43, cases-3)
advmod(reached-8, where-4)
nsubjpass(reached-8, consent-5)
aux(reached-8, has-6)
auxpass(reached-8, been-7)
rcmod(cases-3, reached-8)
det(mandator-11, a-10)
prep_between(reached-8, mandator-11)
det(mandatary-14, a-13)
prep_between(reached-8, mandatary-14)
conj_and(mandator-11, mandatary-14)
det(payment-17, the-16)
prep_for(reached-8, payment-17)
prep_of(payment-17, remuneration-19)
mark(cancels-24, if-21)
det(mandatary-23, the-22)
nsubj(cancels-24, mandatary-23)
advcl(demand-43, cancels-24)
det(contract-26, the-25)
dobj(cancels-24, contract-26)
prep_of(contract-26, mandate-28)
det(middle-31, the-30)
prep_in(mandate-28, middle-31)
prep_of(middle-31, performance-33)
det(business-37, the-35)
amod(business-37, mandated-36)
prep_of(performance-33, business-37)
det(mandatary-40, the-39)
nsubj(demand-43, mandatary-40)
aux(demand-43, can-41)
neg(demand-43, not-42)
root(ROOT-0, demand-43)
dobj(demand-43, payment-44)
prep_of(payment-44, remuneration-46)

</t2>
</pair>
<pair id="H22-26-I" label="Y">
<t1>
(Mandatary's Claims for Reimbursement of Expense)Article 650
(1)If the mandatary has incurred costs found to be necessary for the administration of the mandated business, the mandatary may claim reimbursement of those costs from the mandator and any interest on the same from the day the costs were incurred.
(ROOT
  (S
    (S
      (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
      (SBAR (IN If)
        (S
          (NP (DT the) (NN mandatary))
          (VP (VBZ has)
            (VP (VBN incurred)
              (NP
                (NP (NNS costs))
                (VP (VBN found)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (ADJP (JJ necessary)
                          (PP (IN for)
                            (NP
                              (NP (DT the) (NN administration))
                              (PP (IN of)
                                (NP (DT the) (VBN mandated) (NN business)))))))))))))))
      (, ,)
      (NP (DT the) (NN mandatary))
      (VP (MD may)
        (VP (VB claim)
          (NP
            (NP (NN reimbursement))
            (PP (IN of)
              (NP (DT those) (NNS costs))))
          (PP (IN from)
            (NP
              (NP (DT the) (NN mandator))
              (CC and)
              (NP (DT any) (NN interest))))
          (PP (IN on)
            (NP
              (NP (DT the) (JJ same))
              (PP (IN from)
                (NP (DT the) (NN day))))))))
    (NP (DT the) (NNS costs))
    (VP (VBD were)
      (VP (VBN incurred)))
    (. .)))

dep(claim-25, 1-2)
mark(incurred-8, If-4)
det(mandatary-6, the-5)
nsubj(incurred-8, mandatary-6)
aux(incurred-8, has-7)
advcl(claim-25, incurred-8)
dobj(incurred-8, costs-9)
xsubj(necessary-13, costs-9)
partmod(costs-9, found-10)
aux(necessary-13, to-11)
cop(necessary-13, be-12)
xcomp(found-10, necessary-13)
det(administration-16, the-15)
prep_for(necessary-13, administration-16)
det(business-20, the-18)
amod(business-20, mandated-19)
prep_of(administration-16, business-20)
det(mandatary-23, the-22)
nsubj(claim-25, mandatary-23)
aux(claim-25, may-24)
dep(incurred-45, claim-25)
dobj(claim-25, reimbursement-26)
det(costs-29, those-28)
prep_of(reimbursement-26, costs-29)
det(mandator-32, the-31)
prep_from(claim-25, mandator-32)
det(interest-35, any-34)
prep_from(claim-25, interest-35)
conj_and(mandator-32, interest-35)
det(same-38, the-37)
prep_on(claim-25, same-38)
det(day-41, the-40)
prep_from(same-38, day-41)
det(costs-43, the-42)
nsubjpass(incurred-45, costs-43)
auxpass(incurred-45, were-44)
root(ROOT-0, incurred-45)

(2)If the mandatary has incurred any obligation found to be necessary for the administration of the mandated business, the mandatary may demand that the mandator perform the obligation on the mandatary's behalf.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
    (SBAR (IN If)
      (S
        (NP (DT the) (NN mandatary))
        (VP (VBZ has)
          (VP (VBN incurred)
            (NP
              (NP (DT any) (NN obligation))
              (VP (VBN found)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (JJ necessary)
                        (PP (IN for)
                          (NP
                            (NP (DT the) (NN administration))
                            (PP (IN of)
                              (NP (DT the) (VBN mandated) (NN business)))))))))))))))
    (, ,)
    (NP (DT the) (NN mandatary))
    (VP (MD may)
      (VP (VB demand)
        (SBAR (IN that)
          (S
            (NP (DT the) (NN mandator))
            (VP (VBP perform)
              (NP
                (NP (DT the) (NN obligation))
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN mandatary) (POS 's))
                    (NN behalf)))))))))
    (. .)))

dep(demand-26, 2-2)
mark(incurred-8, If-4)
det(mandatary-6, the-5)
nsubj(incurred-8, mandatary-6)
aux(incurred-8, has-7)
advcl(demand-26, incurred-8)
det(obligation-10, any-9)
dobj(incurred-8, obligation-10)
xsubj(necessary-14, obligation-10)
partmod(obligation-10, found-11)
aux(necessary-14, to-12)
cop(necessary-14, be-13)
xcomp(found-11, necessary-14)
det(administration-17, the-16)
prep_for(necessary-14, administration-17)
det(business-21, the-19)
amod(business-21, mandated-20)
prep_of(administration-17, business-21)
det(mandatary-24, the-23)
nsubj(demand-26, mandatary-24)
aux(demand-26, may-25)
root(ROOT-0, demand-26)
complm(perform-30, that-27)
det(mandator-29, the-28)
nsubj(perform-30, mandator-29)
ccomp(demand-26, perform-30)
det(obligation-32, the-31)
dobj(perform-30, obligation-32)
det(mandatary-35, the-34)
poss(behalf-37, mandatary-35)
prep_on(obligation-32, behalf-37)

In such cases, if the obligation has not yet fallen due, the mandatary may require the mandator to tender reasonable security.
(ROOT
  (S
    (PP (IN In)
      (NP (JJ such) (NNS cases)))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (DT the) (NN obligation))
        (VP (VBZ has) (RB not)
          (ADVP (RB yet))
          (VP (VBN fallen)
            (S
              (ADJP (JJ due)))))))
    (, ,)
    (NP (DT the) (NN mandatary))
    (VP (MD may)
      (VP (VB require)
        (NP (DT the) (NN mandator)
          (S
            (VP (TO to)
              (VP (VB tender)
                (NP (JJ reasonable) (NN security))))))))
    (. .)))

amod(cases-3, such-2)
prep_in(require-17, cases-3)
mark(fallen-11, if-5)
det(obligation-7, the-6)
nsubj(fallen-11, obligation-7)
aux(fallen-11, has-8)
neg(fallen-11, not-9)
advmod(fallen-11, yet-10)
advcl(require-17, fallen-11)
acomp(fallen-11, due-12)
det(mandatary-15, the-14)
nsubj(require-17, mandatary-15)
aux(require-17, may-16)
root(ROOT-0, require-17)
det(mandator-19, the-18)
dobj(require-17, mandator-19)
aux(tender-21, to-20)
infmod(mandator-19, tender-21)
amod(security-23, reasonable-22)
dobj(tender-21, security-23)

(3)If the mandatary suffers any loss due to the administration of the mandated business without negligence in the mandatary, he/she may claim compensation for the loss from the mandator.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 3) (-RRB- -RRB-))
    (SBAR (IN If)
      (S
        (NP (DT the) (NN mandatary))
        (VP (VBZ suffers)
          (S
            (NP (DT any) (NN loss))
            (ADJP (JJ due)
              (PP (TO to)
                (NP
                  (NP (DT the) (NN administration))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (VBN mandated) (NN business))
                      (PP (IN without)
                        (NP
                          (NP (NN negligence))
                          (PP (IN in)
                            (NP (DT the) (NN mandatary))))))))))))))
    (, ,)
    (NP (NN he\/she))
    (VP (MD may)
      (VP (VB claim)
        (NP (NN compensation))
        (PP (IN for)
          (NP
            (NP (DT the) (NN loss))
            (PP (IN from)
              (NP (DT the) (NN mandator)))))))
    (. .)))

dep(claim-26, 3-2)
mark(suffers-7, If-4)
det(mandatary-6, the-5)
nsubj(suffers-7, mandatary-6)
advcl(claim-26, suffers-7)
det(loss-9, any-8)
nsubj(due-10, loss-9)
xcomp(suffers-7, due-10)
det(administration-13, the-12)
prep_to(due-10, administration-13)
det(business-17, the-15)
amod(business-17, mandated-16)
prep_of(administration-13, business-17)
prep_without(business-17, negligence-19)
det(mandatary-22, the-21)
prep_in(negligence-19, mandatary-22)
nsubj(claim-26, he\/she-24)
aux(claim-26, may-25)
root(ROOT-0, claim-26)
dobj(claim-26, compensation-27)
det(loss-30, the-29)
prep_for(claim-26, loss-30)
det(mandator-33, the-32)
prep_from(loss-30, mandator-33)

</t1>
<t2>
If the mandatary has incurred costs found to be necessary for the administration of the mandated business, the mandatary can claim the  reimbursement of those costs from the mandator and any interest on the same from the day the costs were incurred.
(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT the) (NN mandatary))
        (VP (VBZ has)
          (VP (VBN incurred)
            (NP
              (NP (NNS costs))
              (VP (VBN found)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (JJ necessary)
                        (PP (IN for)
                          (NP
                            (NP (DT the) (NN administration))
                            (PP (IN of)
                              (NP (DT the) (VBN mandated) (NN business)))))))))))))))
    (, ,)
    (NP (DT the) (NN mandatary))
    (VP (MD can)
      (VP (VB claim)
        (NP
          (NP (DT the) (NN reimbursement))
          (PP (IN of)
            (NP (DT those) (NNS costs))))
        (PP (IN from)
          (NP
            (NP (DT the) (NN mandator))
            (CC and)
            (NP (DT any) (NN interest))))
        (PP (IN on)
          (NP (DT the) (JJ same)))
        (PP (IN from)
          (NP
            (NP (DT the) (NN day))
            (SBAR
              (S
                (NP (DT the) (NNS costs))
                (VP (VBD were)
                  (VP (VBN incurred)))))))))
    (. .)))

mark(incurred-5, If-1)
det(mandatary-3, the-2)
nsubj(incurred-5, mandatary-3)
aux(incurred-5, has-4)
advcl(claim-22, incurred-5)
dobj(incurred-5, costs-6)
xsubj(necessary-10, costs-6)
partmod(costs-6, found-7)
aux(necessary-10, to-8)
cop(necessary-10, be-9)
xcomp(found-7, necessary-10)
det(administration-13, the-12)
prep_for(necessary-10, administration-13)
det(business-17, the-15)
amod(business-17, mandated-16)
prep_of(administration-13, business-17)
det(mandatary-20, the-19)
nsubj(claim-22, mandatary-20)
aux(claim-22, can-21)
root(ROOT-0, claim-22)
det(reimbursement-24, the-23)
dobj(claim-22, reimbursement-24)
det(costs-27, those-26)
prep_of(reimbursement-24, costs-27)
det(mandator-30, the-29)
prep_from(claim-22, mandator-30)
det(interest-33, any-32)
prep_from(claim-22, interest-33)
conj_and(mandator-30, interest-33)
det(same-36, the-35)
prep_on(claim-22, same-36)
det(day-39, the-38)
prep_from(claim-22, day-39)
det(costs-41, the-40)
nsubjpass(incurred-43, costs-41)
auxpass(incurred-43, were-42)
rcmod(day-39, incurred-43)

</t2>
</pair>
<pair id="H22-26-U" label="N">
<t1>
(Delivery of Received Things by Mandatary)Article 646
(1)The mandatary must deliver to the mandator monies and other Things that he/she has received during the course of administering the mandated business.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
    (NP (DT The) (NN mandatary))
    (VP (MD must)
      (VP (VB deliver)
        (PP (TO to)
          (NP
            (NP (DT the) (NN mandator) (NNS monies))
            (CC and)
            (NP (JJ other) (NNS Things))))
        (SBAR (IN that)
          (S
            (NP (NN he\/she))
            (VP (VBZ has)
              (VP (VBN received)
                (PP (IN during)
                  (NP
                    (NP (DT the) (NN course))
                    (PP (IN of)
                      (S
                        (VP (VBG administering)
                          (NP (DT the) (VBN mandated) (NN business)))))))))))))
    (. .)))

dep(deliver-7, 1-2)
det(mandatary-5, The-4)
nsubj(deliver-7, mandatary-5)
aux(deliver-7, must-6)
root(ROOT-0, deliver-7)
det(monies-11, the-9)
nn(monies-11, mandator-10)
prep_to(deliver-7, monies-11)
amod(Things-14, other-13)
prep_to(deliver-7, Things-14)
conj_and(monies-11, Things-14)
complm(received-18, that-15)
nsubj(received-18, he\/she-16)
aux(received-18, has-17)
ccomp(deliver-7, received-18)
det(course-21, the-20)
prep_during(received-18, course-21)
prepc_of(course-21, administering-23)
det(business-26, the-24)
amod(business-26, mandated-25)
dobj(administering-23, business-26)

The same shall apply to fruits the mandatary has reaped.
(ROOT
  (S
    (NP (DT The) (JJ same))
    (VP (MD shall)
      (VP (VB apply)
        (PP (TO to)
          (NP
            (NP (NNS fruits))
            (SBAR
              (S
                (NP (DT the) (NN mandatary))
                (VP (VBZ has)
                  (VP (VBN reaped)))))))))
    (. .)))

det(same-2, The-1)
nsubj(apply-4, same-2)
aux(apply-4, shall-3)
root(ROOT-0, apply-4)
prep_to(apply-4, fruits-6)
dobj(reaped-10, fruits-6)
det(mandatary-8, the-7)
nsubj(reaped-10, mandatary-8)
aux(reaped-10, has-9)
rcmod(fruits-6, reaped-10)

(2)The mandatary must transfer to the mandator rights the mandatary has acquired in his/her own name on behalf of the mandator.
(ROOT
  (S
    (S
      (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
      (NP (DT The) (NN mandatary))
      (VP (MD must)
        (VP (VB transfer)
          (PP (TO to)
            (NP (DT the) (NN mandator) (NNS rights))))))
    (NP (DT the) (NN mandatary))
    (VP (VBZ has)
      (VP (VBN acquired)
        (PP (IN in)
          (NP
            (NP (NN his\/her) (JJ own) (NN name))
            (PP (IN on)
              (NP
                (NP (NN behalf))
                (PP (IN of)
                  (NP (DT the) (NN mandator)))))))))
    (. .)))

dep(transfer-7, 2-2)
det(mandatary-5, The-4)
nsubj(transfer-7, mandatary-5)
aux(transfer-7, must-6)
dep(acquired-15, transfer-7)
det(rights-11, the-9)
nn(rights-11, mandator-10)
prep_to(transfer-7, rights-11)
det(mandatary-13, the-12)
nsubj(acquired-15, mandatary-13)
aux(acquired-15, has-14)
root(ROOT-0, acquired-15)
nn(name-19, his\/her-17)
amod(name-19, own-18)
prep_in(acquired-15, name-19)
det(mandator-24, the-23)
prep_on_behalf_of(name-19, mandator-24)

</t1>
<t2>
If the  mandatary,  received monies and other Things during the course of administrating the mandated bushiness, the mandatary must immediately deliver them to the mandator.
(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT the) (NN mandatary))
        (, ,)
        (VP (VBD received)
          (NP
            (NP (NNS monies))
            (CC and)
            (NP (JJ other) (NNS Things)))
          (PP (IN during)
            (NP
              (NP (DT the) (NN course))
              (PP (IN of)
                (S
                  (VP (VBG administrating)
                    (NP (DT the) (VBN mandated) (NNS bushiness))))))))))
    (, ,)
    (NP (DT the) (NN mandatary))
    (VP (MD must)
      (ADVP (RB immediately))
      (VP (VB deliver)
        (NP (PRP them))
        (PP (TO to)
          (NP (DT the) (NN mandator)))))
    (. .)))

mark(received-5, If-1)
det(mandatary-3, the-2)
nsubj(received-5, mandatary-3)
advcl(deliver-23, received-5)
dobj(received-5, monies-6)
amod(Things-9, other-8)
dobj(received-5, Things-9)
conj_and(monies-6, Things-9)
det(course-12, the-11)
prep_during(received-5, course-12)
prepc_of(course-12, administrating-14)
det(bushiness-17, the-15)
amod(bushiness-17, mandated-16)
dobj(administrating-14, bushiness-17)
det(mandatary-20, the-19)
nsubj(deliver-23, mandatary-20)
aux(deliver-23, must-21)
advmod(deliver-23, immediately-22)
root(ROOT-0, deliver-23)
dobj(deliver-23, them-24)
det(mandator-27, the-26)
prep_to(deliver-23, mandator-27)

</t2>
</pair>
<pair id="H22-26-E" label="Y">
<t1>
(Mandatary's Claims for Reimbursement of Expense)Article 650
(1)If the mandatary has incurred costs found to be necessary for the administration of the mandated business, the mandatary may claim reimbursement of those costs from the mandator and any interest on the same from the day the costs were incurred.
(ROOT
  (S
    (S
      (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
      (SBAR (IN If)
        (S
          (NP (DT the) (NN mandatary))
          (VP (VBZ has)
            (VP (VBN incurred)
              (NP
                (NP (NNS costs))
                (VP (VBN found)
                  (S
                    (VP (TO to)
                      (VP (VB be)
                        (ADJP (JJ necessary)
                          (PP (IN for)
                            (NP
                              (NP (DT the) (NN administration))
                              (PP (IN of)
                                (NP (DT the) (VBN mandated) (NN business)))))))))))))))
      (, ,)
      (NP (DT the) (NN mandatary))
      (VP (MD may)
        (VP (VB claim)
          (NP
            (NP (NN reimbursement))
            (PP (IN of)
              (NP (DT those) (NNS costs))))
          (PP (IN from)
            (NP
              (NP (DT the) (NN mandator))
              (CC and)
              (NP (DT any) (NN interest))))
          (PP (IN on)
            (NP
              (NP (DT the) (JJ same))
              (PP (IN from)
                (NP (DT the) (NN day))))))))
    (NP (DT the) (NNS costs))
    (VP (VBD were)
      (VP (VBN incurred)))
    (. .)))

dep(claim-25, 1-2)
mark(incurred-8, If-4)
det(mandatary-6, the-5)
nsubj(incurred-8, mandatary-6)
aux(incurred-8, has-7)
advcl(claim-25, incurred-8)
dobj(incurred-8, costs-9)
xsubj(necessary-13, costs-9)
partmod(costs-9, found-10)
aux(necessary-13, to-11)
cop(necessary-13, be-12)
xcomp(found-10, necessary-13)
det(administration-16, the-15)
prep_for(necessary-13, administration-16)
det(business-20, the-18)
amod(business-20, mandated-19)
prep_of(administration-16, business-20)
det(mandatary-23, the-22)
nsubj(claim-25, mandatary-23)
aux(claim-25, may-24)
dep(incurred-45, claim-25)
dobj(claim-25, reimbursement-26)
det(costs-29, those-28)
prep_of(reimbursement-26, costs-29)
det(mandator-32, the-31)
prep_from(claim-25, mandator-32)
det(interest-35, any-34)
prep_from(claim-25, interest-35)
conj_and(mandator-32, interest-35)
det(same-38, the-37)
prep_on(claim-25, same-38)
det(day-41, the-40)
prep_from(same-38, day-41)
det(costs-43, the-42)
nsubjpass(incurred-45, costs-43)
auxpass(incurred-45, were-44)
root(ROOT-0, incurred-45)

(2)If the mandatary has incurred any obligation found to be necessary for the administration of the mandated business, the mandatary may demand that the mandator perform the obligation on the mandatary's behalf.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
    (SBAR (IN If)
      (S
        (NP (DT the) (NN mandatary))
        (VP (VBZ has)
          (VP (VBN incurred)
            (NP
              (NP (DT any) (NN obligation))
              (VP (VBN found)
                (S
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (JJ necessary)
                        (PP (IN for)
                          (NP
                            (NP (DT the) (NN administration))
                            (PP (IN of)
                              (NP (DT the) (VBN mandated) (NN business)))))))))))))))
    (, ,)
    (NP (DT the) (NN mandatary))
    (VP (MD may)
      (VP (VB demand)
        (SBAR (IN that)
          (S
            (NP (DT the) (NN mandator))
            (VP (VBP perform)
              (NP
                (NP (DT the) (NN obligation))
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN mandatary) (POS 's))
                    (NN behalf)))))))))
    (. .)))

dep(demand-26, 2-2)
mark(incurred-8, If-4)
det(mandatary-6, the-5)
nsubj(incurred-8, mandatary-6)
aux(incurred-8, has-7)
advcl(demand-26, incurred-8)
det(obligation-10, any-9)
dobj(incurred-8, obligation-10)
xsubj(necessary-14, obligation-10)
partmod(obligation-10, found-11)
aux(necessary-14, to-12)
cop(necessary-14, be-13)
xcomp(found-11, necessary-14)
det(administration-17, the-16)
prep_for(necessary-14, administration-17)
det(business-21, the-19)
amod(business-21, mandated-20)
prep_of(administration-17, business-21)
det(mandatary-24, the-23)
nsubj(demand-26, mandatary-24)
aux(demand-26, may-25)
root(ROOT-0, demand-26)
complm(perform-30, that-27)
det(mandator-29, the-28)
nsubj(perform-30, mandator-29)
ccomp(demand-26, perform-30)
det(obligation-32, the-31)
dobj(perform-30, obligation-32)
det(mandatary-35, the-34)
poss(behalf-37, mandatary-35)
prep_on(obligation-32, behalf-37)

In such cases, if the obligation has not yet fallen due, the mandatary may require the mandator to tender reasonable security.
(ROOT
  (S
    (PP (IN In)
      (NP (JJ such) (NNS cases)))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (DT the) (NN obligation))
        (VP (VBZ has) (RB not)
          (ADVP (RB yet))
          (VP (VBN fallen)
            (S
              (ADJP (JJ due)))))))
    (, ,)
    (NP (DT the) (NN mandatary))
    (VP (MD may)
      (VP (VB require)
        (NP (DT the) (NN mandator)
          (S
            (VP (TO to)
              (VP (VB tender)
                (NP (JJ reasonable) (NN security))))))))
    (. .)))

amod(cases-3, such-2)
prep_in(require-17, cases-3)
mark(fallen-11, if-5)
det(obligation-7, the-6)
nsubj(fallen-11, obligation-7)
aux(fallen-11, has-8)
neg(fallen-11, not-9)
advmod(fallen-11, yet-10)
advcl(require-17, fallen-11)
acomp(fallen-11, due-12)
det(mandatary-15, the-14)
nsubj(require-17, mandatary-15)
aux(require-17, may-16)
root(ROOT-0, require-17)
det(mandator-19, the-18)
dobj(require-17, mandator-19)
aux(tender-21, to-20)
infmod(mandator-19, tender-21)
amod(security-23, reasonable-22)
dobj(tender-21, security-23)

(3)If the mandatary suffers any loss due to the administration of the mandated business without negligence in the mandatary, he/she may claim compensation for the loss from the mandator.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 3) (-RRB- -RRB-))
    (SBAR (IN If)
      (S
        (NP (DT the) (NN mandatary))
        (VP (VBZ suffers)
          (S
            (NP (DT any) (NN loss))
            (ADJP (JJ due)
              (PP (TO to)
                (NP
                  (NP (DT the) (NN administration))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (VBN mandated) (NN business))
                      (PP (IN without)
                        (NP
                          (NP (NN negligence))
                          (PP (IN in)
                            (NP (DT the) (NN mandatary))))))))))))))
    (, ,)
    (NP (NN he\/she))
    (VP (MD may)
      (VP (VB claim)
        (NP (NN compensation))
        (PP (IN for)
          (NP
            (NP (DT the) (NN loss))
            (PP (IN from)
              (NP (DT the) (NN mandator)))))))
    (. .)))

dep(claim-26, 3-2)
mark(suffers-7, If-4)
det(mandatary-6, the-5)
nsubj(suffers-7, mandatary-6)
advcl(claim-26, suffers-7)
det(loss-9, any-8)
nsubj(due-10, loss-9)
xcomp(suffers-7, due-10)
det(administration-13, the-12)
prep_to(due-10, administration-13)
det(business-17, the-15)
amod(business-17, mandated-16)
prep_of(administration-13, business-17)
prep_without(business-17, negligence-19)
det(mandatary-22, the-21)
prep_in(negligence-19, mandatary-22)
nsubj(claim-26, he\/she-24)
aux(claim-26, may-25)
root(ROOT-0, claim-26)
dobj(claim-26, compensation-27)
det(loss-30, the-29)
prep_for(claim-26, loss-30)
det(mandator-33, the-32)
prep_from(loss-30, mandator-33)

</t1>
<t2>
Even in cases where costs, incurred by a mandatary in order to administrate the  mandated business with the care of a good manager, are later deemed as a result not to be necessary, the mandatary can demand reimbursement of those fees to the mandator.
(ROOT
  (S
    (PP (RB Even) (IN in)
      (NP
        (NP (NNS cases))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP
              (NP (NNS costs))
              (, ,)
              (VP (VBN incurred)
                (PP (IN by)
                  (NP
                    (NP (DT a) (NN mandatary))
                    (PP (IN in)
                      (NP (NN order)))))
                (S
                  (VP (TO to)
                    (VP (VB administrate)
                      (NP (DT the) (VBN mandated) (NN business))
                      (PP (IN with)
                        (NP
                          (NP (DT the) (NN care))
                          (PP (IN of)
                            (NP (DT a) (JJ good) (NN manager)))))))))
              (, ,))
            (VP (VBP are)
              (ADVP (RB later))
              (VP (VBN deemed)
                (PP (IN as)
                  (NP (DT a) (NN result)))
                (S (RB not)
                  (VP (TO to)
                    (VP (VB be)
                      (ADJP (JJ necessary)))))))))))
    (, ,)
    (NP (DT the) (NN mandatary))
    (VP (MD can)
      (VP (VB demand)
        (NP
          (NP (NN reimbursement))
          (PP (IN of)
            (NP (DT those) (NNS fees))))
        (PP (TO to)
          (NP (DT the) (NN mandator)))))
    (. .)))

advmod(demand-40, Even-1)
advcl(demand-40, in-2)
prep_in(demand-40, cases-3)
advmod(deemed-28, where-4)
xsubj(administrate-14, costs-5)
nsubjpass(deemed-28, costs-5)
xsubj(necessary-35, costs-5)
partmod(costs-5, incurred-7)
det(mandatary-10, a-9)
agent(incurred-7, mandatary-10)
prep_in(mandatary-10, order-12)
aux(administrate-14, to-13)
xcomp(incurred-7, administrate-14)
det(business-17, the-15)
amod(business-17, mandated-16)
dobj(administrate-14, business-17)
det(care-20, the-19)
prep_with(administrate-14, care-20)
det(manager-24, a-22)
amod(manager-24, good-23)
prep_of(care-20, manager-24)
auxpass(deemed-28, are-26)
advmod(deemed-28, later-27)
rcmod(cases-3, deemed-28)
det(result-31, a-30)
prep_as(deemed-28, result-31)
neg(necessary-35, not-32)
aux(necessary-35, to-33)
cop(necessary-35, be-34)
xcomp(deemed-28, necessary-35)
det(mandatary-38, the-37)
nsubj(demand-40, mandatary-38)
aux(demand-40, can-39)
root(ROOT-0, demand-40)
dobj(demand-40, reimbursement-41)
det(fees-44, those-43)
prep_of(reimbursement-41, fees-44)
det(mandator-47, the-46)
prep_to(demand-40, mandator-47)

</t2>
</pair>
<pair id="H22-27-1" label="N">
<t1>
(Sale)Article 555
A sale shall become effective when one of the parties promises to transfer a certain real rights to the other party and the other party promises to pay the purchase money for it.
(ROOT
  (S
    (NP (DT A) (NN sale))
    (VP (MD shall)
      (VP (VB become)
        (ADJP (JJ effective))
        (SBAR
          (WHADVP (WRB when))
          (S
            (S
              (NP
                (NP (CD one))
                (PP (IN of)
                  (NP (DT the) (NNS parties))))
              (VP (VBZ promises)
                (S
                  (VP (TO to)
                    (VP (VB transfer)
                      (NP (DT a) (JJ certain) (JJ real) (NNS rights))
                      (PP (TO to)
                        (NP (DT the) (JJ other) (NN party))))))))
            (CC and)
            (S
              (NP (DT the) (JJ other) (NN party))
              (VP (VBZ promises)
                (S
                  (VP (TO to)
                    (VP (VB pay)
                      (NP (DT the) (NN purchase) (NN money))
                      (PP (IN for)
                        (NP (PRP it))))))))))))
    (. .)))

det(sale-2, A-1)
nsubj(effective-5, sale-2)
aux(effective-5, shall-3)
cop(effective-5, become-4)
root(ROOT-0, effective-5)
advmod(promises-11, when-6)
nsubj(promises-11, one-7)
xsubj(transfer-13, one-7)
det(parties-10, the-9)
prep_of(one-7, parties-10)
advcl(effective-5, promises-11)
aux(transfer-13, to-12)
xcomp(promises-11, transfer-13)
det(rights-17, a-14)
amod(rights-17, certain-15)
amod(rights-17, real-16)
dobj(transfer-13, rights-17)
det(party-21, the-19)
amod(party-21, other-20)
prep_to(transfer-13, party-21)
det(party-25, the-23)
amod(party-25, other-24)
nsubj(promises-26, party-25)
xsubj(pay-28, party-25)
advcl(effective-5, promises-26)
conj_and(promises-11, promises-26)
aux(pay-28, to-27)
xcomp(promises-26, pay-28)
det(money-31, the-29)
nn(money-31, purchase-30)
dobj(pay-28, money-31)
prep_for(pay-28, it-33)

</t1>
<t2>
In a lawsuit demanding the payment of purchase money based on a contract of sale of real property, proof must be demonstrated with objects of the claim of the conclusion of the contract of the sale and the determination of the time of performance of the monetary claim.
(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT a) (NN lawsuit))
        (VP (VBG demanding)
          (NP
            (NP (DT the) (NN payment))
            (PP (IN of)
              (NP (NN purchase) (NN money))))
          (PP (VBN based)
            (PP (IN on)
              (NP
                (NP (DT a) (NN contract))
                (PP (IN of)
                  (NP
                    (NP (NN sale))
                    (PP (IN of)
                      (NP (JJ real) (NN property)))))))))))
    (, ,)
    (NP (NN proof))
    (VP (MD must)
      (VP (VB be)
        (VP (VBN demonstrated)
          (PP (IN with)
            (NP
              (NP (NNS objects))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN claim))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NN conclusion))
                      (PP (IN of)
                        (NP
                          (NP
                            (NP (DT the) (NN contract))
                            (PP (IN of)
                              (NP (DT the) (NN sale))))
                          (CC and)
                          (NP
                            (NP (DT the) (NN determination))
                            (PP (IN of)
                              (NP
                                (NP (DT the) (NN time))
                                (PP (IN of)
                                  (NP
                                    (NP (NN performance))
                                    (PP (IN of)
                                      (NP (DT the) (JJ monetary) (NN claim)))))))))))))))))))
    (. .)))

det(lawsuit-3, a-2)
prep_in(demonstrated-23, lawsuit-3)
partmod(lawsuit-3, demanding-4)
det(payment-6, the-5)
dobj(demanding-4, payment-6)
nn(money-9, purchase-8)
prep_of(payment-6, money-9)
prepc_based_on(demanding-4, on-11)
det(contract-13, a-12)
pobj(demanding-4, contract-13)
prep_of(contract-13, sale-15)
amod(property-18, real-17)
prep_of(sale-15, property-18)
nsubjpass(demonstrated-23, proof-20)
aux(demonstrated-23, must-21)
auxpass(demonstrated-23, be-22)
root(ROOT-0, demonstrated-23)
prep_with(demonstrated-23, objects-25)
det(claim-28, the-27)
prep_of(objects-25, claim-28)
det(conclusion-31, the-30)
prep_of(claim-28, conclusion-31)
det(contract-34, the-33)
prep_of(conclusion-31, contract-34)
det(sale-37, the-36)
prep_of(contract-34, sale-37)
det(determination-40, the-39)
prep_of(conclusion-31, determination-40)
conj_and(contract-34, determination-40)
det(time-43, the-42)
prep_of(determination-40, time-43)
prep_of(time-43, performance-45)
det(claim-49, the-47)
amod(claim-49, monetary-48)
prep_of(performance-45, claim-49)

</t2>
</pair>
<pair id="H22-27-2" label="N">
<t1>
(Sale)Article 555
A sale shall become effective when one of the parties promises to transfer a certain real rights to the other party and the other party promises to pay the purchase money for it.
(ROOT
  (S
    (NP (DT A) (NN sale))
    (VP (MD shall)
      (VP (VB become)
        (ADJP (JJ effective))
        (SBAR
          (WHADVP (WRB when))
          (S
            (S
              (NP
                (NP (CD one))
                (PP (IN of)
                  (NP (DT the) (NNS parties))))
              (VP (VBZ promises)
                (S
                  (VP (TO to)
                    (VP (VB transfer)
                      (NP (DT a) (JJ certain) (JJ real) (NNS rights))
                      (PP (TO to)
                        (NP (DT the) (JJ other) (NN party))))))))
            (CC and)
            (S
              (NP (DT the) (JJ other) (NN party))
              (VP (VBZ promises)
                (S
                  (VP (TO to)
                    (VP (VB pay)
                      (NP (DT the) (NN purchase) (NN money))
                      (PP (IN for)
                        (NP (PRP it))))))))))))
    (. .)))

det(sale-2, A-1)
nsubj(effective-5, sale-2)
aux(effective-5, shall-3)
cop(effective-5, become-4)
root(ROOT-0, effective-5)
advmod(promises-11, when-6)
nsubj(promises-11, one-7)
xsubj(transfer-13, one-7)
det(parties-10, the-9)
prep_of(one-7, parties-10)
advcl(effective-5, promises-11)
aux(transfer-13, to-12)
xcomp(promises-11, transfer-13)
det(rights-17, a-14)
amod(rights-17, certain-15)
amod(rights-17, real-16)
dobj(transfer-13, rights-17)
det(party-21, the-19)
amod(party-21, other-20)
prep_to(transfer-13, party-21)
det(party-25, the-23)
amod(party-25, other-24)
nsubj(promises-26, party-25)
xsubj(pay-28, party-25)
advcl(effective-5, promises-26)
conj_and(promises-11, promises-26)
aux(pay-28, to-27)
xcomp(promises-26, pay-28)
det(money-31, the-29)
nn(money-31, purchase-30)
dobj(pay-28, money-31)
prep_for(pay-28, it-33)

</t1>
<t2>
In a lawsuit demanding the delivery of a subject matter based on a contract of sale of real property, proof must be demonstrated with objects of the claim that the contract of sale was concluded and the ownership of the subject matter was attributed to the seller at the time of the conclusion of the contract.
(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT a) (NN lawsuit))
        (VP (VBG demanding)
          (NP
            (NP (DT the) (NN delivery))
            (PP (IN of)
              (NP (DT a) (NN subject) (NN matter))))
          (PP (VBN based)
            (PP (IN on)
              (NP
                (NP (DT a) (NN contract))
                (PP (IN of)
                  (NP
                    (NP (NN sale))
                    (PP (IN of)
                      (NP (JJ real) (NN property)))))))))))
    (, ,)
    (NP (NN proof))
    (VP (MD must)
      (VP (VB be)
        (VP (VBN demonstrated)
          (PP (IN with)
            (NP
              (NP (NNS objects))
              (PP (IN of)
                (NP (DT the) (NN claim)))))
          (SBAR (IN that)
            (S
              (S
                (NP
                  (NP (DT the) (NN contract))
                  (PP (IN of)
                    (NP (NN sale))))
                (VP (VBD was)
                  (VP (VBN concluded))))
              (CC and)
              (S
                (NP
                  (NP (DT the) (NN ownership))
                  (PP (IN of)
                    (NP (DT the) (NN subject) (NN matter))))
                (VP (VBD was)
                  (VP (VBN attributed)
                    (PP (TO to)
                      (NP (DT the) (NN seller)))
                    (PP (IN at)
                      (NP
                        (NP (DT the) (NN time))
                        (PP (IN of)
                          (NP
                            (NP (DT the) (NN conclusion))
                            (PP (IN of)
                              (NP (DT the) (NN contract)))))))))))))))
    (. .)))

det(lawsuit-3, a-2)
prep_in(demonstrated-24, lawsuit-3)
partmod(lawsuit-3, demanding-4)
det(delivery-6, the-5)
dobj(demanding-4, delivery-6)
det(matter-10, a-8)
nn(matter-10, subject-9)
prep_of(delivery-6, matter-10)
prepc_based_on(demanding-4, on-12)
det(contract-14, a-13)
pobj(demanding-4, contract-14)
prep_of(contract-14, sale-16)
amod(property-19, real-18)
prep_of(sale-16, property-19)
nsubjpass(demonstrated-24, proof-21)
aux(demonstrated-24, must-22)
auxpass(demonstrated-24, be-23)
root(ROOT-0, demonstrated-24)
prep_with(demonstrated-24, objects-26)
det(claim-29, the-28)
prep_of(objects-26, claim-29)
complm(concluded-36, that-30)
det(contract-32, the-31)
nsubjpass(concluded-36, contract-32)
prep_of(contract-32, sale-34)
auxpass(concluded-36, was-35)
ccomp(demonstrated-24, concluded-36)
det(ownership-39, the-38)
nsubjpass(attributed-45, ownership-39)
det(matter-43, the-41)
nn(matter-43, subject-42)
prep_of(ownership-39, matter-43)
auxpass(attributed-45, was-44)
ccomp(demonstrated-24, attributed-45)
conj_and(concluded-36, attributed-45)
det(seller-48, the-47)
prep_to(attributed-45, seller-48)
det(time-51, the-50)
prep_at(attributed-45, time-51)
det(conclusion-54, the-53)
prep_of(time-51, conclusion-54)
det(contract-57, the-56)
prep_of(conclusion-54, contract-57)

</t2>
</pair>
<pair id="H22-27-3" label="Y">
<t1>
(Offers to Terminate Leases with Indefinite Terms)Article 617
(1)If the parties do not specify the term of a lease, either party may request to terminate it at any time.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
    (SBAR (IN If)
      (S
        (NP (DT the) (NNS parties))
        (VP (VBP do) (RB not)
          (VP (VB specify)
            (NP
              (NP (DT the) (NN term))
              (PP (IN of)
                (NP (DT a) (NN lease))))))))
    (, ,)
    (NP (DT either) (NN party))
    (VP (MD may)
      (VP (VB request)
        (S
          (VP (TO to)
            (VP (VB terminate)
              (NP (PRP it))
              (PP (IN at)
                (NP (DT any) (NN time))))))))
    (. .)))

dep(request-19, 1-2)
mark(specify-9, If-4)
det(parties-6, the-5)
nsubj(specify-9, parties-6)
aux(specify-9, do-7)
neg(specify-9, not-8)
advcl(request-19, specify-9)
det(term-11, the-10)
dobj(specify-9, term-11)
det(lease-14, a-13)
prep_of(term-11, lease-14)
det(party-17, either-16)
nsubj(request-19, party-17)
xsubj(terminate-21, party-17)
aux(request-19, may-18)
root(ROOT-0, request-19)
aux(terminate-21, to-20)
xcomp(request-19, terminate-21)
dobj(terminate-21, it-22)
det(time-25, any-24)
prep_at(terminate-21, time-25)

In such cases, the leases listed in the following items shall terminate on the expiration of the respective periods from the day of the request to terminate prescribed respectively in those items:(i)Leases of land: one year;(ii)Leases of buildings: three months; and(iii)Leases of movables and seating hire facilities: one day.
(ROOT
  (S
    (PP (IN In)
      (NP (JJ such) (NNS cases)))
    (, ,)
    (NP
      (NP (DT the) (NNS leases))
      (VP (VBN listed)
        (PP (IN in)
          (NP (DT the) (VBG following) (NNS items)))))
    (VP (MD shall)
      (VP (VB terminate)
        (PP (IN on)
          (NP
            (NP (DT the) (NN expiration))
            (PP (IN of)
              (NP (DT the) (JJ respective) (NNS periods)))))
        (PP (IN from)
          (NP
            (NP (DT the) (NN day))
            (PP (IN of)
              (NP (DT the) (NN request)
                (S
                  (VP (TO to)
                    (VP (VB terminate)
                      (VP (VBN prescribed)
                        (ADVP (RB respectively))
                        (PP (IN in)
                          (NP
                            (NP (DT those) (NNS items))
                            (: :)
                            (NP
                              (NP
                                (PRN (-LRB- -LRB-)
                                  (NP (NNP i))
                                  (-RRB- -RRB-))
                                (NNS Leases))
                              (PP (IN of)
                                (NP (NN land))))
                            (: :)
                            (NP (CD one) (NN year))
                            (: ;)
                            (NP
                              (NP
                                (PRN (-LRB- -LRB-)
                                  (NP (NN ii))
                                  (-RRB- -RRB-))
                                (NNS Leases))
                              (PP (IN of)
                                (NP (NNS buildings))))
                            (: :)
                            (NP (CD three) (NNS months))
                            (: ;)
                            (CC and)
                            (PRN (-LRB- -LRB-)
                              (NP (NN iii))
                              (-RRB- -RRB-))
                            (NP
                              (NP
                                (NP (NNP Leases))
                                (PP (IN of)
                                  (NP (NN movables)
                                    (CC and)
                                    (NN seating) (NN hire) (NNS facilities))))
                              (: :)
                              (NP (CD one) (NN day)))))))))))))))
    (. .)))

amod(cases-3, such-2)
prep_in(terminate-13, cases-3)
det(leases-6, the-5)
nsubj(terminate-13, leases-6)
partmod(leases-6, listed-7)
det(items-11, the-9)
amod(items-11, following-10)
prep_in(listed-7, items-11)
aux(terminate-13, shall-12)
root(ROOT-0, terminate-13)
det(expiration-16, the-15)
prep_on(terminate-13, expiration-16)
det(periods-20, the-18)
amod(periods-20, respective-19)
prep_of(expiration-16, periods-20)
det(day-23, the-22)
prep_from(terminate-13, day-23)
det(request-26, the-25)
prep_of(day-23, request-26)
aux(terminate-28, to-27)
infmod(request-26, terminate-28)
dep(terminate-28, prescribed-29)
advmod(prescribed-29, respectively-30)
det(items-33, those-32)
prep_in(prescribed-29, items-33)
appos(Leases-38, i-36)
prep_in(prescribed-29, Leases-38)
conj_and(items-33, Leases-38)
prep_of(Leases-38, land-40)
num(year-43, one-42)
prep_in(prescribed-29, year-43)
conj_and(items-33, year-43)
appos(Leases-48, ii-46)
prep_in(prescribed-29, Leases-48)
conj_and(items-33, Leases-48)
prep_of(Leases-48, buildings-50)
num(months-53, three-52)
prep_in(prescribed-29, months-53)
conj_and(items-33, months-53)
appos(items-33, iii-57)
prep_in(prescribed-29, Leases-59)
conj_and(items-33, Leases-59)
nn(facilities-65, movables-61)
conj_and(movables-61, seating-63)
nn(facilities-65, seating-63)
nn(facilities-65, hire-64)
prep_of(Leases-59, facilities-65)
num(day-68, one-67)
dep(Leases-59, day-68)

(2)With respect to leases of land with harvest seasons, the request to terminate must be made after the end of that season and before the next start of cultivation.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
    (PP (IN With)
      (NP
        (NP (NN respect))
        (PP (TO to)
          (NP
            (NP (NNS leases))
            (PP (IN of)
              (NP
                (NP (NN land))
                (PP (IN with)
                  (NP (NN harvest) (NNS seasons)))))))))
    (, ,)
    (NP (DT the) (NN request)
      (S
        (VP (TO to)
          (VP (VB terminate)))))
    (VP (MD must)
      (VP (VB be)
        (VP (VBN made)
          (PP
            (PP (IN after)
              (NP
                (NP (DT the) (NN end))
                (PP (IN of)
                  (NP (DT that) (NN season)))))
            (CC and)
            (PP (IN before)
              (NP
                (NP (DT the) (JJ next) (NN start))
                (PP (IN of)
                  (NP (NN cultivation)))))))))
    (. .)))

dep(made-20, 2-2)
prep_with_respect_to(made-20, leases-7)
prep_of(leases-7, land-9)
nn(seasons-12, harvest-11)
prep_with(land-9, seasons-12)
det(request-15, the-14)
nsubjpass(made-20, request-15)
nsubjpass(made-20', request-15)
aux(terminate-17, to-16)
infmod(request-15, terminate-17)
aux(made-20, must-18)
auxpass(made-20, be-19)
root(ROOT-0, made-20)
conj_and(made-20, made-20')
det(end-23, the-22)
prep_after(made-20, end-23)
det(season-26, that-25)
prep_of(end-23, season-26)
det(start-31, the-29)
amod(start-31, next-30)
prep_before(made-20', start-31)
prep_of(start-31, cultivation-33)

(Reservation of Rights to Terminate Leases with Definite Terms)Article 618
Even if the parties specify the term of a lease, the provisions of the preceding Article shall apply mutatis mutandis if one party reserves, or both parties reserve, the right to terminate during that period.
(ROOT
  (S
    (SBAR (RB Even) (IN if)
      (S
        (NP (DT the) (NNS parties))
        (VP (VB specify)
          (NP
            (NP (DT the) (NN term))
            (PP (IN of)
              (NP (DT a) (NN lease)))))))
    (, ,)
    (NP
      (NP (DT the) (NNS provisions))
      (PP (IN of)
        (NP (DT the) (VBG preceding) (NN Article))))
    (VP (MD shall)
      (VP (VB apply)
        (NP (JJ mutatis) (NNS mutandis))
        (SBAR (IN if)
          (S
            (NP
              (NP (CD one) (NN party) (NNS reserves))
              (, ,)
              (CC or)
              (NP
                (NP (DT both) (NNS parties) (NN reserve))
                (, ,)
                (NP (DT the) (NN right))))
            (VP (TO to)
              (VP (VB terminate)
                (PP (IN during)
                  (NP (DT that) (NN period)))))))))
    (. .)))

advmod(specify-5, Even-1)
dep(specify-5, if-2)
det(parties-4, the-3)
nsubj(specify-5, parties-4)
advcl(apply-19, specify-5)
det(term-7, the-6)
dobj(specify-5, term-7)
det(lease-10, a-9)
prep_of(term-7, lease-10)
det(provisions-13, the-12)
nsubj(apply-19, provisions-13)
det(Article-17, the-15)
amod(Article-17, preceding-16)
prep_of(provisions-13, Article-17)
aux(apply-19, shall-18)
root(ROOT-0, apply-19)
amod(mutandis-21, mutatis-20)
dobj(apply-19, mutandis-21)
mark(terminate-35, if-22)
num(reserves-25, one-23)
nn(reserves-25, party-24)
nsubj(terminate-35, reserves-25)
det(reserve-30, both-28)
nn(reserve-30, parties-29)
conj_or(reserves-25, reserve-30)
nsubj(terminate-35, reserve-30)
det(right-33, the-32)
appos(reserve-30, right-33)
aux(terminate-35, to-34)
advcl(apply-19, terminate-35)
xcomp(apply-19, terminate-35)
det(period-38, that-37)
prep_during(terminate-35, period-38)

(Presumption of Renewal of Leases)Article 619
(1)In cases where a lessee continues to make use or take the profits of the Thing after the expiration of the term of the lease, if a lessor who knows of the same raises no objection, it shall be presumed that a further lease is entered into under conditions identical to those of the previous lease.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
    (PP (IN In)
      (NP
        (NP (NNS cases))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (DT a) (NN lessee))
            (VP (VBZ continues)
              (S
                (VP (TO to)
                  (VP
                    (VP (VB make)
                      (NP (NN use)))
                    (CC or)
                    (VP (VB take)
                      (NP
                        (NP (DT the) (NNS profits))
                        (PP (IN of)
                          (NP (DT the) (NN Thing))))
                      (PP (IN after)
                        (NP
                          (NP (DT the) (NN expiration))
                          (PP (IN of)
                            (NP
                              (NP (DT the) (NN term))
                              (PP (IN of)
                                (NP (DT the) (NN lease)))))))
                      (, ,)
                      (SBAR (IN if)
                        (S
                          (NP
                            (NP (DT a) (NN lessor))
                            (SBAR
                              (WHNP (WP who))
                              (S
                                (VP (VBZ knows)
                                  (PP (IN of)
                                    (NP (DT the) (JJ same)))))))
                          (VP (VBZ raises)
                            (NP (DT no) (NN objection))))))))))))))
    (, ,)
    (NP (PRP it))
    (VP (MD shall)
      (VP (VB be)
        (VP (VBN presumed)
          (SBAR (IN that)
            (S
              (NP (DT a) (JJ further) (NN lease))
              (VP (VBZ is)
                (VP (VBN entered)
                  (PP (IN into) (IN under)
                    (NP
                      (NP (NNS conditions))
                      (ADJP (JJ identical)
                        (PP (TO to)
                          (NP
                            (NP (DT those))
                            (PP (IN of)
                              (NP (DT the) (JJ previous) (NN lease)))))))))))))))
    (. .)))

dep(presumed-45, 1-2)
prep_in(presumed-45, cases-5)
advmod(continues-9, where-6)
det(lessee-8, a-7)
nsubj(continues-9, lessee-8)
xsubj(make-11, lessee-8)
rcmod(cases-5, continues-9)
aux(make-11, to-10)
xcomp(continues-9, make-11)
dobj(make-11, use-12)
xcomp(continues-9, take-14)
conj_or(make-11, take-14)
det(profits-16, the-15)
dobj(take-14, profits-16)
det(Thing-19, the-18)
prep_of(profits-16, Thing-19)
det(expiration-22, the-21)
prep_after(take-14, expiration-22)
det(term-25, the-24)
prep_of(expiration-22, term-25)
det(lease-28, the-27)
prep_of(term-25, lease-28)
mark(raises-38, if-30)
det(lessor-32, a-31)
nsubj(knows-34, lessor-32)
nsubj(raises-38, lessor-32)
rcmod(lessor-32, knows-34)
det(same-37, the-36)
prep_of(knows-34, same-37)
advcl(take-14, raises-38)
det(objection-40, no-39)
dobj(raises-38, objection-40)
nsubjpass(presumed-45, it-42)
aux(presumed-45, shall-43)
auxpass(presumed-45, be-44)
root(ROOT-0, presumed-45)
complm(entered-51, that-46)
det(lease-49, a-47)
amod(lease-49, further-48)
nsubjpass(entered-51, lease-49)
auxpass(entered-51, is-50)
ccomp(presumed-45, entered-51)
dep(entered-51, into-52)
prep_under(entered-51, conditions-54)
amod(conditions-54, identical-55)
prep_to(identical-55, those-57)
det(lease-61, the-59)
amod(lease-61, previous-60)
prep_of(those-57, lease-61)

In such cases, each party may request to terminate in accordance with the provisions of Article 617.
(ROOT
  (S
    (PP (IN In)
      (NP (JJ such) (NNS cases)))
    (, ,)
    (NP (DT each) (NN party))
    (VP (MD may)
      (VP (VB request)
        (S
          (VP (TO to)
            (VP (VB terminate)
              (PP (IN in)
                (NP (NN accordance)))
              (PP (IN with)
                (NP
                  (NP (DT the) (NNS provisions))
                  (PP (IN of)
                    (NP (NNP Article) (NNP 617))))))))))
    (. .)))

amod(cases-3, such-2)
prep_in(request-8, cases-3)
det(party-6, each-5)
nsubj(request-8, party-6)
xsubj(terminate-10, party-6)
aux(request-8, may-7)
root(ROOT-0, request-8)
aux(terminate-10, to-9)
xcomp(request-8, terminate-10)
prep_in(terminate-10, accordance-12)
det(provisions-15, the-14)
prep_with(terminate-10, provisions-15)
nn(617-18, Article-17)
prep_of(provisions-15, 617-18)

(2)If one of the parties has provided security for the previous lease, the security shall be extinguished upon expiration of the term;provided, however, that this shall not apply to a security deposit.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
    (SBAR (IN If)
      (S
        (NP
          (NP (CD one))
          (PP (IN of)
            (NP (DT the) (NNS parties))))
        (VP (VBZ has)
          (VP (VBN provided)
            (NP
              (NP (NN security))
              (PP (IN for)
                (NP (DT the) (JJ previous) (NN lease))))))))
    (, ,)
    (NP (DT the) (NN security))
    (VP (MD shall)
      (VP (VB be)
        (VP (VBN extinguished)
          (PP (IN upon)
            (NP
              (NP (NN expiration))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN term))
                  (: ;)
                  (VP (VBN provided) (, ,)
                    (ADVP (RB however))
                    (, ,)
                    (SBAR (IN that)
                      (S
                        (NP (DT this))
                        (VP (MD shall) (RB not)
                          (VP (VB apply)
                            (PP (TO to)
                              (NP (DT a) (NN security) (NN deposit)))))))))))))))
    (. .)))

dep(extinguished-21, 2-2)
mark(provided-10, If-4)
nsubj(provided-10, one-5)
det(parties-8, the-7)
prep_of(one-5, parties-8)
aux(provided-10, has-9)
advcl(extinguished-21, provided-10)
dobj(provided-10, security-11)
det(lease-15, the-13)
amod(lease-15, previous-14)
prep_for(security-11, lease-15)
det(security-18, the-17)
nsubjpass(extinguished-21, security-18)
aux(extinguished-21, shall-19)
auxpass(extinguished-21, be-20)
root(ROOT-0, extinguished-21)
prep_upon(extinguished-21, expiration-23)
det(term-26, the-25)
prep_of(expiration-23, term-26)
partmod(term-26, provided-28)
advmod(provided-28, however-30)
complm(apply-36, that-32)
nsubj(apply-36, this-33)
aux(apply-36, shall-34)
neg(apply-36, not-35)
ccomp(provided-28, apply-36)
det(deposit-40, a-38)
nn(deposit-40, security-39)
prep_to(apply-36, deposit-40)

</t1>
<t2>
In a lawsuit demanding the return of a subject matter based on the completion of a lease contract of movables, proof must be demonstrated with objects of the claim of the conclusion of the lease contract, the delivery of the subject matter based on the contract, and the facts that prove the completion of the lease contract.
(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT a) (NN lawsuit))
        (VP (VBG demanding)
          (NP
            (NP (DT the) (NN return))
            (PP (IN of)
              (NP (DT a) (NN subject) (NN matter))))
          (PP (VBN based)
            (PP (IN on)
              (NP
                (NP (DT the) (NN completion))
                (PP (IN of)
                  (NP
                    (NP (DT a) (NN lease) (NN contract))
                    (PP (IN of)
                      (NP (NNS movables)))))))))))
    (, ,)
    (NP (NN proof))
    (VP (MD must)
      (VP (VB be)
        (VP (VBN demonstrated)
          (PP (IN with)
            (NP
              (NP
                (NP (NNS objects))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN claim))
                    (PP (IN of)
                      (NP
                        (NP (DT the) (NN conclusion))
                        (PP (IN of)
                          (NP (DT the) (NN lease) (NN contract))))))))
              (, ,)
              (NP
                (NP (DT the) (NN delivery))
                (PP (IN of)
                  (NP
                    (NP (DT the) (NN subject) (NN matter))
                    (VP (VBN based)
                      (PP (IN on)
                        (NP (DT the) (NN contract)))))))
              (, ,)
              (CC and)
              (NP
                (NP (DT the) (NNS facts))
                (SBAR
                  (WHNP (WDT that))
                  (S
                    (VP (VBP prove)
                      (NP
                        (NP (DT the) (NN completion))
                        (PP (IN of)
                          (NP (DT the) (NN lease) (NN contract)))))))))))))
    (. .)))

det(lawsuit-3, a-2)
prep_in(demonstrated-25, lawsuit-3)
partmod(lawsuit-3, demanding-4)
det(return-6, the-5)
dobj(demanding-4, return-6)
det(matter-10, a-8)
nn(matter-10, subject-9)
prep_of(return-6, matter-10)
prep(demanding-4, based-11)
pcomp(based-11, on-12)
det(completion-14, the-13)
prep_on(based-11, completion-14)
det(contract-18, a-16)
nn(contract-18, lease-17)
prep_of(completion-14, contract-18)
prep_of(contract-18, movables-20)
nsubjpass(demonstrated-25, proof-22)
aux(demonstrated-25, must-23)
auxpass(demonstrated-25, be-24)
root(ROOT-0, demonstrated-25)
prep_with(demonstrated-25, objects-27)
det(claim-30, the-29)
prep_of(objects-27, claim-30)
det(conclusion-33, the-32)
prep_of(claim-30, conclusion-33)
det(contract-37, the-35)
nn(contract-37, lease-36)
prep_of(conclusion-33, contract-37)
det(delivery-40, the-39)
prep_with(demonstrated-25, delivery-40)
conj_and(objects-27, delivery-40)
det(matter-44, the-42)
nn(matter-44, subject-43)
prep_of(delivery-40, matter-44)
partmod(matter-44, based-45)
det(contract-48, the-47)
prep_on(based-45, contract-48)
det(facts-52, the-51)
prep_with(demonstrated-25, facts-52)
conj_and(objects-27, facts-52)
nsubj(prove-54, facts-52)
rcmod(facts-52, prove-54)
det(completion-56, the-55)
dobj(prove-54, completion-56)
det(contract-60, the-58)
nn(contract-60, lease-59)
prep_of(completion-56, contract-60)

</t2>
</pair>
<pair id="H22-27-4" label="N">
<t1>
(Mandatary's Claims for Advance for Costs)Article 649
If costs will be incurred in administering the mandated business, the mandator must, at the request of the mandatary, pay an advance for those costs.
(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (NNS costs))
        (VP (MD will)
          (VP (VB be)
            (VP (VBN incurred)
              (PP (IN in)
                (S
                  (VP (VBG administering)
                    (NP (DT the) (VBN mandated) (NN business))))))))))
    (, ,)
    (NP (DT the) (NN mandator))
    (VP (MD must) (, ,)
      (PP (IN at)
        (NP
          (NP (DT the) (NN request))
          (PP (IN of)
            (NP (DT the) (NN mandatary)))))
      (, ,)
      (VP (VB pay)
        (NP
          (NP (DT an) (NN advance))
          (PP (IN for)
            (NP (DT those) (NNS costs))))))
    (. .)))

mark(incurred-5, If-1)
nsubjpass(incurred-5, costs-2)
aux(incurred-5, will-3)
auxpass(incurred-5, be-4)
advcl(pay-23, incurred-5)
prepc_in(incurred-5, administering-7)
det(business-10, the-8)
amod(business-10, mandated-9)
dobj(administering-7, business-10)
det(mandator-13, the-12)
nsubj(pay-23, mandator-13)
aux(pay-23, must-14)
det(request-18, the-17)
prep_at(pay-23, request-18)
det(mandatary-21, the-20)
prep_of(request-18, mandatary-21)
root(ROOT-0, pay-23)
det(advance-25, an-24)
dobj(pay-23, advance-25)
det(costs-28, those-27)
prep_for(advance-25, costs-28)

</t1>
<t2>
In a lawsuit demanding the advance payment of costs by a mandatary based on the contract of mandate, proof must be demonstrated with objects of the claim of the conclusion of the contract of mandate and the determination of remuneration.
(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT a) (NN lawsuit))
        (VP (VBG demanding)
          (NP
            (NP (DT the) (NN advance) (NN payment))
            (PP (IN of)
              (NP (NNS costs))))
          (PP (IN by)
            (NP
              (NP (DT a) (NN mandatary))
              (VP (VBN based)
                (PP (IN on)
                  (NP
                    (NP (DT the) (NN contract))
                    (PP (IN of)
                      (NP (NN mandate)))))))))))
    (, ,)
    (NP (NN proof))
    (VP (MD must)
      (VP (VB be)
        (VP (VBN demonstrated)
          (PP (IN with)
            (NP
              (NP (NNS objects))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN claim))
                  (PP (IN of)
                    (NP
                      (NP (DT the) (NN conclusion))
                      (PP (IN of)
                        (NP
                          (NP
                            (NP (DT the) (NN contract))
                            (PP (IN of)
                              (NP (NN mandate))))
                          (CC and)
                          (NP
                            (NP (DT the) (NN determination))
                            (PP (IN of)
                              (NP (NN remuneration)))))))))))))))
    (. .)))

det(lawsuit-3, a-2)
prep_in(demonstrated-23, lawsuit-3)
partmod(lawsuit-3, demanding-4)
det(payment-7, the-5)
nn(payment-7, advance-6)
dobj(demanding-4, payment-7)
prep_of(payment-7, costs-9)
det(mandatary-12, a-11)
agent(demanding-4, mandatary-12)
partmod(mandatary-12, based-13)
det(contract-16, the-15)
prep_on(based-13, contract-16)
prep_of(contract-16, mandate-18)
nsubjpass(demonstrated-23, proof-20)
aux(demonstrated-23, must-21)
auxpass(demonstrated-23, be-22)
root(ROOT-0, demonstrated-23)
prep_with(demonstrated-23, objects-25)
det(claim-28, the-27)
prep_of(objects-25, claim-28)
det(conclusion-31, the-30)
prep_of(claim-28, conclusion-31)
det(contract-34, the-33)
prep_of(conclusion-31, contract-34)
prep_of(contract-34, mandate-36)
det(determination-39, the-38)
prep_of(conclusion-31, determination-39)
conj_and(contract-34, determination-39)
prep_of(determination-39, remuneration-41)

</t2>
</pair>
<pair id="H22-27-5" label="N">
<t1>
(Contracts for Work)Article 632
A contract for work shall become effective when one of the parties promises to complete work and the other party promises to pay remuneration for the outcome of the work.
(ROOT
  (S
    (NP
      (NP (DT A) (NN contract))
      (PP (IN for)
        (NP (NN work))))
    (VP (MD shall)
      (VP (VB become)
        (ADJP (JJ effective))
        (SBAR
          (WHADVP (WRB when))
          (S
            (S
              (NP
                (NP (CD one))
                (PP (IN of)
                  (NP (DT the) (NNS parties))))
              (VP (VBZ promises)
                (S
                  (VP (TO to)
                    (VP (VB complete)
                      (NP (NN work)))))))
            (CC and)
            (S
              (NP (DT the) (JJ other) (NN party))
              (VP (VBZ promises)
                (S
                  (VP (TO to)
                    (VP (VB pay)
                      (NP (NN remuneration))
                      (PP (IN for)
                        (NP
                          (NP (DT the) (NN outcome))
                          (PP (IN of)
                            (NP (DT the) (NN work))))))))))))))
    (. .)))

det(contract-2, A-1)
nsubj(effective-7, contract-2)
prep_for(contract-2, work-4)
aux(effective-7, shall-5)
cop(effective-7, become-6)
root(ROOT-0, effective-7)
advmod(promises-13, when-8)
nsubj(promises-13, one-9)
xsubj(complete-15, one-9)
det(parties-12, the-11)
prep_of(one-9, parties-12)
advcl(effective-7, promises-13)
aux(complete-15, to-14)
xcomp(promises-13, complete-15)
dobj(complete-15, work-16)
det(party-20, the-18)
amod(party-20, other-19)
nsubj(promises-21, party-20)
xsubj(pay-23, party-20)
advcl(effective-7, promises-21)
conj_and(promises-13, promises-21)
aux(pay-23, to-22)
xcomp(promises-21, pay-23)
dobj(pay-23, remuneration-24)
det(outcome-27, the-26)
prep_for(pay-23, outcome-27)
det(work-30, the-29)
prep_of(outcome-27, work-30)

</t1>
<t2>
In a lawsuit demanding the payment of remuneration based on a contract for work, proof must be demonstrated with objects of the claim that the contract for work has been concluded and, if the delivery of the subject matter of work is required, that this has been delivered.
(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (DT a) (NN lawsuit))
        (VP (VBG demanding)
          (NP
            (NP (DT the) (NN payment))
            (PP (IN of)
              (NP (NN remuneration))))
          (PP (VBN based)
            (PP (IN on)
              (NP
                (NP (DT a) (NN contract))
                (PP (IN for)
                  (NP (NN work)))))))))
    (, ,)
    (NP (NN proof))
    (VP (MD must)
      (VP (VB be)
        (VP (VBN demonstrated)
          (PP (IN with)
            (NP
              (NP (NNS objects))
              (PP (IN of)
                (NP
                  (NP (DT the) (NN claim))
                  (SBAR
                    (SBAR (IN that)
                      (S
                        (NP
                          (NP (DT the) (NN contract))
                          (PP (IN for)
                            (NP (NN work))))
                        (VP (VBZ has)
                          (VP (VBN been)
                            (VP (VBN concluded))))))
                    (CC and)
                    (, ,)
                    (SBAR (IN if)
                      (S
                        (NP
                          (NP (DT the) (NN delivery))
                          (PP (IN of)
                            (NP
                              (NP (DT the) (NN subject) (NN matter))
                              (PP (IN of)
                                (NP (NN work))))))
                        (VP (VBZ is)
                          (VP (VBN required) (, ,)
                            (SBAR (IN that)
                              (S
                                (NP (DT this))
                                (VP (VBZ has)
                                  (VP (VBN been)
                                    (VP (VBN delivered))))))))))))))))))
    (. .)))

det(lawsuit-3, a-2)
prep_in(demonstrated-19, lawsuit-3)
partmod(lawsuit-3, demanding-4)
det(payment-6, the-5)
dobj(demanding-4, payment-6)
prep_of(payment-6, remuneration-8)
prepc_based_on(demanding-4, on-10)
det(contract-12, a-11)
pobj(demanding-4, contract-12)
prep_for(contract-12, work-14)
nsubjpass(demonstrated-19, proof-16)
aux(demonstrated-19, must-17)
auxpass(demonstrated-19, be-18)
root(ROOT-0, demonstrated-19)
prep_with(demonstrated-19, objects-21)
det(claim-24, the-23)
prep_of(objects-21, claim-24)
dep(concluded-32, that-25)
det(contract-27, the-26)
nsubjpass(concluded-32, contract-27)
prep_for(contract-27, work-29)
aux(concluded-32, has-30)
auxpass(concluded-32, been-31)
dep(claim-24, concluded-32)
cc(concluded-32, and-33)
mark(required-45, if-35)
det(delivery-37, the-36)
nsubjpass(required-45, delivery-37)
det(matter-41, the-39)
nn(matter-41, subject-40)
prep_of(delivery-37, matter-41)
prep_of(matter-41, work-43)
auxpass(required-45, is-44)
dep(concluded-32, required-45)
complm(delivered-51, that-47)
nsubjpass(delivered-51, this-48)
aux(delivered-51, has-49)
auxpass(delivered-51, been-50)
ccomp(required-45, delivered-51)

</t2>
</pair>
<pair id="H22-28-1" label="Y">
<t1>
(Obligation of Beneficiaries in Bad Faith to Return)Article 704
A Beneficiary in bad faith must return the benefit received together with interest thereon.
(ROOT
  (S
    (NP
      (NP (DT A) (NN Beneficiary))
      (PP (IN in)
        (NP (JJ bad) (NN faith))))
    (VP (MD must)
      (VP (VB return)
        (NP
          (NP (DT the) (NN benefit))
          (VP (VBN received)
            (ADVP (RB together))
            (PP (IN with)
              (NP (NN interest) (NN thereon)))))))
    (. .)))

det(Beneficiary-2, A-1)
nsubj(return-7, Beneficiary-2)
amod(faith-5, bad-4)
prep_in(Beneficiary-2, faith-5)
aux(return-7, must-6)
root(ROOT-0, return-7)
det(benefit-9, the-8)
dobj(return-7, benefit-9)
partmod(benefit-9, received-10)
nn(thereon-14, interest-13)
prep_together_with(received-10, thereon-14)

In such cases, if any damages still remain, the Beneficiary shall be liable to compensate for the same.
(ROOT
  (S
    (PP (IN In)
      (NP (JJ such) (NNS cases)))
    (, ,)
    (SBAR (IN if)
      (S
        (NP (DT any) (NNS damages))
        (ADVP (RB still))
        (VP (VBP remain))))
    (, ,)
    (NP (DT the) (NNP Beneficiary))
    (VP (MD shall)
      (VP (VB be)
        (ADJP (JJ liable)
          (S
            (VP (TO to)
              (VP (VB compensate)
                (PP (IN for)
                  (NP (DT the) (JJ same)))))))))
    (. .)))

amod(cases-3, such-2)
prep_in(liable-15, cases-3)
mark(remain-9, if-5)
det(damages-7, any-6)
nsubj(remain-9, damages-7)
advmod(remain-9, still-8)
advcl(liable-15, remain-9)
det(Beneficiary-12, the-11)
nsubj(liable-15, Beneficiary-12)
aux(liable-15, shall-13)
cop(liable-15, be-14)
root(ROOT-0, liable-15)
aux(compensate-17, to-16)
xcomp(liable-15, compensate-17)
det(same-20, the-19)
prep_for(compensate-17, same-20)

</t1>
<t2>
The beneficiary in bad faith of unjust enrichment must return the benefit received together with interest, and if any damages still remain, the beneficiary shall be liable to compensate for the same.
(ROOT
  (S
    (S
      (NP
        (NP (DT The) (NN beneficiary))
        (PP (IN in)
          (NP
            (NP (JJ bad) (NN faith))
            (PP (IN of)
              (NP (JJ unjust) (NN enrichment))))))
      (VP (MD must)
        (VP (VB return)
          (NP
            (NP (DT the) (NN benefit))
            (VP (VBN received)
              (ADVP (RB together))
              (PP (IN with)
                (NP (NN interest))))))))
    (, ,)
    (CC and)
    (S
      (SBAR (IN if)
        (S
          (NP (DT any) (NNS damages))
          (ADVP (RB still))
          (VP (VBP remain))))
      (, ,)
      (NP (DT the) (NN beneficiary))
      (VP (MD shall)
        (VP (VB be)
          (ADJP (JJ liable)
            (S
              (VP (TO to)
                (VP (VB compensate)
                  (PP (IN for)
                    (NP (DT the) (JJ same))))))))))
    (. .)))

det(beneficiary-2, The-1)
nsubj(return-10, beneficiary-2)
amod(faith-5, bad-4)
prep_in(beneficiary-2, faith-5)
amod(enrichment-8, unjust-7)
prep_of(faith-5, enrichment-8)
aux(return-10, must-9)
root(ROOT-0, return-10)
det(benefit-12, the-11)
dobj(return-10, benefit-12)
partmod(benefit-12, received-13)
prep_together_with(received-13, interest-16)
mark(remain-23, if-19)
det(damages-21, any-20)
nsubj(remain-23, damages-21)
advmod(remain-23, still-22)
advcl(liable-29, remain-23)
det(beneficiary-26, the-25)
nsubj(liable-29, beneficiary-26)
aux(liable-29, shall-27)
cop(liable-29, be-28)
conj_and(return-10, liable-29)
aux(compensate-31, to-30)
xcomp(liable-29, compensate-31)
det(same-34, the-33)
prep_for(compensate-31, same-34)

</t2>
</pair>
<pair id="H22-28-2" label="N">
<t1>
(Performance knowing of Absence of Obligation)Article 705
A person who has tendered anything as performance of an obligation may not demand the return of the thing tendered if the person knew, at the time, that the obligation did not exist.
(ROOT
  (S
    (NP
      (NP (DT A) (NN person))
      (SBAR
        (WHNP (WP who))
        (S
          (VP (VBZ has)
            (VP (VBN tendered)
              (NP (NN anything))
              (PP (IN as)
                (NP
                  (NP (NN performance))
                  (PP (IN of)
                    (NP (DT an) (NN obligation))))))))))
    (VP (MD may) (RB not)
      (VP (VB demand)
        (NP
          (NP (DT the) (NN return))
          (PP (IN of)
            (NP
              (NP (DT the) (NN thing))
              (VP (VBN tendered)
                (SBAR (IN if)
                  (S
                    (NP (DT the) (NN person))
                    (VP (VBD knew) (, ,)
                      (PP (IN at)
                        (NP (DT the) (NN time)))
                      (, ,)
                      (SBAR (IN that)
                        (S
                          (NP (DT the) (NN obligation))
                          (VP (VBD did) (RB not)
                            (VP (VB exist))))))))))))))
    (. .)))

det(person-2, A-1)
nsubj(tendered-5, person-2)
nsubj(demand-14, person-2)
aux(tendered-5, has-4)
rcmod(person-2, tendered-5)
dobj(tendered-5, anything-6)
prep_as(tendered-5, performance-8)
det(obligation-11, an-10)
prep_of(performance-8, obligation-11)
aux(demand-14, may-12)
neg(demand-14, not-13)
root(ROOT-0, demand-14)
det(return-16, the-15)
dobj(demand-14, return-16)
det(thing-19, the-18)
prep_of(return-16, thing-19)
partmod(thing-19, tendered-20)
mark(knew-24, if-21)
det(person-23, the-22)
nsubj(knew-24, person-23)
advcl(tendered-20, knew-24)
det(time-28, the-27)
prep_at(knew-24, time-28)
complm(exist-35, that-30)
det(obligation-32, the-31)
nsubj(exist-35, obligation-32)
aux(exist-35, did-33)
neg(exist-35, not-34)
ccomp(knew-24, exist-35)

</t1>
<t2>
Even if an obligation does not exist, a person who knows that fact, or does not know by negligence and has tendered anything as performance of an obligation, that person cannot demand the return of the thing tendered.
(ROOT
  (S
    (SBAR (RB Even) (IN if)
      (S
        (NP (DT an) (NN obligation))
        (VP
          (VP (VBZ does) (RB not)
            (VP
              (VP (VB exist))
              (, ,)
              (NP
                (NP (DT a) (NN person))
                (SBAR
                  (WHNP (WP who))
                  (S
                    (VP
                      (VP (VBZ knows)
                        (NP (DT that) (NN fact)))
                      (, ,)
                      (CC or)
                      (VP (VBZ does) (RB not)
                        (VP (VB know)
                          (PP (IN by)
                            (NP (NN negligence)))))))))))
          (CC and)
          (VP (VBZ has)
            (VP (VBN tendered)
              (NP (NN anything))
              (PP (IN as)
                (NP
                  (NP (NN performance))
                  (PP (IN of)
                    (NP (DT an) (NN obligation))))))))))
    (, ,)
    (NP (DT that) (NN person))
    (VP (MD can) (RB not)
      (VP (VB demand)
        (NP
          (NP (DT the) (NN return))
          (PP (IN of)
            (NP
              (NP (DT the) (NN thing))
              (VP (VBN tendered)))))))
    (. .)))

advmod(exist-7, Even-1)
dep(exist-7, if-2)
det(obligation-4, an-3)
nsubj(exist-7, obligation-4)
nsubj(tendered-24, obligation-4)
aux(exist-7, does-5)
neg(exist-7, not-6)
advcl(demand-36, exist-7)
det(person-10, a-9)
dobj(exist-7, person-10)
nsubj(knows-12, person-10)
nsubj(know-19, person-10)
rcmod(person-10, knows-12)
det(fact-14, that-13)
dobj(knows-12, fact-14)
aux(know-19, does-17)
neg(know-19, not-18)
rcmod(person-10, know-19)
conj_or(knows-12, know-19)
prep_by(know-19, negligence-21)
aux(tendered-24, has-23)
conj_and(exist-7, tendered-24)
advcl(demand-36, tendered-24)
dobj(tendered-24, anything-25)
prep_as(tendered-24, performance-27)
det(obligation-30, an-29)
prep_of(performance-27, obligation-30)
det(person-33, that-32)
nsubj(demand-36, person-33)
aux(demand-36, can-34)
neg(demand-36, not-35)
root(ROOT-0, demand-36)
det(return-38, the-37)
dobj(demand-36, return-38)
det(thing-41, the-40)
prep_of(return-38, thing-41)
partmod(thing-41, tendered-42)

</t2>
</pair>
<pair id="H22-28-3" label="N">
<t1>
(Performance before Due Date)Article 706
If an obligor has tendered anything as performance of an obligation that has not yet fallen due, the obligor may not demand the return of the thing tendered;provided, however, that, if the obligor tendered anything by mistake, the obligee must return the benefit gained as a result.
(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT an) (NN obligor))
        (VP (VBZ has)
          (VP (VBN tendered)
            (NP (NN anything))
            (PP (IN as)
              (NP
                (NP (NN performance))
                (PP (IN of)
                  (NP
                    (NP (DT an) (NN obligation))
                    (SBAR
                      (WHNP (WDT that))
                      (S
                        (VP (VBZ has) (RB not)
                          (ADVP (RB yet))
                          (VP (VBN fallen)
                            (S
                              (ADJP (JJ due)))))))))))))))
    (, ,)
    (NP (DT the) (NN obligor))
    (VP (MD may) (RB not)
      (VP (VB demand)
        (NP
          (NP (DT the) (NN return))
          (PP (IN of)
            (NP
              (NP (DT the) (NN thing))
              (VP (VBN tendered))))
          (: ;)
          (SBAR
            (S
              (VP (VBD provided) (, ,)
                (ADVP (RB however))
                (, ,)
                (SBAR (IN that) (, ,)
                  (S
                    (SBAR (IN if)
                      (S
                        (NP (DT the) (NN obligor))
                        (VP (VBD tendered)
                          (NP (NN anything))
                          (PP (IN by)
                            (NP (NN mistake))))))
                    (, ,)
                    (NP (DT the) (NN obligee))
                    (VP (MD must)
                      (VP (VB return)
                        (NP
                          (NP (DT the) (NN benefit))
                          (VP (VBN gained)
                            (PP (IN as)
                              (NP (DT a) (NN result)))))))))))))))
    (. .)))

mark(tendered-5, If-1)
det(obligor-3, an-2)
nsubj(tendered-5, obligor-3)
aux(tendered-5, has-4)
advcl(demand-23, tendered-5)
dobj(tendered-5, anything-6)
prep_as(tendered-5, performance-8)
det(obligation-11, an-10)
prep_of(performance-8, obligation-11)
nsubj(fallen-16, obligation-11)
aux(fallen-16, has-13)
neg(fallen-16, not-14)
advmod(fallen-16, yet-15)
rcmod(obligation-11, fallen-16)
acomp(fallen-16, due-17)
det(obligor-20, the-19)
nsubj(demand-23, obligor-20)
aux(demand-23, may-21)
neg(demand-23, not-22)
root(ROOT-0, demand-23)
det(return-25, the-24)
dobj(demand-23, return-25)
det(thing-28, the-27)
prep_of(return-25, thing-28)
partmod(thing-28, tendered-29)
rcmod(return-25, provided-31)
advmod(provided-31, however-33)
complm(return-48, that-35)
mark(tendered-40, if-37)
det(obligor-39, the-38)
nsubj(tendered-40, obligor-39)
advcl(return-48, tendered-40)
dobj(tendered-40, anything-41)
prep_by(tendered-40, mistake-43)
det(obligee-46, the-45)
nsubj(return-48, obligee-46)
aux(return-48, must-47)
ccomp(provided-31, return-48)
det(benefit-50, the-49)
dobj(return-48, benefit-50)
partmod(benefit-50, gained-51)
det(result-54, a-53)
prep_as(gained-51, result-54)

</t1>
<t2>
In cases where an obligor mistakenly believes that a time of performance has arrived due to a mistake and has tended anything as  performance of his/her own obligation that has not yet fallen due , the obligor cannot demand the return of the thing tendered.
(ROOT
  (S
    (PP (IN In)
      (NP
        (NP (NNS cases))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP (DT an) (NN obligor))
            (ADVP (RB mistakenly))
            (VP (VBZ believes)
              (SBAR (IN that)
                (S
                  (NP
                    (NP (DT a) (NN time))
                    (PP (IN of)
                      (NP (NN performance))))
                  (VP
                    (VP (VBZ has)
                      (VP (VBN arrived)
                        (S
                          (ADJP (JJ due)
                            (PP (TO to)
                              (NP (DT a) (NN mistake)))))))
                    (CC and)
                    (VP (VBZ has)
                      (VP (VBN tended)
                        (NP (NN anything))
                        (PP (IN as)
                          (NP
                            (NP (NN performance))
                            (PP (IN of)
                              (NP
                                (NP (NN his\/her) (JJ own) (NN obligation))
                                (SBAR
                                  (WHNP (WDT that))
                                  (S
                                    (VP (VBZ has) (RB not)
                                      (ADVP (RB yet))
                                      (VP (VBN fallen)
                                        (S
                                          (ADJP (JJ due)))))))))))))))))))))
    (, ,)
    (NP (DT the) (NN obligor))
    (VP (MD can) (RB not)
      (VP (VB demand)
        (NP
          (NP (DT the) (NN return))
          (PP (IN of)
            (NP
              (NP (DT the) (NN thing))
              (VP (VBN tendered)))))))
    (. .)))

prep_in(demand-40, cases-2)
advmod(believes-7, where-3)
det(obligor-5, an-4)
nsubj(believes-7, obligor-5)
advmod(believes-7, mistakenly-6)
rcmod(cases-2, believes-7)
complm(arrived-14, that-8)
det(time-10, a-9)
nsubj(arrived-14, time-10)
nsubj(tended-21, time-10)
prep_of(time-10, performance-12)
aux(arrived-14, has-13)
ccomp(believes-7, arrived-14)
acomp(arrived-14, due-15)
det(mistake-18, a-17)
prep_to(due-15, mistake-18)
aux(tended-21, has-20)
ccomp(believes-7, tended-21)
conj_and(arrived-14, tended-21)
dobj(tended-21, anything-22)
prep_as(tended-21, performance-24)
nn(obligation-28, his\/her-26)
amod(obligation-28, own-27)
prep_of(performance-24, obligation-28)
nsubj(fallen-33, obligation-28)
aux(fallen-33, has-30)
neg(fallen-33, not-31)
advmod(fallen-33, yet-32)
rcmod(obligation-28, fallen-33)
acomp(fallen-33, due-34)
det(obligor-37, the-36)
nsubj(demand-40, obligor-37)
aux(demand-40, can-38)
neg(demand-40, not-39)
root(ROOT-0, demand-40)
det(return-42, the-41)
dobj(demand-40, return-42)
det(thing-45, the-44)
prep_of(return-42, thing-45)
partmod(thing-45, tendered-46)

</t2>
</pair>
<pair id="H22-28-4" label="N">
<t1>
(Performance of Obligations of Others)Article 707
(1)In cases where a person who is not an obligor has performed an obligation by mistake, if the obligee has, in good faith, allowed the instrument to be lost, damaged the instrument, waived the security or lost the claim by prescription, the person who performed the obligation may not demand the return of the performance.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 1) (-RRB- -RRB-))
    (PP (IN In)
      (NP
        (NP (NNS cases))
        (SBAR
          (WHADVP (WRB where))
          (S
            (NP
              (NP (DT a) (NN person))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBZ is) (RB not)
                    (NP (DT an) (NN obligor))))))
            (VP (VBZ has)
              (VP (VBN performed)
                (NP (DT an) (NN obligation))
                (PP (IN by)
                  (NP (NN mistake)))
                (, ,)
                (SBAR (IN if)
                  (S
                    (NP (DT the) (NN obligee))
                    (VP (VBZ has)
                      (VP (, ,)
                        (PP (IN in)
                          (NP (JJ good) (NN faith)))
                        (, ,) (VBD allowed)
                        (NP (DT the) (NN instrument)
                          (S
                            (VP (TO to)
                              (VP (VB be)
                                (VP (VBN lost))))))))))))))))
    (, ,)
    (VP
      (VP (VBD damaged)
        (NP (DT the) (NN instrument)))
      (, ,)
      (VP (VBD waived)
        (NP (DT the) (NN security)))
      (CC or)
      (VP (VBD lost)
        (NP (DT the) (NN claim))
        (PP (IN by)
          (NP
            (NP (NN prescription))
            (, ,)
            (NP
              (NP (DT the) (NN person))
              (SBAR
                (WHNP (WP who))
                (S
                  (VP (VBD performed)
                    (SBAR
                      (S
                        (NP (DT the) (NN obligation))
                        (VP (MD may) (RB not)
                          (VP (VB demand)
                            (NP
                              (NP (DT the) (NN return))
                              (PP (IN of)
                                (NP (DT the) (NN performance))))))))))))))))
    (. .)))

dep(damaged-37, 1-2)
prep_in(damaged-37, cases-5)
advmod(performed-15, where-6)
det(person-8, a-7)
nsubj(obligor-13, person-8)
nsubj(performed-15, person-8)
cop(obligor-13, is-10)
neg(obligor-13, not-11)
det(obligor-13, an-12)
rcmod(person-8, obligor-13)
aux(performed-15, has-14)
rcmod(cases-5, performed-15)
det(obligation-17, an-16)
dobj(performed-15, obligation-17)
prep_by(performed-15, mistake-19)
mark(allowed-30, if-21)
det(obligee-23, the-22)
nsubj(allowed-30, obligee-23)
aux(allowed-30, has-24)
amod(faith-28, good-27)
prep_in(allowed-30, faith-28)
advcl(performed-15, allowed-30)
det(instrument-32, the-31)
dobj(allowed-30, instrument-32)
aux(lost-35, to-33)
auxpass(lost-35, be-34)
infmod(instrument-32, lost-35)
root(ROOT-0, damaged-37)
det(instrument-39, the-38)
dobj(damaged-37, instrument-39)
conj_or(damaged-37, waived-41)
det(security-43, the-42)
dobj(waived-41, security-43)
conj_or(damaged-37, lost-45)
det(claim-47, the-46)
dobj(lost-45, claim-47)
prep_by(lost-45, prescription-49)
det(person-52, the-51)
appos(prescription-49, person-52)
nsubj(performed-54, person-52)
rcmod(person-52, performed-54)
det(obligation-56, the-55)
nsubj(demand-59, obligation-56)
aux(demand-59, may-57)
neg(demand-59, not-58)
ccomp(performed-54, demand-59)
det(return-61, the-60)
dobj(demand-59, return-61)
det(performance-64, the-63)
prep_of(return-61, performance-64)

(2)The provisions of the preceding paragraph shall not preclude the person who performed an obligation from exercising his/her right of subrogation against the obligor.
(ROOT
  (S
    (LST (-LRB- -LRB-) (LS 2) (-RRB- -RRB-))
    (NP
      (NP (DT The) (NNS provisions))
      (PP (IN of)
        (NP (DT the) (VBG preceding) (NN paragraph))))
    (VP (MD shall) (RB not)
      (VP (VB preclude)
        (NP
          (NP (DT the) (NN person))
          (SBAR
            (WHNP (WP who))
            (S
              (VP (VBD performed)
                (NP (DT an) (NN obligation))
                (PP (IN from)
                  (S
                    (VP (VBG exercising)
                      (NP
                        (NP (NN his\/her) (NN right))
                        (PP (IN of)
                          (NP (NN subrogation))))
                      (PP (IN against)
                        (NP (DT the) (NN obligor))))))))))))
    (. .)))

dep(preclude-12, 2-2)
det(provisions-5, The-4)
nsubj(preclude-12, provisions-5)
det(paragraph-9, the-7)
amod(paragraph-9, preceding-8)
prep_of(provisions-5, paragraph-9)
aux(preclude-12, shall-10)
neg(preclude-12, not-11)
root(ROOT-0, preclude-12)
det(person-14, the-13)
dobj(preclude-12, person-14)
nsubj(performed-16, person-14)
rcmod(person-14, performed-16)
det(obligation-18, an-17)
dobj(performed-16, obligation-18)
prepc_from(performed-16, exercising-20)
nn(right-22, his\/her-21)
dobj(exercising-20, right-22)
prep_of(right-22, subrogation-24)
det(obligor-27, the-26)
prep_against(exercising-20, obligor-27)

</t1>
<t2>
Performance by a third party is also effective, and thus even if the an obligation of another person has been performed by mistake, the person who made the performance cannot demand the return of the performance to the obligee.
(ROOT
  (S
    (S
      (NP
        (NP (NNP Performance))
        (PP (IN by)
          (NP (DT a) (JJ third) (NN party))))
      (VP (VBZ is)
        (ADVP (RB also))
        (ADJP (JJ effective))))
    (, ,)
    (CC and)
    (S
      (ADVP (RB thus) (RB even)
        (SBAR (IN if)
          (S
            (NP (DT the)
              (NP
                (NP (DT an) (NN obligation))
                (PP (IN of)
                  (NP (DT another) (NN person)))))
            (VP (VBZ has)
              (VP (VBN been)
                (VP (VBN performed)
                  (PP (IN by)
                    (NP (NN mistake)))))))))
      (, ,)
      (NP
        (NP (DT the) (NN person))
        (SBAR
          (WHNP (WP who))
          (S
            (VP (VBD made)
              (NP (DT the) (NN performance))))))
      (VP (MD can) (RB not)
        (VP (VB demand)
          (NP
            (NP (DT the) (NN return))
            (PP (IN of)
              (NP (DT the) (NN performance))))
          (PP (TO to)
            (NP (DT the) (NN obligee))))))
    (. .)))

nsubj(effective-8, Performance-1)
det(party-5, a-3)
amod(party-5, third-4)
prep_by(Performance-1, party-5)
cop(effective-8, is-6)
advmod(effective-8, also-7)
root(ROOT-0, effective-8)
advmod(even-12, thus-11)
advmod(demand-34, even-12)
mark(performed-22, if-13)
det(obligation-16, the-14)
det(obligation-16, an-15)
nsubjpass(performed-22, obligation-16)
det(person-19, another-18)
prep_of(obligation-16, person-19)
aux(performed-22, has-20)
auxpass(performed-22, been-21)
dep(even-12, performed-22)
agent(performed-22, mistake-24)
det(person-27, the-26)
nsubj(made-29, person-27)
nsubj(demand-34, person-27)
rcmod(person-27, made-29)
det(performance-31, the-30)
dobj(made-29, performance-31)
aux(demand-34, can-32)
neg(demand-34, not-33)
conj_and(effective-8, demand-34)
det(return-36, the-35)
dobj(demand-34, return-36)
det(performance-39, the-38)
prep_of(return-36, performance-39)
det(obligee-42, the-41)
prep_to(demand-34, obligee-42)

</t2>
</pair>
</dataset>
